{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\nvar _AnimatedWithChildren = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n  function findAnimatedStyles(node) {\n    if (typeof node.update === \"function\") {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\nvar AnimatedValue = function (_AnimatedWithChildren2) {\n  _inherits(AnimatedValue, _AnimatedWithChildren2);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue(value) {\n    var _this;\n    _classCallCheck(this, AnimatedValue);\n    _this = _super.call(this);\n    if (typeof value !== \"number\") {\n      throw new Error(\"AnimatedValue: Attempting to set value to undefined\");\n    }\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n  _createClass(AnimatedValue, [{\n    key: \"__detach\",\n    value: function __detach() {\n      var _this2 = this;\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n          _this2._value = value;\n        });\n      }\n      this.stopAnimation();\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._value + this._offset;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (this._animation) {\n        this._animation.stop();\n        this._animation = null;\n      }\n      this._updateValue(value, !this.__isNative);\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this._offset = offset;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n    }\n  }, {\n    key: \"_onAnimatedValueUpdateReceived\",\n    value: function _onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new _AnimatedInterpolation.default(this, config);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(animation, callback) {\n      var _this3 = this;\n      var handle = null;\n      if (animation.__isInteraction) {\n        handle = _InteractionManager.default.createInteractionHandle();\n      }\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, function (value) {\n        _this3._updateValue(value, true);\n      }, function (result) {\n        _this3._animation = null;\n        if (handle !== null) {\n          _InteractionManager.default.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n  }, {\n    key: \"stopTracking\",\n    value: function stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n  }, {\n    key: \"track\",\n    value: function track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error(\"AnimatedValue: Attempting to set value to undefined\");\n      }\n      this._value = value;\n      if (flush) {\n        _flush(this);\n      }\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__callListeners\", this).call(this, this.__getValue());\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: \"value\",\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }]);\n  return AnimatedValue;\n}(_AnimatedWithChildren.default);\nvar _default = AnimatedValue;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_AnimatedInterpolation","_AnimatedWithChildren","_InteractionManager","_NativeAnimatedHelper","NativeAnimatedAPI","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","AnimatedValue","constructor","value","Error","_startingValue","_value","_offset","_animation","__detach","__isNative","getValue","__getNativeTag","stopAnimation","__getValue","setValue","stop","_updateValue","setAnimatedNodeValue","setOffset","offset","setAnimatedNodeOffset","flattenOffset","flattenAnimatedNodeOffset","extractOffset","extractAnimatedNodeOffset","callback","stopTracking","resetAnimation","_onAnimatedValueUpdateReceived","interpolate","config","animate","animation","handle","__isInteraction","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","track","tracking","flush","undefined","__getNativeConfig","type","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedWithChildren = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  /* $FlowFixMe */\n\n  animatedStyles.forEach(animatedStyle => animatedStyle.update());\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue.html\n */\n\n\nclass AnimatedValue extends _AnimatedWithChildren.default {\n  constructor(value) {\n    super();\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n  }\n\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    super.__detach();\n  }\n\n  __getValue() {\n    return this._value + this._offset;\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setvalue\n   */\n\n\n  setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setoffset\n   */\n\n\n  setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#flattenoffset\n   */\n\n\n  flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#extractoffset\n   */\n\n\n  extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#stopanimation\n   */\n\n\n  stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#resetanimation\n   */\n\n\n  resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false\n    /*flush*/\n    );\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n\n\n  interpolate(config) {\n    return new _AnimatedInterpolation.default(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#animate\n   */\n\n\n  animate(animation, callback) {\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = _InteractionManager.default.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, value => {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      this._updateValue(value, true\n      /* flush */\n      );\n    }, result => {\n      this._animation = null;\n\n      if (handle !== null) {\n        _InteractionManager.default.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n\n\n  stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n\n\n  track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  }\n\n  _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    super.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  }\n\n}\n\nvar _default = AnimatedValue;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}