{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.get = get;\nexports.getEnforcing = getEnforcing;\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nfunction get(name) {\n  return null;\n}\nfunction getEnforcing(name) {\n  var module = get(name);\n  (0, _invariant.default)(module != null, \"TurboModuleRegistry.getEnforcing(...): '\" + name + \"' could not be found. \" + \"Verify that a module by this name is registered in the native binary.\");\n  return module;\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/TurboModule/TurboModuleRegistry.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","get","getEnforcing","_invariant","name","module"],"mappings":"AASA,YAAA;;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQE,GAAG,GAAGA,GAAAA;AACdF,OAAAA,CAAQG,YAAY,GAAGA,YAAAA;AAEvB,IAAIC,UAAAA,GAAaP,sBAAAA,CAAuBC,OAAAA,CAAQ,oBAAA,CAAA,CAAA;AAEhD,SAASI,GAAAA,CAAIG,IAAI,EAAE;EACjB,OAAO,IAAI;AACb;AAEA,SAASF,YAAAA,CAAaE,IAAI,EAAE;EAC1B,IAAIC,MAAAA,GAASJ,GAAAA,CAAIG,IAAAA,CAAAA;EAChB,CAAA,CAAA,EAAGD,UAAAA,CAAWL,OAAO,EAAEO,MAAAA,IAAU,IAAI,EAAE,0CAAA,GAA6CD,IAAAA,GAAO,wBAAA,GAA2B,uEAAA,CAAA;EACvH,OAAOC,MAAAA;AACT","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.get = get;\nexports.getEnforcing = getEnforcing;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction get(name) {\n  return null;\n}\n\nfunction getEnforcing(name) {\n  var module = get(name);\n  (0, _invariant.default)(module != null, \"TurboModuleRegistry.getEnforcing(...): '\" + name + \"' could not be found. \" + 'Verify that a module by this name is registered in the native binary.');\n  return module;\n}"]},"metadata":{},"sourceType":"script"}