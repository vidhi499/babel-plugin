{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\nvar _AnimatedWithChildren = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\nvar AnimatedDiffClamp = function (_AnimatedWithChildren2) {\n  _inherits(AnimatedDiffClamp, _AnimatedWithChildren2);\n  var _super = _createSuper(AnimatedDiffClamp);\n  function AnimatedDiffClamp(a, min, max) {\n    var _this;\n    _classCallCheck(this, AnimatedDiffClamp);\n    _this = _super.call(this);\n    _this._a = a;\n    _this._min = min;\n    _this._max = max;\n    _this._value = _this._lastValue = _this._a.__getValue();\n    return _this;\n  }\n  _createClass(AnimatedDiffClamp, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._a.__makeNative();\n      _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new _AnimatedInterpolation.default(this, config);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var value = this._a.__getValue();\n      var diff = value - this._lastValue;\n      this._lastValue = value;\n      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n      return this._value;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._a.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._a.__removeChild(this);\n      _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: \"diffclamp\",\n        input: this._a.__getNativeTag(),\n        min: this._min,\n        max: this._max\n      };\n    }\n  }]);\n  return AnimatedDiffClamp;\n}(_AnimatedWithChildren.default);\nvar _default = AnimatedDiffClamp;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/nodes/AnimatedDiffClamp.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_AnimatedInterpolation","_AnimatedNode","_AnimatedWithChildren","AnimatedDiffClamp","constructor","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","__makeNative","interpolate","config","value","diff","Math","__attach","__addChild","__detach","__removeChild","__getNativeConfig","type","input","__getNativeTag","_default","module"],"mappings":"AASA,YAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,sBAAAA,GAAyBL,sBAAAA,CAAuBC,OAAAA,2BAAQ,CAAA;AAE5D,IAAIK,aAAAA,GAAgBN,sBAAAA,CAAuBC,OAAAA,kBAAQ,CAAA;AAEnD,IAAIM,qBAAAA,GAAwBP,sBAAAA,CAAuBC,OAAAA,0BAAQ,CAAA;AAAA,IAErDO,iBAAAA;EAAAA;EAAAA;EACJC,2BAAYC,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAAA;IAAA;IACvB;IACA,MAAKC,EAAE,GAAGH,CAAAA;IACV,MAAKI,IAAI,GAAGH,GAAAA;IACZ,MAAKI,IAAI,GAAGH,GAAAA;IACZ,MAAKI,MAAM,GAAG,MAAKC,UAAU,GAAG,MAAKJ,EAAE,CAACK,UAAU,EAAA;IAAA;EACpD;EAAA;IAAA;IAAA,OAEAC,wBAAe;MACb,IAAI,CAACN,EAAE,CAACM,YAAY,EAAA;MAEpB;IACF;EAAA;IAAA;IAAA,OAEAC,qBAAYC,MAAM,EAAE;MAClB,OAAO,IAAIhB,sBAAAA,CAAuBH,OAAO,CAAC,IAAI,EAAEmB,MAAAA,CAAAA;IAClD;EAAA;IAAA;IAAA,OAEAH,sBAAa;MACX,IAAII,KAAAA,GAAQ,IAAI,CAACT,EAAE,CAACK,UAAU,EAAA;MAE9B,IAAIK,IAAAA,GAAOD,KAAAA,GAAQ,IAAI,CAACL,UAAU;MAClC,IAAI,CAACA,UAAU,GAAGK,KAAAA;MAClB,IAAI,CAACN,MAAM,GAAGQ,IAAAA,CAAKb,GAAG,CAACa,IAAAA,CAAKZ,GAAG,CAAC,IAAI,CAACI,MAAM,GAAGO,IAAAA,EAAM,IAAI,CAACT,IAAI,CAAA,EAAG,IAAI,CAACC,IAAI,CAAA;MACzE,OAAO,IAAI,CAACC,MAAM;IACpB;EAAA;IAAA;IAAA,OAEAS,oBAAW;MACT,IAAI,CAACZ,EAAE,CAACa,UAAU,CAAC,IAAI,CAAA;IACzB;EAAA;IAAA;IAAA,OAEAC,oBAAW;MACT,IAAI,CAACd,EAAE,CAACe,aAAa,CAAC,IAAI,CAAA;MAE1B;IACF;EAAA;IAAA;IAAA,OAEAC,6BAAoB;MAClB,OAAO;QACLC,IAAAA,EAAM,WAAA;QACNC,KAAAA,EAAO,IAAI,CAAClB,EAAE,CAACmB,cAAc,EAAA;QAC7BrB,GAAAA,EAAK,IAAI,CAACG,IAAI;QACdF,GAAAA,EAAK,IAAI,CAACG;MACZ,CAAA;IACF;EAAA;EAAA;AAAA,EA7C8BR,qBAAAA,CAAsBL,OAAO;AAiD7D,IAAI+B,QAAAA,GAAWzB,iBAAAA;AACfL,OAAAA,CAAQD,OAAO,GAAG+B,QAAAA;AAClBC,MAAAA,CAAO/B,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedWithChildren = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nclass AnimatedDiffClamp extends _AnimatedWithChildren.default {\n  constructor(a, min, max) {\n    super();\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    super.__makeNative();\n  }\n\n  interpolate(config) {\n    return new _AnimatedInterpolation.default(this, config);\n  }\n\n  __getValue() {\n    var value = this._a.__getValue();\n\n    var diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max\n    };\n  }\n\n}\n\nvar _default = AnimatedDiffClamp;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}