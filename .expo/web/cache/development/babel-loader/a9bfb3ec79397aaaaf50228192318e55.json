{"ast":null,"code":"var uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\nexport default hyphenateStyleName;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/compiler/hyphenateStyleName.js"],"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateStyleName","name","hName","replace","test"],"mappings":"AAQA,IAAIA,gBAAgB,GAAG,QAAvB;AACA,IAAIC,SAAS,GAAG,MAAhB;AACA,IAAIC,KAAK,GAAG,CAAA,CAAZ;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,OAAO,GAAA,GAAMA,KAAK,CAACC,WAAND,EAAb;AACD;AAED,SAASE,kBAAT,CAA4BC,IAA5B,EAAkC;EAChC,IAAIA,IAAI,IAAIL,KAAZ,EAAmB;IACjB,OAAOA,KAAK,CAACK,IAAD,CAAZ;EACD;EAED,IAAIC,KAAK,GAAGD,IAAI,CAACE,OAALF,CAAaP,gBAAbO,EAA+BJ,aAA/BI,CAAZ;EACA,OAAOL,KAAK,CAACK,IAAD,CAALL,GAAcD,SAAS,CAACS,IAAVT,CAAeO,KAAfP,CAAAA,GAAwB,GAAA,GAAMO,KAA9BP,GAAsCO,KAA3D;AACD;AAED,eAAeF,kBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\n\nexport default hyphenateStyleName;"]},"metadata":{},"sourceType":"module"}