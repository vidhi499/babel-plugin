{"ast":null,"code":"var accessibilityRoleToWebRole = {\n  adjustable: \"slider\",\n  button: \"button\",\n  header: \"heading\",\n  image: \"img\",\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: \"link\",\n  none: \"presentation\",\n  search: \"search\",\n  summary: \"region\",\n  text: null\n};\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n    if (inferredRole !== null) {\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\nexport default propsToAriaRole;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","_ref","accessibilityRole","inferredRole"],"mappings":"AAQA,IAAIA,0BAAAA,GAA6B;EAC/BC,UAAAA,EAAY,QAAA;EACZC,MAAAA,EAAQ,QAAA;EACRC,MAAAA,EAAQ,SAAA;EACRC,KAAAA,EAAO,KAAA;EACPC,WAAAA,EAAa,IAAI;EACjBC,WAAAA,EAAa,IAAI;EACjBC,KAAAA,EAAO,IAAI;EACXC,IAAAA,EAAM,MAAA;EACNC,IAAAA,EAAM,cAAA;EACNC,MAAAA,EAAQ,QAAA;EACRC,OAAAA,EAAS,QAAA;EACTC,IAAAA,EAAM;AACR,CAAA;AAEA,IAAIC,eAAAA,GAAkBC,SAAlBD,eAAAA,CAAkBC,IAAAA,EAAQ;EAC5B,IAAIC,iBAAAA,GAAoBD,IAAAA,CAAKC,iBAAiB;EAE9C,IAAIA,iBAAAA,EAAmB;IACrB,IAAIC,YAAAA,GAAehB,0BAA0B,CAACe,iBAAAA,CAAkB;IAEhE,IAAIC,YAAAA,KAAiB,IAAI,EAAE;MAEzB,OAAOA,YAAAA,IAAgBD,iBAAAA;IACzB;EACF;AACF,CAAA;AAEA,eAAeF,eAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = _ref => {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;"]},"metadata":{},"sourceType":"module"}