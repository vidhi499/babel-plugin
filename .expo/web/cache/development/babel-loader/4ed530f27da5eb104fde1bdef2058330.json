{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\nvar AnimatedNode = function () {\n  function AnimatedNode() {\n    _classCallCheck(this, AnimatedNode);\n    this._listeners = {};\n  }\n  _createClass(AnimatedNode, [{\n    key: \"__attach\",\n    value: function __attach() {}\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this.__nativeTag != null) {\n        NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n        this.__nativeTag = undefined;\n      }\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {}\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this.__getValue();\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {}\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {}\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return [];\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        throw new Error('This node cannot be made a \"native\" animated node');\n      }\n      if (this.hasListeners()) {\n        this._startListeningToNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var id = String(_uniqueId++);\n      this._listeners[id] = callback;\n      if (this.__isNative) {\n        this._startListeningToNativeValueUpdates();\n      }\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      delete this._listeners[id];\n      if (this.__isNative && !this.hasListeners()) {\n        this._stopListeningForNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this._listeners = {};\n      if (this.__isNative) {\n        this._stopListeningForNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"hasListeners\",\n    value: function hasListeners() {\n      return !!Object.keys(this._listeners).length;\n    }\n  }, {\n    key: \"_startListeningToNativeValueUpdates\",\n    value: function _startListeningToNativeValueUpdates() {\n      var _this = this;\n      if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n        return;\n      }\n      if (this.__shouldUpdateListenersForNewNativeTag) {\n        this.__shouldUpdateListenersForNewNativeTag = false;\n        this._stopListeningForNativeValueUpdates();\n      }\n      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n        if (data.tag !== _this.__getNativeTag()) {\n          return;\n        }\n        _this._onAnimatedValueUpdateReceived(data.value);\n      });\n    }\n  }, {\n    key: \"_onAnimatedValueUpdateReceived\",\n    value: function _onAnimatedValueUpdateReceived(value) {\n      this.__callListeners(value);\n    }\n  }, {\n    key: \"__callListeners\",\n    value: function __callListeners(value) {\n      for (var _key in this._listeners) {\n        this._listeners[_key]({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"_stopListeningForNativeValueUpdates\",\n    value: function _stopListeningForNativeValueUpdates() {\n      if (!this.__nativeAnimatedValueListener) {\n        return;\n      }\n      this.__nativeAnimatedValueListener.remove();\n      this.__nativeAnimatedValueListener = null;\n      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n    }\n  }, {\n    key: \"__getNativeTag\",\n    value: function __getNativeTag() {\n      var _this$__nativeTag;\n      NativeAnimatedHelper.assertNativeAnimatedModule();\n      invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n      var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n      if (this.__nativeTag == null) {\n        this.__nativeTag = nativeTag;\n        NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n        this.__shouldUpdateListenersForNewNativeTag = true;\n      }\n      return nativeTag;\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      throw new Error('This JS animated node type cannot be used as native animated node');\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.__getValue();\n    }\n  }]);\n  return AnimatedNode;\n}();\nexport default AnimatedNode;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedNode.js"],"names":["NativeAnimatedHelper","NativeAnimatedAPI","API","invariant","_uniqueId","AnimatedNode","__isNative","__nativeTag","dropAnimatedNode","undefined","__getValue","child","_listeners","Error","hasListeners","_startListeningToNativeValueUpdates","callback","id","String","_stopListeningForNativeValueUpdates","Object","keys","length","__nativeAnimatedValueListener","__shouldUpdateListenersForNewNativeTag","startListeningToAnimatedNodeValue","__getNativeTag","nativeEventEmitter","addListener","data","tag","_onAnimatedValueUpdateReceived","value","__callListeners","_key","remove","stopListeningToAnimatedNodeValue","_this$__nativeTag","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nclass AnimatedNode {\n  __attach() {}\n\n  __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n\n  __getValue() {}\n\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n\n  __addChild(child) {}\n\n  __removeChild(child) {}\n\n  __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n\n\n  removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n\n      this._onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value\n      });\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  }\n\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n\n  toJSON() {\n    return this.__getValue();\n  }\n\n}\n\nexport default AnimatedNode;"]},"metadata":{},"sourceType":"module"}