{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\nvar initialURL = _canUseDom.default ? window.location.href : \"\";\nvar Linking = function () {\n  function Linking() {\n    var _this = this;\n    _classCallCheck(this, Linking);\n    this._eventCallbacks = {};\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n      _this._eventCallbacks[event].push(callback);\n    };\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n  _createClass(Linking, [{\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent(event) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n      var listeners = this._eventCallbacks[event];\n      if (listeners != null && Array.isArray(listeners)) {\n        listeners.map(function (listener) {\n          listener.apply(void 0, data);\n        });\n      }\n    }\n  }, {\n    key: \"canOpenURL\",\n    value: function canOpenURL() {\n      return Promise.resolve(true);\n    }\n  }, {\n    key: \"getInitialURL\",\n    value: function getInitialURL() {\n      return Promise.resolve(initialURL);\n    }\n  }, {\n    key: \"openURL\",\n    value: function openURL(url, target) {\n      if (arguments.length === 1) {\n        target = \"_blank\";\n      }\n      try {\n        open(url, target);\n        this._dispatchEvent(\"onOpen\", url);\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }, {\n    key: \"_validateURL\",\n    value: function _validateURL(url) {\n      (0, _invariant.default)(typeof url === \"string\", \"Invalid URL: should be a string. Was: \" + url);\n      (0, _invariant.default)(url, \"Invalid URL: cannot be empty\");\n    }\n  }]);\n  return Linking;\n}();\nvar open = function open(url, target) {\n  if (_canUseDom.default) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf(\"tel:\") === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, \"noopener\");\n    }\n  }\n};\nvar _default = new Linking();\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/Linking/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_invariant","_canUseDom","initialURL","window","location","href","Linking","constructor","_eventCallbacks","addEventListener","event","callback","push","removeEventListener","callbacks","filteredCallbacks","filter","c","toString","_dispatchEvent","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","target","open","e","reject","_validateURL","urlToOpen","URL","indexOf","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar initialURL = _canUseDom.default ? window.location.href : '';\n\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n\n    this.addEventListener = (event, callback) => {\n      if (!this._eventCallbacks[event]) {\n        this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = (event, callback) => {\n      var callbacks = this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n      this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n\n\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n\n\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n\n    try {\n      open(url, target);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  _validateURL(url) {\n    (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n  }\n\n}\n\nvar open = (url, target) => {\n  if (_canUseDom.default) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\n\nvar _default = new Linking();\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}