{"ast":null,"code":"import getBoundingClientRect from \"../../modules/getBoundingClientRect\";\nimport setValueForStyles from \"../../modules/setValueForStyles\";\nvar getRect = function getRect(node) {\n  var _getBoundingClientRec = getBoundingClientRect(node),\n    x = _getBoundingClientRec.x,\n    y = _getBoundingClientRec.y,\n    top = _getBoundingClientRec.top,\n    left = _getBoundingClientRec.left;\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getBoundingClientRect(relativeNode);\n      var _getRect = getRect(node),\n        height = _getRect.height,\n        left = _getRect.left,\n        top = _getRect.top,\n        width = _getRect.width;\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName;\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n          height = _getRect2.height,\n          left = _getRect2.left,\n          top = _getRect2.top,\n          width = _getRect2.width;\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n      var value = props[prop];\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value);\n            break;\n          }\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n        case 'text':\n        case 'value':\n          node.value = value;\n          break;\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nexport default UIManager;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/UIManager/index.js"],"names":["getBoundingClientRect","setValueForStyles","getRect","_getBoundingClientRec","node","x","y","top","left","width","offsetWidth","height","offsetHeight","measureLayout","relativeToNativeNode","callback","relativeNode","parentNode","setTimeout","relativeRect","_getRect","focusableElements","A","INPUT","SELECT","TEXTAREA","UIManager","blur","err","focus","name","nodeName","getAttribute","setAttribute","measure","measureInWindow","_getRect2","onFail","onSuccess","updateView","props","prop","Object","prototype","hasOwnProperty","call","value","configureNextLayoutAnimation","config","onAnimationDidEnd","setLayoutAnimationEnabledExperimental"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport getBoundingClientRect from '../../modules/getBoundingClientRect';\nimport setValueForStyles from '../../modules/setValueForStyles';\n\nvar getRect = node => {\n  // Unlike the DOM's getBoundingClientRect, React Native layout measurements\n  // for \"height\" and \"width\" ignore scale transforms.\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n  var _getBoundingClientRec = getBoundingClientRect(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x,\n    y,\n    width,\n    height,\n    top,\n    left\n  };\n};\n\nvar measureLayout = (node, relativeToNativeNode, callback) => {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(() => {\n      var relativeRect = getBoundingClientRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n\n  focus(node) {\n    try {\n      var name = node.nodeName; // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n\n  measure(node, callback) {\n    measureLayout(node, null, callback);\n  },\n\n  measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(() => {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n\n  measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n\n  updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n\n  configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n\n  // mocks\n  setLayoutAnimationEnabledExperimental() {}\n\n};\nexport default UIManager;"]},"metadata":{},"sourceType":"module"}