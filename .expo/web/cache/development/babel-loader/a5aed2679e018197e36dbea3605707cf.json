{"ast":null,"code":"var unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/compiler/unitlessNumbers.js"],"names":["unitlessNumbers","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","charAt","toUpperCase","substring","Object","keys","forEach","prop"],"mappings":"AASA,IAAIA,eAAe,GAAG;EACpBC,uBAAuB,EAAE,IADL;EAEpBC,WAAW,EAAE,IAFO;EAGpBC,iBAAiB,EAAE,IAHC;EAIpBC,gBAAgB,EAAE,IAJE;EAKpBC,gBAAgB,EAAE,IALE;EAMpBC,OAAO,EAAE,IANW;EAOpBC,YAAY,EAAE,IAPM;EAQpBC,eAAe,EAAE,IARG;EASpBC,WAAW,EAAE,IATO;EAUpBC,IAAI,EAAE,IAVc;EAWpBC,QAAQ,EAAE,IAXU;EAYpBC,SAAS,EAAE,IAZS;EAapBC,YAAY,EAAE,IAbM;EAcpBC,UAAU,EAAE,IAdQ;EAepBC,YAAY,EAAE,IAfM;EAgBpBC,UAAU,EAAE,IAhBQ;EAiBpBC,OAAO,EAAE,IAjBW;EAkBpBC,UAAU,EAAE,IAlBQ;EAmBpBC,UAAU,EAAE,IAnBQ;EAoBpBC,YAAY,EAAE,IApBM;EAqBpBC,UAAU,EAAE,IArBQ;EAsBpBC,aAAa,EAAE,IAtBK;EAuBpBC,aAAa,EAAE,IAvBK;EAwBpBC,eAAe,EAAE,IAxBG;EAyBpBC,SAAS,EAAE,IAzBS;EA0BpBC,OAAO,EAAE,IA1BW;EA2BpBC,KAAK,EAAE,IA3Ba;EA4BpBC,OAAO,EAAE,IA5BW;EA6BpBC,OAAO,EAAE,IA7BW;EA8BpBC,MAAM,EAAE,IA9BY;EA+BpBC,MAAM,EAAE,IA/BY;EAgCpBC,IAAI,EAAE,IAhCc;EAkCpBC,WAAW,EAAE,IAlCO;EAmCpBC,YAAY,EAAE,IAnCM;EAoCpBC,WAAW,EAAE,IApCO;EAqCpBC,eAAe,EAAE,IArCG;EAsCpBC,gBAAgB,EAAE,IAtCE;EAuCpBC,gBAAgB,EAAE,IAvCE;EAwCpBC,aAAa,EAAE,IAxCK;EAyCpBC,WAAW,EAAE,IAzCO;EA2CpBC,KAAK,EAAE,IA3Ca;EA4CpBC,MAAM,EAAE,IA5CY;EA6CpBC,MAAM,EAAE,IA7CY;EA8CpBC,MAAM,EAAE,IA9CY;EAgDpBC,aAAa,EAAE;AAhDK,CAAtB;AAuDA,IAAIC,QAAQ,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAAf;AAEA,IAAIC,SAAS,GAATA,SAAAA,SAAY,CAACC,MAAD,EAASC,GAAT,EAAiB;EAC/B,OAAOD,MAAM,GAAGC,GAAG,CAACC,MAAJD,CAAW,CAAXA,CAAAA,CAAcE,WAAdF,EAATD,GAAuCC,GAAG,CAACG,SAAJH,CAAc,CAAdA,CAA9C;AACD,CAFD;AAIAI,MAAM,CAACC,IAAPD,CAAYrD,eAAZqD,CAAAA,CAA6BE,OAA7BF,CAAqC,UAAA,IAAI,EAAI;EAC3CP,QAAQ,CAACS,OAATT,CAAiB,UAAA,MAAM,EAAI;IACzB9C,eAAe,CAAC+C,SAAS,CAACC,MAAD,EAASQ,IAAT,CAAV,CAAfxD,GAA2CA,eAAe,CAACwD,IAAD,CAA1DxD;EACD,CAFD8C,CAAAA;AAGD,CAJDO,CAAAA;AAKA,eAAerD,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true\n};\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = (prefix, key) => {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(prop => {\n  prefixes.forEach(prefix => {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;"]},"metadata":{},"sourceType":"module"}