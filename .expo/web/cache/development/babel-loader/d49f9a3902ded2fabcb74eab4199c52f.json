{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport Animation from \"./Animation\";\nimport { shouldUseNativeDriver } from \"../NativeAnimatedHelper\";\nvar DecayAnimation = function (_Animation) {\n  _inherits(DecayAnimation, _Animation);\n  var _super = _createSuper(DecayAnimation);\n  function DecayAnimation(config) {\n    var _this;\n    _classCallCheck(this, DecayAnimation);\n    var _config$deceleration, _config$isInteraction, _config$iterations;\n    _this = _super.call(this);\n    _this._deceleration = (_config$deceleration = config.deceleration) !== null && _config$deceleration !== void 0 ? _config$deceleration : 0.998;\n    _this._velocity = config.velocity;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    return _this;\n  }\n  _createClass(DecayAnimation, [{\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      return {\n        type: 'decay',\n        deceleration: this._deceleration,\n        velocity: this._velocity,\n        iterations: this.__iterations\n      };\n    }\n  }, {\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n      this.__active = true;\n      this._lastValue = fromValue;\n      this._fromValue = fromValue;\n      this._onUpdate = onUpdate;\n      this.__onEnd = onEnd;\n      this._startTime = Date.now();\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate() {\n      var now = Date.now();\n      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));\n      this._onUpdate(value);\n      if (Math.abs(this._lastValue - value) < 0.1) {\n        this.__debouncedOnEnd({\n          finished: true\n        });\n        return;\n      }\n      this._lastValue = value;\n      if (this.__active) {\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      _get(_getPrototypeOf(DecayAnimation.prototype), \"stop\", this).call(this);\n      this.__active = false;\n      global.cancelAnimationFrame(this._animationFrame);\n      this.__debouncedOnEnd({\n        finished: false\n      });\n    }\n  }]);\n  return DecayAnimation;\n}(Animation);\nexport default DecayAnimation;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/DecayAnimation.js"],"names":["Animation","shouldUseNativeDriver","DecayAnimation","config","_config$deceleration","_config$isInteraction","_config$iterations","_deceleration","deceleration","_velocity","velocity","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","type","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_lastValue","_fromValue","_onUpdate","__onEnd","_startTime","Date","now","__startNativeAnimation","_animationFrame","requestAnimationFrame","bind","value","Math","exp","abs","__debouncedOnEnd","finished","global","cancelAnimationFrame"],"mappings":"AASA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,SAAP;AACA,SAASC,qBAAT;AAEMC,IAAAA,c;;;EACJ,SAAA,cAAA,CAAYC,MAAZ,EAAoB;IAAA,IAAA,KAAA;IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;IAClB,IAAIC,oBAAJ,EAA0BC,qBAA1B,EAAiDC,kBAAjD;IAEA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;IACA,KAAA,CAAKC,aAAL,GAAqB,CAACH,oBAAoB,GAAGD,MAAM,CAACK,YAA/B,MAAiD,IAAjD,IAAyDJ,oBAAoB,KAAK,KAAK,CAAvF,GAA2FA,oBAA3F,GAAkH,KAAvI;IACA,KAAA,CAAKK,SAAL,GAAiBN,MAAM,CAACO,QAAxB;IACA,KAAA,CAAKC,gBAAL,GAAwBV,qBAAqB,CAACE,MAAD,CAA7C;IACA,KAAA,CAAKS,eAAL,GAAuB,CAACP,qBAAqB,GAAGF,MAAM,CAACU,aAAhC,MAAmD,IAAnD,IAA2DR,qBAAqB,KAAK,KAAK,CAA1F,GAA8FA,qBAA9F,GAAsH,CAAC,KAAA,CAAKM,gBAAnJ;IACA,KAAA,CAAKG,YAAL,GAAoB,CAACR,kBAAkB,GAAGH,MAAM,CAACY,UAA7B,MAA6C,IAA7C,IAAqDT,kBAAkB,KAAK,KAAK,CAAjF,GAAqFA,kBAArF,GAA0G,CAA9H;IARkB,OAAA,KAAA;EASnB;;;WAED,SAAA,0BAAA,GAA6B;MAC3B,OAAO;QACLU,IAAI,EAAE,OADD;QAELR,YAAY,EAAE,IAAA,CAAKD,aAFd;QAGLG,QAAQ,EAAE,IAAA,CAAKD,SAHV;QAILM,UAAU,EAAE,IAAA,CAAKD;MAJZ,CAAP;IAMD;;;WAED,SAAA,KAAA,CAAMG,SAAN,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,iBAAlC,EAAqDC,aAArD,EAAoE;MAClE,IAAA,CAAKC,QAAL,GAAgB,IAAhB;MACA,IAAA,CAAKC,UAAL,GAAkBN,SAAlB;MACA,IAAA,CAAKO,UAAL,GAAkBP,SAAlB;MACA,IAAA,CAAKQ,SAAL,GAAiBP,QAAjB;MACA,IAAA,CAAKQ,OAAL,GAAeP,KAAf;MACA,IAAA,CAAKQ,UAAL,GAAkBC,IAAI,CAACC,GAALD,EAAlB;MAEA,IAAI,IAAA,CAAKjB,gBAAT,EAA2B;QACzB,IAAA,CAAKmB,sBAAL,CAA4BT,aAA5B,CAAA;MACD,CAFD,MAEO;QACL,IAAA,CAAKU,eAAL,GAAuBC,qBAAqB,CAAC,IAAA,CAAKd,QAAL,CAAce,IAAd,CAAmB,IAAnB,CAAD,CAA5C;MACD;IACF;;;WAED,SAAA,QAAA,GAAW;MACT,IAAIJ,GAAG,GAAGD,IAAI,CAACC,GAALD,EAAV;MACA,IAAIM,KAAK,GAAG,IAAA,CAAKV,UAAL,GAAkB,IAAA,CAAKf,SAAL,IAAkB,CAAA,GAAI,IAAA,CAAKF,aAA3B,CAAA,IAA6C,CAAA,GAAI4B,IAAI,CAACC,GAALD,CAAS,EAAE,CAAA,GAAI,IAAA,CAAK5B,aAAX,CAAA,IAA6BsB,GAAG,GAAG,IAAA,CAAKF,UAAxC,CAATQ,CAAjD,CAA9B;MAEA,IAAA,CAAKV,SAAL,CAAeS,KAAf,CAAA;MAEA,IAAIC,IAAI,CAACE,GAALF,CAAS,IAAA,CAAKZ,UAAL,GAAkBW,KAA3BC,CAAAA,GAAoC,GAAxC,EAA6C;QAC3C,IAAA,CAAKG,gBAAL,CAAsB;UACpBC,QAAQ,EAAE;QADU,CAAtB,CAAA;QAIA;MACD;MAED,IAAA,CAAKhB,UAAL,GAAkBW,KAAlB;MAEA,IAAI,IAAA,CAAKZ,QAAT,EAAmB;QACjB,IAAA,CAAKS,eAAL,GAAuBC,qBAAqB,CAAC,IAAA,CAAKd,QAAL,CAAce,IAAd,CAAmB,IAAnB,CAAD,CAA5C;MACD;IACF;;;WAED,SAAA,IAAA,GAAO;MACL,IAAA,CAAA,eAAA,CAAA,cAAA,CAAA,SAAA,CAAA,EAAA,MAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;MACA,IAAA,CAAKX,QAAL,GAAgB,KAAhB;MACAkB,MAAM,CAACC,oBAAPD,CAA4B,IAAA,CAAKT,eAAjCS,CAAAA;MAEA,IAAA,CAAKF,gBAAL,CAAsB;QACpBC,QAAQ,EAAE;MADU,CAAtB,CAAA;IAGD;;;EAjE0BvC,S;AAqE7B,eAAeE,cAAf","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Animation from './Animation';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nclass DecayAnimation extends Animation {\n  constructor(config) {\n    var _config$deceleration, _config$isInteraction, _config$iterations;\n\n    super();\n    this._deceleration = (_config$deceleration = config.deceleration) !== null && _config$deceleration !== void 0 ? _config$deceleration : 0.998;\n    this._velocity = config.velocity;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !this._useNativeDriver;\n    this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n  }\n\n  __getNativeAnimationConfig() {\n    return {\n      type: 'decay',\n      deceleration: this._deceleration,\n      velocity: this._velocity,\n      iterations: this.__iterations\n    };\n  }\n\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    this.__active = true;\n    this._lastValue = fromValue;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._startTime = Date.now();\n\n    if (this._useNativeDriver) {\n      this.__startNativeAnimation(animatedValue);\n    } else {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  onUpdate() {\n    var now = Date.now();\n    var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));\n\n    this._onUpdate(value);\n\n    if (Math.abs(this._lastValue - value) < 0.1) {\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._lastValue = value;\n\n    if (this.__active) {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop() {\n    super.stop();\n    this.__active = false;\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  }\n\n}\n\nexport default DecayAnimation;"]},"metadata":{},"sourceType":"module"}