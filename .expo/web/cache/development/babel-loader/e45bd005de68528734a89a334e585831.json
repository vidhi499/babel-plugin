{"ast":null,"code":"import Dimensions from \"../Dimensions\";\nimport canUseDOM from \"../../modules/canUseDom\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n        width = _Dimensions$get.width,\n        height = _Dimensions$get.height,\n        fontScale = _Dimensions$get.fontScale,\n        scale = _Dimensions$get.scale;\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n        width = _Dimensions$get2.width,\n        height = _Dimensions$get2.height,\n        fontScale = _Dimensions$get2.fontScale,\n        scale = _Dimensions$get2.scale;\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n  },\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n};\nexport default DeviceInfo;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/DeviceInfo/index.js"],"names":["Dimensions","canUseDOM","DeviceInfo","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent"],"mappings":"AAQA,OAAOA,UAAP;AACA,OAAOC,SAAP;AACA,IAAIC,UAAU,GAAG;EACfF,UAAU,EAAE;IACV,IAAIG,oBAAJ,GAA2B;MACzB,IAAIC,eAAe,GAAGJ,UAAU,CAACK,GAAXL,CAAe,QAAfA,CAAtB;QACIM,KAAK,GAAGF,eAAe,CAACE,KAD5B;QAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;QAGIC,SAAS,GAAGJ,eAAe,CAACI,SAHhC;QAIIC,KAAK,GAAGL,eAAe,CAACK,KAJ5B;MAMA,OAAO;QACLH,KAAK,EAAEA,KAAK,GAAGG,KADV;QAELF,MAAM,EAAEA,MAAM,GAAGE,KAFZ;QAGLA,KAAK,EAALA,KAHK;QAILD,SAAS,EAATA;MAJK,CAAP;IAMD,CAdS;IAgBV,IAAIE,oBAAJ,GAA2B;MACzB,IAAIC,gBAAgB,GAAGX,UAAU,CAACK,GAAXL,CAAe,QAAfA,CAAvB;QACIM,KAAK,GAAGK,gBAAgB,CAACL,KAD7B;QAEIC,MAAM,GAAGI,gBAAgB,CAACJ,MAF9B;QAGIC,SAAS,GAAGG,gBAAgB,CAACH,SAHjC;QAIIC,KAAK,GAAGE,gBAAgB,CAACF,KAJ7B;MAMA,OAAO;QACLH,KAAK,EAAEA,KAAK,GAAGG,KADV;QAELF,MAAM,EAAEA,MAAM,GAAGE,KAFZ;QAGLA,KAAK,EAALA,KAHK;QAILD,SAAS,EAATA;MAJK,CAAP;IAMD;EA7BS,CADG;EAkCf,IAAII,MAAJ,GAAa;IACX,IAAIX,SAAJ,EAAe;MACb,IAAIY,SAAS,CAACC,SAAd,EAAyB;QACvB,OAAOD,SAAS,CAACC,SAAVD,CAAoB,CAApBA,CAAP;MACD,CAFD,MAEO;QACL,OAAOA,SAAS,CAACE,QAAjB;MACD;IACF;EACF,CA1Cc;EA4Cf,IAAIC,WAAJ,GAAkB;IAEhB,OAAOf,SAAS,GAAGY,SAAS,CAACI,YAAb,GAA4BC,SAA5C;EACD,CA/Cc;EAiDf,IAAIC,SAAJ,GAAgB;IACd,OAAOlB,SAAS,GAAGY,SAAS,CAACM,SAAb,GAAyB,EAAzC;EACD;AAnDc,CAAjB;AAsDA,eAAejB,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\nimport canUseDOM from '../../modules/canUseDom';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}