{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n  _createClass(PixelRatio, null, [{\n    key: \"get\",\n    value: function get() {\n      return _Dimensions.default.get(\"window\").scale;\n    }\n  }, {\n    key: \"getFontScale\",\n    value: function getFontScale() {\n      return _Dimensions.default.get(\"window\").fontScale || PixelRatio.get();\n    }\n  }, {\n    key: \"getPixelSizeForLayoutSize\",\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n  }, {\n    key: \"roundToNearestPixel\",\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n  return PixelRatio;\n}();\nexports.default = PixelRatio;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/PixelRatio/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_Dimensions","PixelRatio","get","scale","fontScale","layoutSize","Math","round","ratio","module"],"mappings":"AAAA,YAAA;;AAAA;AAAA;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,WAAAA,GAAcL,sBAAAA,CAAuBC,OAAAA,iBAAQ,CAAA;AAAA,IAe3CK,UAAAA;EAAAA;IAAAA;EAAAA;EAAAA;IAAAA;IAAAA,OAIJ,eAAa;MACX,OAAOD,WAAAA,CAAYH,OAAO,CAACK,GAAG,CAAC,QAAA,CAAA,CAAUC,KAAK;IAChD;EAAA;IAAA;IAAA,OAMA,wBAAsB;MACpB,OAAOH,WAAAA,CAAYH,OAAO,CAACK,GAAG,CAAC,QAAA,CAAA,CAAUE,SAAS,IAAIH,UAAAA,CAAWC,GAAG,EAAA;IACtE;EAAA;IAAA;IAAA,OAOA,mCAAiCG,UAAU,EAAE;MAC3C,OAAOC,IAAAA,CAAKC,KAAK,CAACF,UAAAA,GAAaJ,UAAAA,CAAWC,GAAG,EAAA,CAAA;IAC/C;EAAA;IAAA;IAAA,OASA,6BAA2BG,UAAU,EAAE;MACrC,IAAIG,KAAAA,GAAQP,UAAAA,CAAWC,GAAG,EAAA;MAC1B,OAAOI,IAAAA,CAAKC,KAAK,CAACF,UAAAA,GAAaG,KAAAA,CAAAA,GAASA,KAAAA;IAC1C;EAAA;EAAA;AAAA;AAIFV,OAAAA,CAAQD,OAAO,GAAGI,UAAAA;AAClBQ,MAAAA,CAAOX,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\nclass PixelRatio {\n  /**\n   * Returns the device pixel density.\n   */\n  static get() {\n    return _Dimensions.default.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n\n\n  static getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  static getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  static roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  }\n\n}\n\nexports.default = PixelRatio;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}