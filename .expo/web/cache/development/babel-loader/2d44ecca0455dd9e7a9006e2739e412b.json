{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.createSheet = createSheet;\nvar _canUseDom = _interopRequireDefault(require(\"../../../modules/canUseDom\"));\nvar _createCSSStyleSheet = _interopRequireDefault(require(\"./createCSSStyleSheet\"));\nvar _createOrderedCSSStyleSheet = _interopRequireDefault(require(\"./createOrderedCSSStyleSheet\"));\nvar defaultId = \"react-native-stylesheet\";\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [\"html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}\", \"body{margin:0;}\", \"button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}\", \"input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}\"];\nfunction createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n  var sheet;\n  if (_canUseDom.default) {\n    var rootNode = root != null ? root.getRootNode() : document;\n    if (sheets.length === 0) {\n      sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n      if (index == null) {\n        var initialSheet = sheets[0];\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : \"\";\n        sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    if (sheets.length === 0) {\n      sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n  return {\n    getTextContent: function getTextContent() {\n      return sheet.getTextContent();\n    },\n    id: id,\n    insert: function insert(cssText, groupValue) {\n      sheets.forEach(function (s) {\n        s.insert(cssText, groupValue);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/StyleSheet/dom/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","createSheet","_canUseDom","_createCSSStyleSheet","_createOrderedCSSStyleSheet","defaultId","roots","WeakMap","sheets","initialRules","root","id","sheet","rootNode","getRootNode","document","length","forEach","rule","insert","set","push","index","get","initialSheet","textContent","getTextContent","cssText","groupValue","s"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.createSheet = createSheet;\n\nvar _canUseDom = _interopRequireDefault(require(\"../../../modules/canUseDom\"));\n\nvar _createCSSStyleSheet = _interopRequireDefault(require(\"./createCSSStyleSheet\"));\n\nvar _createOrderedCSSStyleSheet = _interopRequireDefault(require(\"./createOrderedCSSStyleSheet\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [// minimal top-level reset\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\n\nfunction createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (_canUseDom.default) {\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\n\n    if (sheets.length === 0) {\n      sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\n\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\n\n        sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    // Create the initial style sheet\n    if (sheets.length === 0) {\n      sheet = (0, _createOrderedCSSStyleSheet.default)((0, _createCSSStyleSheet.default)(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent() {\n      return sheet.getTextContent();\n    },\n\n    id,\n\n    insert(cssText, groupValue) {\n      sheets.forEach(s => {\n        s.insert(cssText, groupValue);\n      });\n    }\n\n  };\n}"]},"metadata":{},"sourceType":"script"}