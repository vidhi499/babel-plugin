{"ast":null,"code":"\"use strict\";\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedImplementation from \"./AnimatedImplementation\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nvar emptyAnimation = {\n  start: function start() {},\n  stop: function stop() {},\n  reset: function reset() {},\n  _startNativeLoop: function _startNativeLoop() {},\n  _isUsingNativeDriver: function _isUsingNativeDriver() {\n    return false;\n  }\n};\nvar spring = function spring(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: function start(callback) {\n      anyValue.setValue(config.toValue);\n      callback && callback({\n        finished: true\n      });\n    }\n  });\n};\nvar timing = function timing(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: function start(callback) {\n      anyValue.setValue(config.toValue);\n      callback && callback({\n        finished: true\n      });\n    }\n  });\n};\nvar decay = function decay(value, config) {\n  return emptyAnimation;\n};\nvar sequence = function sequence(animations) {\n  return emptyAnimation;\n};\nvar parallel = function parallel(animations, config) {\n  return emptyAnimation;\n};\nvar delay = function delay(time) {\n  return emptyAnimation;\n};\nvar stagger = function stagger(time, animations) {\n  return emptyAnimation;\n};\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n  return emptyAnimation;\n};\nvar event = function event(argMapping, config) {\n  return null;\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedMock.js"],"names":["_objectSpread","AnimatedEvent","attachNativeEvent","AnimatedImplementation","AnimatedInterpolation","AnimatedNode","AnimatedProps","AnimatedValue","AnimatedValueXY","createAnimatedComponent","emptyAnimation","start","stop","reset","_startNativeLoop","_isUsingNativeDriver","spring","value","config","anyValue","callback","setValue","toValue","finished","timing","decay","sequence","animations","parallel","delay","time","stagger","loop","animation","_temp","_ref","_ref$iterations","iterations","event","argMapping","Value","ValueXY","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","forkEvent","unforkEvent","Event","__PropsOnlyForTests"],"mappings":"AASA,YAAA;;AAEA,OAAOA,aAAAA,MAAmB,sCAAA;AAC1B,SAASC,aAAa,EAAEC,iBAAiB;AACzC,OAAOC,sBAAAA;AACP,OAAOC,qBAAAA;AACP,OAAOC,YAAAA;AACP,OAAOC,aAAAA;AACP,OAAOC,aAAAA;AACP,OAAOC,eAAAA;AACP,OAAOC,uBAAAA;AACP,IAAIC,cAAAA,GAAiB;EACnBC,KAAAA,EAAO,iBAAM,CAAC,CAAA;EACdC,IAAAA,EAAM,gBAAM,CAAC,CAAA;EACbC,KAAAA,EAAO,iBAAM,CAAC,CAAA;EACdC,gBAAAA,EAAkB,4BAAM,CAAC,CAAA;EACzBC,oBAAAA,EAAsB,gCAAM;IAC1B,OAAO,KAAK;EACd;AACF,CAAA;AAEA,IAAIC,MAAAA,GAAS,SAASA,MAAAA,CAAOC,KAAK,EAAEC,MAAM,EAAE;EAC1C,IAAIC,QAAAA,GAAWF,KAAAA;EACf,OAAOjB,aAAAA,CAAcA,aAAAA,CAAc,CAAC,CAAA,EAAGU,cAAAA,CAAAA,EAAiB,CAAC,CAAA,EAAG;IAC1DC,KAAAA,EAAOS,eAAAA,QAAAA,EAAY;MACjBD,QAAAA,CAASE,QAAQ,CAACH,MAAAA,CAAOI,OAAO,CAAA;MAChCF,QAAAA,IAAYA,QAAAA,CAAS;QACnBG,QAAAA,EAAU;MACZ,CAAA,CAAA;IACF;EACF,CAAA,CAAA;AACF,CAAA;AAEA,IAAIC,MAAAA,GAAS,SAASA,MAAAA,CAAOP,KAAK,EAAEC,MAAM,EAAE;EAC1C,IAAIC,QAAAA,GAAWF,KAAAA;EACf,OAAOjB,aAAAA,CAAcA,aAAAA,CAAc,CAAC,CAAA,EAAGU,cAAAA,CAAAA,EAAiB,CAAC,CAAA,EAAG;IAC1DC,KAAAA,EAAOS,eAAAA,QAAAA,EAAY;MACjBD,QAAAA,CAASE,QAAQ,CAACH,MAAAA,CAAOI,OAAO,CAAA;MAChCF,QAAAA,IAAYA,QAAAA,CAAS;QACnBG,QAAAA,EAAU;MACZ,CAAA,CAAA;IACF;EACF,CAAA,CAAA;AACF,CAAA;AAEA,IAAIE,KAAAA,GAAQ,SAASA,KAAAA,CAAMR,KAAK,EAAEC,MAAM,EAAE;EACxC,OAAOR,cAAAA;AACT,CAAA;AAEA,IAAIgB,QAAAA,GAAW,SAASA,QAAAA,CAASC,UAAU,EAAE;EAC3C,OAAOjB,cAAAA;AACT,CAAA;AAEA,IAAIkB,QAAAA,GAAW,SAASA,QAAAA,CAASD,UAAU,EAAET,MAAM,EAAE;EACnD,OAAOR,cAAAA;AACT,CAAA;AAEA,IAAImB,KAAAA,GAAQ,SAASA,KAAAA,CAAMC,IAAI,EAAE;EAC/B,OAAOpB,cAAAA;AACT,CAAA;AAEA,IAAIqB,OAAAA,GAAU,SAASA,OAAAA,CAAQD,IAAI,EAAEH,UAAU,EAAE;EAC/C,OAAOjB,cAAAA;AACT,CAAA;AAEA,IAAIsB,IAAAA,GAAO,SAASA,IAAAA,CAAKC,SAAS,EAAEC,KAAK,EAAE;EACzC,IAAIC,IAAAA,GAAOD,KAAAA,KAAU,KAAK,CAAA,GAAI,CAAC,CAAA,GAAIA,KAAK;IACpCE,eAAAA,GAAkBD,IAAAA,CAAKE,UAAU;IACjCA,UAAAA,GAAaD,eAAAA,KAAoB,KAAK,CAAA,GAAI,CAAC,CAAA,GAAIA,eAAe;EAElE,OAAO1B,cAAAA;AACT,CAAA;AAEA,IAAI4B,KAAAA,GAAQ,SAASA,KAAAA,CAAMC,UAAU,EAAErB,MAAM,EAAE;EAC7C,OAAO,IAAI;AACb,CAAA;AAEA,eAAe;EACbsB,KAAAA,EAAOjC,aAAAA;EACPkC,OAAAA,EAASjC,eAAAA;EACTkC,aAAAA,EAAetC,qBAAAA;EACfuC,IAAAA,EAAMtC,YAAAA;EACNoB,KAAAA,EAAAA,KAAAA;EACAD,MAAAA,EAAAA,MAAAA;EACAR,MAAAA,EAAAA,MAAAA;EACA4B,GAAAA,EAAKzC,sBAAAA,CAAuByC,GAAG;EAC/BC,QAAAA,EAAU1C,sBAAAA,CAAuB0C,QAAQ;EACzCC,MAAAA,EAAQ3C,sBAAAA,CAAuB2C,MAAM;EACrCC,QAAAA,EAAU5C,sBAAAA,CAAuB4C,QAAQ;EACzCC,MAAAA,EAAQ7C,sBAAAA,CAAuB6C,MAAM;EACrCC,SAAAA,EAAW9C,sBAAAA,CAAuB8C,SAAS;EAC3CpB,KAAAA,EAAAA,KAAAA;EACAH,QAAAA,EAAAA,QAAAA;EACAE,QAAAA,EAAAA,QAAAA;EACAG,OAAAA,EAAAA,OAAAA;EACAC,IAAAA,EAAAA,IAAAA;EACAM,KAAAA,EAAAA,KAAAA;EACA7B,uBAAAA,EAAAA,uBAAAA;EACAP,iBAAAA,EAAAA,iBAAAA;EACAgD,SAAAA,EAAW/C,sBAAAA,CAAuB+C,SAAS;EAC3CC,WAAAA,EAAahD,sBAAAA,CAAuBgD,WAAW;EAC/CC,KAAAA,EAAOnD,aAAAA;EACPoD,mBAAAA,EAAqB/C;AACvB,CAAA","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport createAnimatedComponent from './createAnimatedComponent';\nvar emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  }\n};\n\nvar spring = function spring(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: callback => {\n      anyValue.setValue(config.toValue);\n      callback && callback({\n        finished: true\n      });\n    }\n  });\n};\n\nvar timing = function timing(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: callback => {\n      anyValue.setValue(config.toValue);\n      callback && callback({\n        finished: true\n      });\n    }\n  });\n};\n\nvar decay = function decay(value, config) {\n  return emptyAnimation;\n};\n\nvar sequence = function sequence(animations) {\n  return emptyAnimation;\n};\n\nvar parallel = function parallel(animations, config) {\n  return emptyAnimation;\n};\n\nvar delay = function delay(time) {\n  return emptyAnimation;\n};\n\nvar stagger = function stagger(time, animations) {\n  return emptyAnimation;\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n\n  return emptyAnimation;\n};\n\nvar event = function event(argMapping, config) {\n  return null;\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"]},"metadata":{},"sourceType":"module"}