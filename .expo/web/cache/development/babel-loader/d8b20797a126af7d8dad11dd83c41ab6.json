{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { createContext, useContext } from \"react\";\nimport { isLocaleRTL } from \"./isLocaleRTL\";\nvar defaultLocale = {\n  direction: \"ltr\",\n  locale: \"en-US\"\n};\nvar LocaleContext = createContext(defaultLocale);\nexport function getLocaleDirection(locale) {\n  return isLocaleRTL(locale) ? \"rtl\" : \"ltr\";\n}\nexport function LocaleProvider(props) {\n  var direction = props.direction,\n    locale = props.locale,\n    children = props.children;\n  var needsContext = direction || locale;\n  return needsContext ? React.createElement(LocaleContext.Provider, {\n    children: children,\n    value: {\n      direction: locale ? getLocaleDirection(locale) : direction,\n      locale: locale\n    }\n  }) : children;\n}\n_c = LocaleProvider;\nexport function useLocaleContext() {\n  _s();\n  return useContext(LocaleContext);\n}\n_s(useLocaleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LocaleProvider\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/useLocale/index.js"],"names":["React","createContext","useContext","isLocaleRTL","defaultLocale","direction","locale","LocaleContext","getLocaleDirection","LocaleProvider","props","children","needsContext","createElement","Provider","value","useLocaleContext"],"mappings":"AAQA,IAAA,EAAA,GAAA,YAAA,EAAA;AAAA,OAAOA,KAAAA,IAASC,aAAa,EAAEC,UAAU,QAAQ,OAAA;AACjD,SAASC,WAAW;AACpB,IAAIC,aAAAA,GAAgB;EAClBC,SAAAA,EAAW,KAAA;EACXC,MAAAA,EAAQ;AACV,CAAA;AACA,IAAIC,aAAAA,GAA6BN,aAAAA,CAAcG,aAAAA,CAAAA;AAC/C,OAAO,SAASI,kBAAAA,CAAmBF,MAAM,EAAE;EACzC,OAAOH,WAAAA,CAAYG,MAAAA,CAAAA,GAAU,KAAA,GAAQ,KAAK;AAC5C;AACA,OAAO,SAASG,cAAAA,CAAeC,KAAK,EAAE;EACpC,IAAIL,SAAAA,GAAYK,KAAAA,CAAML,SAAS;IAC3BC,MAAAA,GAASI,KAAAA,CAAMJ,MAAM;IACrBK,QAAAA,GAAWD,KAAAA,CAAMC,QAAQ;EAC7B,IAAIC,YAAAA,GAAeP,SAAAA,IAAaC,MAAAA;EAChC,OAAOM,YAAAA,GAA4BZ,KAAAA,CAAMa,aAAa,CAACN,aAAAA,CAAcO,QAAQ,EAAE;IAC7EH,QAAAA,EAAUA,QAAAA;IACVI,KAAAA,EAAO;MACLV,SAAAA,EAAWC,MAAAA,GAASE,kBAAAA,CAAmBF,MAAAA,CAAAA,GAAUD,SAAS;MAC1DC,MAAAA,EAAAA;IACF;EACF,CAAA,CAAA,GAAKK,QAAQ;AACf;KAZgBF,cAAAA;AAahB,OAAO,SAASO,gBAAAA,GAAmB;;EACjC,OAAOd,UAAAA,CAAWK,aAAAA,CAAAA;AACpB;GAFgBS,gBAAAA,EAAAA,8BAAAA,CAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport React, { createContext, useContext } from 'react';\nimport { isLocaleRTL } from './isLocaleRTL';\nvar defaultLocale = {\n  direction: 'ltr',\n  locale: 'en-US'\n};\nvar LocaleContext = /*#__PURE__*/createContext(defaultLocale);\nexport function getLocaleDirection(locale) {\n  return isLocaleRTL(locale) ? 'rtl' : 'ltr';\n}\nexport function LocaleProvider(props) {\n  var direction = props.direction,\n      locale = props.locale,\n      children = props.children;\n  var needsContext = direction || locale;\n  return needsContext ? /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    children: children,\n    value: {\n      direction: locale ? getLocaleDirection(locale) : direction,\n      locale\n    }\n  }) : children;\n}\nexport function useLocaleContext() {\n  return useContext(LocaleContext);\n}"]},"metadata":{},"sourceType":"module"}