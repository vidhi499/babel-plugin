{"ast":null,"code":"function murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\nexport default hash;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/compiler/hash.js"],"names":["murmurhash2_32_gc","str","seed","l","length","h","i","k","charCodeAt","hash","toString"],"mappings":"AAgBA,SAASA,iBAAAA,CAAkBC,GAAG,EAAEC,IAAI,EAAE;EACpC,IAAIC,CAAAA,GAAIF,GAAAA,CAAIG,MAAM;IACdC,CAAAA,GAAIH,IAAAA,GAAOC,CAAAA;IACXG,CAAAA,GAAI,CAAA;IACJC,CAAAA;EAEJ,OAAOJ,CAAAA,IAAK,CAAA,EAAG;IACbI,CAAAA,GAAIN,GAAAA,CAAIO,UAAU,CAACF,CAAAA,CAAAA,GAAK,IAAA,GAAQL,CAAAA,GAAAA,CAAIO,UAAU,CAAC,EAAEF,CAAAA,CAAAA,GAAK,IAAG,KAAM,CAAA,GAAKL,CAAAA,GAAAA,CAAIO,UAAU,CAAC,EAAEF,CAAAA,CAAAA,GAAK,IAAG,KAAM,EAAA,GAAML,CAAAA,GAAAA,CAAIO,UAAU,CAAC,EAAEF,CAAAA,CAAAA,GAAK,IAAG,KAAM,EAAA;IACxIC,CAAAA,GAAKA,CAAAA,CAAAA,GAAI,MAAK,IAAK,UAAA,IAAe,CAACA,CAAAA,CAAAA,KAAM,EAAC,IAAK,UAAA,GAAa,MAAK,KAAM,EAAC,CAAA;IACxEA,CAAAA,IAAKA,CAAAA,KAAM,EAAA;IACXA,CAAAA,GAAKA,CAAAA,CAAAA,GAAI,MAAK,IAAK,UAAA,IAAe,CAACA,CAAAA,CAAAA,KAAM,EAAC,IAAK,UAAA,GAAa,MAAK,KAAM,EAAC,CAAA;IACxEF,CAAAA,GAAKA,CAAAA,CAAAA,GAAI,MAAK,IAAK,UAAA,IAAe,CAACA,CAAAA,CAAAA,KAAM,EAAC,IAAK,UAAA,GAAa,MAAK,KAAM,EAAC,CAAA,GAAKE,CAAAA;IAC7EJ,CAAAA,IAAK,CAAA;IACL,EAAEG,CAAAA;EACJ;EAEA,QAAQH,CAAAA;IACN,KAAK,CAAA;MACHE,CAAAA,IAAMJ,CAAAA,GAAAA,CAAIO,UAAU,CAACF,CAAAA,GAAI,CAAA,CAAA,GAAK,IAAG,KAAM,EAAA;IAEzC,KAAK,CAAA;MACHD,CAAAA,IAAMJ,CAAAA,GAAAA,CAAIO,UAAU,CAACF,CAAAA,GAAI,CAAA,CAAA,GAAK,IAAG,KAAM,CAAA;IAEzC,KAAK,CAAA;MACHD,CAAAA,IAAKJ,GAAAA,CAAIO,UAAU,CAACF,CAAAA,CAAAA,GAAK,IAAA;MACzBD,CAAAA,GAAKA,CAAAA,CAAAA,GAAI,MAAK,IAAK,UAAA,IAAe,CAACA,CAAAA,CAAAA,KAAM,EAAC,IAAK,UAAA,GAAa,MAAK,KAAM,EAAC,CAAA;EAAA;EAG5EA,CAAAA,IAAKA,CAAAA,KAAM,EAAA;EACXA,CAAAA,GAAKA,CAAAA,CAAAA,GAAI,MAAK,IAAK,UAAA,IAAe,CAACA,CAAAA,CAAAA,KAAM,EAAC,IAAK,UAAA,GAAa,MAAK,KAAM,EAAC,CAAA;EACxEA,CAAAA,IAAKA,CAAAA,KAAM,EAAA;EACX,OAAOA,CAAAA,KAAM,CAAA;AACf;AAEA,IAAII,IAAAA,GAAOR,SAAPQ,IAAAA,CAAOR,GAAAA;EAAAA,OAAOD,iBAAAA,CAAkBC,GAAAA,EAAK,CAAA,CAAA,CAAGS,QAAQ,CAAC,EAAA,CAAA;AAAA;AAErD,eAAeD,IAAAA","sourcesContent":["/* eslint-disable */\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n *\n * \n */\nfunction murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = str => murmurhash2_32_gc(str, 1).toString(36);\n\nexport default hash;"]},"metadata":{},"sourceType":"module"}