{"ast":null,"code":"var Platform = {\n  OS: 'web',\n  select: function select(obj) {\n    return 'web' in obj ? obj.web : obj[\"default\"];\n  },\n  get isTesting() {\n    if (false) {\n      return true;\n    }\n    return false;\n  }\n};\nexport default Platform;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Platform/index.js"],"names":["Platform","OS","select","obj","web","isTesting"],"mappings":"AASA,IAAIA,QAAQ,GAAG;EACbC,EAAE,EAAE,KADS;EAEbC,MAAM,EAAE,SAAA,MAAA,CAAA,GAAG,EAAA;IAAA,OAAI,KAAA,IAASC,GAAT,GAAeA,GAAG,CAACC,GAAnB,GAAyBD,GAAG,CAAA,SAAA,CAAhC;EAAA,CAFE;EAIb,IAAIE,SAAJ,GAAgB;IACd,IAAA,KAAA,EAAqC;MACnC,OAAO,IAAP;IACD;IAED,OAAO,KAAP;EACD;AAVY,CAAf;AAaA,eAAeL,QAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar Platform = {\n  OS: 'web',\n  select: obj => 'web' in obj ? obj.web : obj.default,\n\n  get isTesting() {\n    if (process.env.NODE_ENV === 'test') {\n      return true;\n    }\n\n    return false;\n  }\n\n};\nexport default Platform;"]},"metadata":{},"sourceType":"module"}