{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\"];\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\nvar createDOMProps = function createDOMProps(elementType, props, options) {\n  if (!props) {\n    props = emptyObject;\n  }\n  var _props = props,\n    accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n    accessibilityAtomic = _props.accessibilityAtomic,\n    accessibilityAutoComplete = _props.accessibilityAutoComplete,\n    accessibilityBusy = _props.accessibilityBusy,\n    accessibilityChecked = _props.accessibilityChecked,\n    accessibilityColumnCount = _props.accessibilityColumnCount,\n    accessibilityColumnIndex = _props.accessibilityColumnIndex,\n    accessibilityColumnSpan = _props.accessibilityColumnSpan,\n    accessibilityControls = _props.accessibilityControls,\n    accessibilityCurrent = _props.accessibilityCurrent,\n    accessibilityDescribedBy = _props.accessibilityDescribedBy,\n    accessibilityDetails = _props.accessibilityDetails,\n    accessibilityDisabled = _props.accessibilityDisabled,\n    accessibilityErrorMessage = _props.accessibilityErrorMessage,\n    accessibilityExpanded = _props.accessibilityExpanded,\n    accessibilityFlowTo = _props.accessibilityFlowTo,\n    accessibilityHasPopup = _props.accessibilityHasPopup,\n    accessibilityHidden = _props.accessibilityHidden,\n    accessibilityInvalid = _props.accessibilityInvalid,\n    accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n    accessibilityLabel = _props.accessibilityLabel,\n    accessibilityLabelledBy = _props.accessibilityLabelledBy,\n    accessibilityLevel = _props.accessibilityLevel,\n    accessibilityLiveRegion = _props.accessibilityLiveRegion,\n    accessibilityModal = _props.accessibilityModal,\n    accessibilityMultiline = _props.accessibilityMultiline,\n    accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n    accessibilityOrientation = _props.accessibilityOrientation,\n    accessibilityOwns = _props.accessibilityOwns,\n    accessibilityPlaceholder = _props.accessibilityPlaceholder,\n    accessibilityPosInSet = _props.accessibilityPosInSet,\n    accessibilityPressed = _props.accessibilityPressed,\n    accessibilityReadOnly = _props.accessibilityReadOnly,\n    accessibilityRequired = _props.accessibilityRequired,\n    accessibilityRole = _props.accessibilityRole,\n    accessibilityRoleDescription = _props.accessibilityRoleDescription,\n    accessibilityRowCount = _props.accessibilityRowCount,\n    accessibilityRowIndex = _props.accessibilityRowIndex,\n    accessibilityRowSpan = _props.accessibilityRowSpan,\n    accessibilitySelected = _props.accessibilitySelected,\n    accessibilitySetSize = _props.accessibilitySetSize,\n    accessibilitySort = _props.accessibilitySort,\n    accessibilityValueMax = _props.accessibilityValueMax,\n    accessibilityValueMin = _props.accessibilityValueMin,\n    accessibilityValueNow = _props.accessibilityValueNow,\n    accessibilityValueText = _props.accessibilityValueText,\n    dataSet = _props.dataSet,\n    focusable = _props.focusable,\n    nativeID = _props.nativeID,\n    pointerEvents = _props.pointerEvents,\n    style = _props.style,\n    testID = _props.testID,\n    domProps = _objectWithoutPropertiesLoose(_props, _excluded);\n  var disabled = accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n  if (role != null) {\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  }\n  if (focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n  if (elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n  var _StyleSheet = StyleSheet([style, pointerEvents && pointerEventsStyles[pointerEvents]], {\n      writingDirection: options ? options.writingDirection : 'ltr'\n    }),\n    className = _StyleSheet[0],\n    inlineStyle = _StyleSheet[1];\n  if (className) {\n    domProps.className = className;\n  }\n  if (inlineStyle) {\n    domProps.style = inlineStyle;\n  }\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n  return domProps;\n};\nexport default createDOMProps;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"names":["_objectWithoutPropertiesLoose","_excluded","AccessibilityUtil","StyleSheet","emptyObject","hasOwnProperty","Object","prototype","isArray","Array","uppercasePattern","toHyphenLower","match","toLowerCase","hyphenateString","str","replace","processIDRefList","idRefList","join","pointerEventsStyles","create","auto","pointerEvents","none","createDOMProps","elementType","props","options","_props","accessibilityActiveDescendant","accessibilityAtomic","accessibilityAutoComplete","accessibilityBusy","accessibilityChecked","accessibilityColumnCount","accessibilityColumnIndex","accessibilityColumnSpan","accessibilityControls","accessibilityCurrent","accessibilityDescribedBy","accessibilityDetails","accessibilityDisabled","accessibilityErrorMessage","accessibilityExpanded","accessibilityFlowTo","accessibilityHasPopup","accessibilityHidden","accessibilityInvalid","accessibilityKeyShortcuts","accessibilityLabel","accessibilityLabelledBy","accessibilityLevel","accessibilityLiveRegion","accessibilityModal","accessibilityMultiline","accessibilityMultiSelectable","accessibilityOrientation","accessibilityOwns","accessibilityPlaceholder","accessibilityPosInSet","accessibilityPressed","accessibilityReadOnly","accessibilityRequired","accessibilityRole","accessibilityRoleDescription","accessibilityRowCount","accessibilityRowIndex","accessibilityRowSpan","accessibilitySelected","accessibilitySetSize","accessibilitySort","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","accessibilityValueText","dataSet","focusable","nativeID","style","testID","domProps","disabled","role","propsToAriaRole","readOnly","required","dataProp","call","dataName","dataValue","tabIndex","_StyleSheet","writingDirection","className","inlineStyle","id"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport StyleSheet from '../../exports/StyleSheet';\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\n\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\n\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = (elementType, props, options) => {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n      accessibilityAtomic = _props.accessibilityAtomic,\n      accessibilityAutoComplete = _props.accessibilityAutoComplete,\n      accessibilityBusy = _props.accessibilityBusy,\n      accessibilityChecked = _props.accessibilityChecked,\n      accessibilityColumnCount = _props.accessibilityColumnCount,\n      accessibilityColumnIndex = _props.accessibilityColumnIndex,\n      accessibilityColumnSpan = _props.accessibilityColumnSpan,\n      accessibilityControls = _props.accessibilityControls,\n      accessibilityCurrent = _props.accessibilityCurrent,\n      accessibilityDescribedBy = _props.accessibilityDescribedBy,\n      accessibilityDetails = _props.accessibilityDetails,\n      accessibilityDisabled = _props.accessibilityDisabled,\n      accessibilityErrorMessage = _props.accessibilityErrorMessage,\n      accessibilityExpanded = _props.accessibilityExpanded,\n      accessibilityFlowTo = _props.accessibilityFlowTo,\n      accessibilityHasPopup = _props.accessibilityHasPopup,\n      accessibilityHidden = _props.accessibilityHidden,\n      accessibilityInvalid = _props.accessibilityInvalid,\n      accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLabelledBy = _props.accessibilityLabelledBy,\n      accessibilityLevel = _props.accessibilityLevel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityModal = _props.accessibilityModal,\n      accessibilityMultiline = _props.accessibilityMultiline,\n      accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n      accessibilityOrientation = _props.accessibilityOrientation,\n      accessibilityOwns = _props.accessibilityOwns,\n      accessibilityPlaceholder = _props.accessibilityPlaceholder,\n      accessibilityPosInSet = _props.accessibilityPosInSet,\n      accessibilityPressed = _props.accessibilityPressed,\n      accessibilityReadOnly = _props.accessibilityReadOnly,\n      accessibilityRequired = _props.accessibilityRequired,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityRoleDescription = _props.accessibilityRoleDescription,\n      accessibilityRowCount = _props.accessibilityRowCount,\n      accessibilityRowIndex = _props.accessibilityRowIndex,\n      accessibilityRowSpan = _props.accessibilityRowSpan,\n      accessibilitySelected = _props.accessibilitySelected,\n      accessibilitySetSize = _props.accessibilitySetSize,\n      accessibilitySort = _props.accessibilitySort,\n      accessibilityValueMax = _props.accessibilityValueMax,\n      accessibilityValueMin = _props.accessibilityValueMin,\n      accessibilityValueNow = _props.accessibilityValueNow,\n      accessibilityValueText = _props.accessibilityValueText,\n      dataSet = _props.dataSet,\n      focusable = _props.focusable,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      style = _props.style,\n      testID = _props.testID,\n      domProps = _objectWithoutPropertiesLoose(_props, _excluded);\n\n  var disabled = accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props); // ACCESSIBILITY\n\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true; // Enhance with native semantics\n\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired; // Enhance with native semantics\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n\n  if (role != null) {\n    // 'presentation' synonym has wider browser support\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  } // \"dataSet\" replaced with \"data-*\"\n\n\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  } // FOCUS\n  // \"focusable\" indicates that an element may be a keyboard tab-stop.\n\n\n  if (focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n\n  if ( // These native elements are keyboard focusable by default\n  elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if ( // These roles are made keyboard focusable by default\n  role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    // Everything else must explicitly set the prop\n    if (focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  } // Resolve styles\n\n\n  var _StyleSheet = StyleSheet([style, pointerEvents && pointerEventsStyles[pointerEvents]], {\n    writingDirection: options ? options.writingDirection : 'ltr'\n  }),\n      className = _StyleSheet[0],\n      inlineStyle = _StyleSheet[1];\n\n  if (className) {\n    domProps.className = className;\n  }\n\n  if (inlineStyle) {\n    domProps.style = inlineStyle;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  } // Automated test IDs\n\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"]},"metadata":{},"sourceType":"module"}