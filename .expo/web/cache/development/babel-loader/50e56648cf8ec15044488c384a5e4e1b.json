{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"accessibilityLabel\", \"blurRadius\", \"defaultSource\", \"draggable\", \"onError\", \"onLayout\", \"onLoad\", \"onLoadEnd\", \"onLoadStart\", \"pointerEvents\", \"source\", \"style\"];\nimport * as React from \"react\";\nimport createElement from \"../createElement\";\nimport { getAssetByID } from \"../../modules/AssetRegistry\";\nimport { createBoxShadowValue } from \"../StyleSheet/preprocess\";\nimport ImageLoader from \"../../modules/ImageLoader\";\nimport PixelRatio from \"../PixelRatio\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextAncestorContext from \"../Text/TextAncestorContext\";\nimport View from \"../View\";\nvar ERRORED = \"ERRORED\";\nvar LOADED = \"LOADED\";\nvar LOADING = \"LOADING\";\nvar IDLE = \"IDLE\";\nvar _filterId = 0;\nvar svgDataUriPattern = /^(data:image\\/svg\\+xml;utf8,)(.*)/;\nfunction createTintColorSVG(tintColor, id) {\n  return tintColor && id != null ? React.createElement(\"svg\", {\n    style: {\n      position: \"absolute\",\n      height: 0,\n      visibility: \"hidden\",\n      width: 0\n    }\n  }, React.createElement(\"defs\", null, React.createElement(\"filter\", {\n    id: \"tint-\" + id,\n    suppressHydrationWarning: true\n  }, React.createElement(\"feFlood\", {\n    floodColor: \"\" + tintColor,\n    key: tintColor\n  }), React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"atop\"\n  })))) : null;\n}\nfunction getFlatStyle(style, blurRadius, filterId) {\n  var flatStyle = StyleSheet.flatten(style);\n  var filter = flatStyle.filter,\n    resizeMode = flatStyle.resizeMode,\n    shadowOffset = flatStyle.shadowOffset,\n    tintColor = flatStyle.tintColor;\n  var filters = [];\n  var _filter = null;\n  if (filter) {\n    filters.push(filter);\n  }\n  if (blurRadius) {\n    filters.push(\"blur(\" + blurRadius + \"px)\");\n  }\n  if (shadowOffset) {\n    var shadowString = createBoxShadowValue(flatStyle);\n    if (shadowString) {\n      filters.push(\"drop-shadow(\" + shadowString + \")\");\n    }\n  }\n  if (tintColor && filterId != null) {\n    filters.push(\"url(#tint-\" + filterId + \")\");\n  }\n  if (filters.length > 0) {\n    _filter = filters.join(\" \");\n  }\n  delete flatStyle.blurRadius;\n  delete flatStyle.shadowColor;\n  delete flatStyle.shadowOpacity;\n  delete flatStyle.shadowOffset;\n  delete flatStyle.shadowRadius;\n  delete flatStyle.tintColor;\n  delete flatStyle.overlayColor;\n  delete flatStyle.resizeMode;\n  return [flatStyle, resizeMode, _filter, tintColor];\n}\nfunction resolveAssetDimensions(source) {\n  if (typeof source === \"number\") {\n    var _getAssetByID = getAssetByID(source),\n      _height = _getAssetByID.height,\n      _width = _getAssetByID.width;\n    return {\n      height: _height,\n      width: _width\n    };\n  } else if (source != null && !Array.isArray(source) && typeof source === \"object\") {\n    var _height2 = source.height,\n      _width2 = source.width;\n    return {\n      height: _height2,\n      width: _width2\n    };\n  }\n}\nfunction resolveAssetUri(source) {\n  var uri = null;\n  if (typeof source === \"number\") {\n    var asset = getAssetByID(source);\n    if (asset == null) {\n      throw new Error('Image: asset with ID \"' + source + '\" could not be found. Please check the image source or packager.');\n    }\n    var scale = asset.scales[0];\n    if (asset.scales.length > 1) {\n      var preferredScale = PixelRatio.get();\n      scale = asset.scales.reduce(function (prev, curr) {\n        return Math.abs(curr - preferredScale) < Math.abs(prev - preferredScale) ? curr : prev;\n      });\n    }\n    var scaleSuffix = scale !== 1 ? \"@\" + scale + \"x\" : \"\";\n    uri = asset ? asset.httpServerLocation + \"/\" + asset.name + scaleSuffix + \".\" + asset.type : \"\";\n  } else if (typeof source === \"string\") {\n    uri = source;\n  } else if (source && typeof source.uri === \"string\") {\n    uri = source.uri;\n  }\n  if (uri) {\n    var match = uri.match(svgDataUriPattern);\n    if (match) {\n      var prefix = match[1],\n        svg = match[2];\n      var encodedSvg = encodeURIComponent(svg);\n      return \"\" + prefix + encodedSvg;\n    }\n  }\n  return uri;\n}\nvar Image = React.forwardRef(function (props, ref) {\n  var accessibilityLabel = props.accessibilityLabel,\n    blurRadius = props.blurRadius,\n    defaultSource = props.defaultSource,\n    draggable = props.draggable,\n    onError = props.onError,\n    onLayout = props.onLayout,\n    onLoad = props.onLoad,\n    onLoadEnd = props.onLoadEnd,\n    onLoadStart = props.onLoadStart,\n    pointerEvents = props.pointerEvents,\n    source = props.source,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  if (\"development\" !== \"production\") {\n    if (props.children) {\n      throw new Error(\"The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.\");\n    }\n  }\n  var _React$useState = React.useState(function () {\n      var uri = resolveAssetUri(source);\n      if (uri != null) {\n        var isLoaded = ImageLoader.has(uri);\n        if (isLoaded) {\n          return LOADED;\n        }\n      }\n      return IDLE;\n    }),\n    state = _React$useState[0],\n    updateState = _React$useState[1];\n  var _React$useState2 = React.useState({}),\n    layout = _React$useState2[0],\n    updateLayout = _React$useState2[1];\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hiddenImageRef = React.useRef(null);\n  var filterRef = React.useRef(_filterId++);\n  var requestRef = React.useRef(null);\n  var shouldDisplaySource = state === LOADED || state === LOADING && defaultSource == null;\n  var _getFlatStyle = getFlatStyle(style, blurRadius, filterRef.current),\n    flatStyle = _getFlatStyle[0],\n    _resizeMode = _getFlatStyle[1],\n    filter = _getFlatStyle[2],\n    tintColor = _getFlatStyle[3];\n  var resizeMode = props.resizeMode || _resizeMode || \"cover\";\n  var selectedSource = shouldDisplaySource ? source : defaultSource;\n  var displayImageUri = resolveAssetUri(selectedSource);\n  var imageSizeStyle = resolveAssetDimensions(selectedSource);\n  var backgroundImage = displayImageUri ? 'url(\"' + displayImageUri + '\")' : null;\n  var backgroundSize = getBackgroundSize();\n  var hiddenImage = displayImageUri ? createElement(\"img\", {\n    alt: accessibilityLabel || \"\",\n    style: styles.accessibilityImage$raw,\n    draggable: draggable || false,\n    ref: hiddenImageRef,\n    src: displayImageUri\n  }) : null;\n  function getBackgroundSize() {\n    if (hiddenImageRef.current != null && (resizeMode === \"center\" || resizeMode === \"repeat\")) {\n      var _hiddenImageRef$curre = hiddenImageRef.current,\n        naturalHeight = _hiddenImageRef$curre.naturalHeight,\n        naturalWidth = _hiddenImageRef$curre.naturalWidth;\n      var _height3 = layout.height,\n        _width3 = layout.width;\n      if (naturalHeight && naturalWidth && _height3 && _width3) {\n        var scaleFactor = Math.min(1, _width3 / naturalWidth, _height3 / naturalHeight);\n        var x = Math.ceil(scaleFactor * naturalWidth);\n        var y = Math.ceil(scaleFactor * naturalHeight);\n        return x + \"px \" + y + \"px\";\n      }\n    }\n  }\n  function handleLayout(e) {\n    if (resizeMode === \"center\" || resizeMode === \"repeat\" || onLayout) {\n      var _layout = e.nativeEvent.layout;\n      onLayout && onLayout(e);\n      updateLayout(_layout);\n    }\n  }\n  var uri = resolveAssetUri(source);\n  React.useEffect(function () {\n    abortPendingRequest();\n    if (uri != null) {\n      updateState(LOADING);\n      if (onLoadStart) {\n        onLoadStart();\n      }\n      requestRef.current = ImageLoader.load(uri, function load(e) {\n        updateState(LOADED);\n        if (onLoad) {\n          onLoad(e);\n        }\n        if (onLoadEnd) {\n          onLoadEnd();\n        }\n      }, function error() {\n        updateState(ERRORED);\n        if (onError) {\n          onError({\n            nativeEvent: {\n              error: \"Failed to load resource \" + uri + \" (404)\"\n            }\n          });\n        }\n        if (onLoadEnd) {\n          onLoadEnd();\n        }\n      });\n    }\n    function abortPendingRequest() {\n      if (requestRef.current != null) {\n        ImageLoader.abort(requestRef.current);\n        requestRef.current = null;\n      }\n    }\n    return abortPendingRequest;\n  }, [uri, requestRef, updateState, onError, onLoad, onLoadEnd, onLoadStart]);\n  return React.createElement(View, _extends({}, rest, {\n    accessibilityLabel: accessibilityLabel,\n    onLayout: handleLayout,\n    pointerEvents: pointerEvents,\n    ref: ref,\n    style: [styles.root, hasTextAncestor && styles.inline, imageSizeStyle, flatStyle]\n  }), React.createElement(View, {\n    style: [styles.image, resizeModeStyles[resizeMode], {\n      backgroundImage: backgroundImage,\n      filter: filter\n    }, backgroundSize != null && {\n      backgroundSize: backgroundSize\n    }],\n    suppressHydrationWarning: true\n  }), hiddenImage, createTintColorSVG(tintColor, filterRef.current));\n});\nImage.displayName = \"Image\";\nvar ImageWithStatics = Image;\nImageWithStatics.getSize = function (uri, success, failure) {\n  ImageLoader.getSize(uri, success, failure);\n};\nImageWithStatics.prefetch = function (uri) {\n  return ImageLoader.prefetch(uri);\n};\nImageWithStatics.queryCache = function (uris) {\n  return ImageLoader.queryCache(uris);\n};\nvar styles = StyleSheet.create({\n  root: {\n    flexBasis: \"auto\",\n    overflow: \"hidden\",\n    zIndex: 0\n  },\n  inline: {\n    display: \"inline-flex\"\n  },\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: \"transparent\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: -1\n  }),\n  accessibilityImage$raw: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: \"100%\",\n    opacity: 0,\n    width: \"100%\",\n    zIndex: -1\n  })\n});\nvar resizeModeStyles = StyleSheet.create({\n  center: {\n    backgroundSize: \"auto\"\n  },\n  contain: {\n    backgroundSize: \"contain\"\n  },\n  cover: {\n    backgroundSize: \"cover\"\n  },\n  none: {\n    backgroundPosition: \"0\",\n    backgroundSize: \"auto\"\n  },\n  repeat: {\n    backgroundPosition: \"0\",\n    backgroundRepeat: \"repeat\",\n    backgroundSize: \"auto\"\n  },\n  stretch: {\n    backgroundSize: \"100% 100%\"\n  }\n});\nexport default ImageWithStatics;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Image/index.js"],"names":["_objectSpread","_extends","_objectWithoutPropertiesLoose","_excluded","React","createElement","getAssetByID","createBoxShadowValue","ImageLoader","PixelRatio","StyleSheet","TextAncestorContext","View","ERRORED","LOADED","LOADING","IDLE","_filterId","svgDataUriPattern","createTintColorSVG","tintColor","id","style","position","height","visibility","width","suppressHydrationWarning","floodColor","key","in2","operator","getFlatStyle","blurRadius","filterId","flatStyle","flatten","filter","resizeMode","shadowOffset","filters","_filter","push","shadowString","length","join","shadowColor","shadowOpacity","shadowRadius","overlayColor","resolveAssetDimensions","source","_getAssetByID","_height","_width","Array","isArray","_height2","_width2","resolveAssetUri","uri","asset","Error","scale","scales","preferredScale","get","reduce","prev","curr","Math","abs","scaleSuffix","httpServerLocation","name","type","match","prefix","svg","encodedSvg","encodeURIComponent","Image","forwardRef","props","ref","accessibilityLabel","defaultSource","draggable","onError","onLayout","onLoad","onLoadEnd","onLoadStart","pointerEvents","rest","process","children","_React$useState","useState","isLoaded","has","state","updateState","_React$useState2","layout","updateLayout","hasTextAncestor","useContext","hiddenImageRef","useRef","filterRef","requestRef","shouldDisplaySource","_getFlatStyle","current","_resizeMode","selectedSource","displayImageUri","imageSizeStyle","backgroundImage","backgroundSize","getBackgroundSize","hiddenImage","alt","styles","accessibilityImage$raw","src","_hiddenImageRef$curre","naturalHeight","naturalWidth","_height3","_width3","scaleFactor","min","x","ceil","y","handleLayout","e","_layout","nativeEvent","useEffect","abortPendingRequest","load","error","abort","root","inline","image","resizeModeStyles","displayName","ImageWithStatics","getSize","success","failure","prefetch","queryCache","uris","create","flexBasis","overflow","zIndex","display","absoluteFillObject","backgroundColor","backgroundPosition","backgroundRepeat","opacity","center","contain","cover","none","repeat","stretch"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"accessibilityLabel\", \"blurRadius\", \"defaultSource\", \"draggable\", \"onError\", \"onLayout\", \"onLoad\", \"onLoadEnd\", \"onLoadStart\", \"pointerEvents\", \"source\", \"style\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport { getAssetByID } from '../../modules/AssetRegistry';\nimport { createBoxShadowValue } from '../StyleSheet/preprocess';\nimport ImageLoader from '../../modules/ImageLoader';\nimport PixelRatio from '../PixelRatio';\nimport StyleSheet from '../StyleSheet';\nimport TextAncestorContext from '../Text/TextAncestorContext';\nimport View from '../View';\nvar ERRORED = 'ERRORED';\nvar LOADED = 'LOADED';\nvar LOADING = 'LOADING';\nvar IDLE = 'IDLE';\nvar _filterId = 0;\nvar svgDataUriPattern = /^(data:image\\/svg\\+xml;utf8,)(.*)/;\n\nfunction createTintColorSVG(tintColor, id) {\n  return tintColor && id != null ? /*#__PURE__*/React.createElement(\"svg\", {\n    style: {\n      position: 'absolute',\n      height: 0,\n      visibility: 'hidden',\n      width: 0\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"tint-\" + id,\n    suppressHydrationWarning: true\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodColor: \"\" + tintColor,\n    key: tintColor\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"atop\"\n  })))) : null;\n}\n\nfunction getFlatStyle(style, blurRadius, filterId) {\n  var flatStyle = StyleSheet.flatten(style);\n  var filter = flatStyle.filter,\n      resizeMode = flatStyle.resizeMode,\n      shadowOffset = flatStyle.shadowOffset,\n      tintColor = flatStyle.tintColor; // Add CSS filters\n  // React Native exposes these features as props and proprietary styles\n\n  var filters = [];\n  var _filter = null;\n\n  if (filter) {\n    filters.push(filter);\n  }\n\n  if (blurRadius) {\n    filters.push(\"blur(\" + blurRadius + \"px)\");\n  }\n\n  if (shadowOffset) {\n    var shadowString = createBoxShadowValue(flatStyle);\n\n    if (shadowString) {\n      filters.push(\"drop-shadow(\" + shadowString + \")\");\n    }\n  }\n\n  if (tintColor && filterId != null) {\n    filters.push(\"url(#tint-\" + filterId + \")\");\n  }\n\n  if (filters.length > 0) {\n    _filter = filters.join(' ');\n  } // These styles are converted to CSS filters applied to the\n  // element displaying the background image.\n\n\n  delete flatStyle.blurRadius;\n  delete flatStyle.shadowColor;\n  delete flatStyle.shadowOpacity;\n  delete flatStyle.shadowOffset;\n  delete flatStyle.shadowRadius;\n  delete flatStyle.tintColor; // These styles are not supported on View\n\n  delete flatStyle.overlayColor;\n  delete flatStyle.resizeMode;\n  return [flatStyle, resizeMode, _filter, tintColor];\n}\n\nfunction resolveAssetDimensions(source) {\n  if (typeof source === 'number') {\n    var _getAssetByID = getAssetByID(source),\n        _height = _getAssetByID.height,\n        _width = _getAssetByID.width;\n\n    return {\n      height: _height,\n      width: _width\n    };\n  } else if (source != null && !Array.isArray(source) && typeof source === 'object') {\n    var _height2 = source.height,\n        _width2 = source.width;\n    return {\n      height: _height2,\n      width: _width2\n    };\n  }\n}\n\nfunction resolveAssetUri(source) {\n  var uri = null;\n\n  if (typeof source === 'number') {\n    // get the URI from the packager\n    var asset = getAssetByID(source);\n\n    if (asset == null) {\n      throw new Error(\"Image: asset with ID \\\"\" + source + \"\\\" could not be found. Please check the image source or packager.\");\n    }\n\n    var scale = asset.scales[0];\n\n    if (asset.scales.length > 1) {\n      var preferredScale = PixelRatio.get(); // Get the scale which is closest to the preferred scale\n\n      scale = asset.scales.reduce((prev, curr) => Math.abs(curr - preferredScale) < Math.abs(prev - preferredScale) ? curr : prev);\n    }\n\n    var scaleSuffix = scale !== 1 ? \"@\" + scale + \"x\" : '';\n    uri = asset ? asset.httpServerLocation + \"/\" + asset.name + scaleSuffix + \".\" + asset.type : '';\n  } else if (typeof source === 'string') {\n    uri = source;\n  } else if (source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n\n  if (uri) {\n    var match = uri.match(svgDataUriPattern); // inline SVG markup may contain characters (e.g., #, \") that need to be escaped\n\n    if (match) {\n      var prefix = match[1],\n          svg = match[2];\n      var encodedSvg = encodeURIComponent(svg);\n      return \"\" + prefix + encodedSvg;\n    }\n  }\n\n  return uri;\n}\n\nvar Image = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var accessibilityLabel = props.accessibilityLabel,\n      blurRadius = props.blurRadius,\n      defaultSource = props.defaultSource,\n      draggable = props.draggable,\n      onError = props.onError,\n      onLayout = props.onLayout,\n      onLoad = props.onLoad,\n      onLoadEnd = props.onLoadEnd,\n      onLoadStart = props.onLoadStart,\n      pointerEvents = props.pointerEvents,\n      source = props.source,\n      style = props.style,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.children) {\n      throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');\n    }\n  }\n\n  var _React$useState = React.useState(() => {\n    var uri = resolveAssetUri(source);\n\n    if (uri != null) {\n      var isLoaded = ImageLoader.has(uri);\n\n      if (isLoaded) {\n        return LOADED;\n      }\n    }\n\n    return IDLE;\n  }),\n      state = _React$useState[0],\n      updateState = _React$useState[1];\n\n  var _React$useState2 = React.useState({}),\n      layout = _React$useState2[0],\n      updateLayout = _React$useState2[1];\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hiddenImageRef = React.useRef(null);\n  var filterRef = React.useRef(_filterId++);\n  var requestRef = React.useRef(null);\n  var shouldDisplaySource = state === LOADED || state === LOADING && defaultSource == null;\n\n  var _getFlatStyle = getFlatStyle(style, blurRadius, filterRef.current),\n      flatStyle = _getFlatStyle[0],\n      _resizeMode = _getFlatStyle[1],\n      filter = _getFlatStyle[2],\n      tintColor = _getFlatStyle[3];\n\n  var resizeMode = props.resizeMode || _resizeMode || 'cover';\n  var selectedSource = shouldDisplaySource ? source : defaultSource;\n  var displayImageUri = resolveAssetUri(selectedSource);\n  var imageSizeStyle = resolveAssetDimensions(selectedSource);\n  var backgroundImage = displayImageUri ? \"url(\\\"\" + displayImageUri + \"\\\")\" : null;\n  var backgroundSize = getBackgroundSize(); // Accessibility image allows users to trigger the browser's image context menu\n\n  var hiddenImage = displayImageUri ? createElement('img', {\n    alt: accessibilityLabel || '',\n    style: styles.accessibilityImage$raw,\n    draggable: draggable || false,\n    ref: hiddenImageRef,\n    src: displayImageUri\n  }) : null;\n\n  function getBackgroundSize() {\n    if (hiddenImageRef.current != null && (resizeMode === 'center' || resizeMode === 'repeat')) {\n      var _hiddenImageRef$curre = hiddenImageRef.current,\n          naturalHeight = _hiddenImageRef$curre.naturalHeight,\n          naturalWidth = _hiddenImageRef$curre.naturalWidth;\n      var _height3 = layout.height,\n          _width3 = layout.width;\n\n      if (naturalHeight && naturalWidth && _height3 && _width3) {\n        var scaleFactor = Math.min(1, _width3 / naturalWidth, _height3 / naturalHeight);\n        var x = Math.ceil(scaleFactor * naturalWidth);\n        var y = Math.ceil(scaleFactor * naturalHeight);\n        return x + \"px \" + y + \"px\";\n      }\n    }\n  }\n\n  function handleLayout(e) {\n    if (resizeMode === 'center' || resizeMode === 'repeat' || onLayout) {\n      var _layout = e.nativeEvent.layout;\n      onLayout && onLayout(e);\n      updateLayout(_layout);\n    }\n  } // Image loading\n\n\n  var uri = resolveAssetUri(source);\n  React.useEffect(() => {\n    abortPendingRequest();\n\n    if (uri != null) {\n      updateState(LOADING);\n\n      if (onLoadStart) {\n        onLoadStart();\n      }\n\n      requestRef.current = ImageLoader.load(uri, function load(e) {\n        updateState(LOADED);\n\n        if (onLoad) {\n          onLoad(e);\n        }\n\n        if (onLoadEnd) {\n          onLoadEnd();\n        }\n      }, function error() {\n        updateState(ERRORED);\n\n        if (onError) {\n          onError({\n            nativeEvent: {\n              error: \"Failed to load resource \" + uri + \" (404)\"\n            }\n          });\n        }\n\n        if (onLoadEnd) {\n          onLoadEnd();\n        }\n      });\n    }\n\n    function abortPendingRequest() {\n      if (requestRef.current != null) {\n        ImageLoader.abort(requestRef.current);\n        requestRef.current = null;\n      }\n    }\n\n    return abortPendingRequest;\n  }, [uri, requestRef, updateState, onError, onLoad, onLoadEnd, onLoadStart]);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    accessibilityLabel: accessibilityLabel,\n    onLayout: handleLayout,\n    pointerEvents: pointerEvents,\n    ref: ref,\n    style: [styles.root, hasTextAncestor && styles.inline, imageSizeStyle, flatStyle]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [styles.image, resizeModeStyles[resizeMode], {\n      backgroundImage,\n      filter\n    }, backgroundSize != null && {\n      backgroundSize\n    }],\n    suppressHydrationWarning: true\n  }), hiddenImage, createTintColorSVG(tintColor, filterRef.current));\n});\nImage.displayName = 'Image'; // $FlowIgnore: This is the correct type, but casting makes it unhappy since the variables aren't defined yet\n\nvar ImageWithStatics = Image;\n\nImageWithStatics.getSize = function (uri, success, failure) {\n  ImageLoader.getSize(uri, success, failure);\n};\n\nImageWithStatics.prefetch = function (uri) {\n  return ImageLoader.prefetch(uri);\n};\n\nImageWithStatics.queryCache = function (uris) {\n  return ImageLoader.queryCache(uris);\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flexBasis: 'auto',\n    overflow: 'hidden',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  },\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    zIndex: -1\n  }),\n  accessibilityImage$raw: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: '100%',\n    opacity: 0,\n    width: '100%',\n    zIndex: -1\n  })\n});\nvar resizeModeStyles = StyleSheet.create({\n  center: {\n    backgroundSize: 'auto'\n  },\n  contain: {\n    backgroundSize: 'contain'\n  },\n  cover: {\n    backgroundSize: 'cover'\n  },\n  none: {\n    backgroundPosition: '0',\n    backgroundSize: 'auto'\n  },\n  repeat: {\n    backgroundPosition: '0',\n    backgroundRepeat: 'repeat',\n    backgroundSize: 'auto'\n  },\n  stretch: {\n    backgroundSize: '100% 100%'\n  }\n});\nexport default ImageWithStatics;"]},"metadata":{},"sourceType":"module"}