{"ast":null,"code":"import UIManager from \"../../exports/UIManager\";\nvar TextInputState = {\n  _currentlyFocusedNode: null,\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n    return this._currentlyFocusedNode;\n  },\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n};\nexport default TextInputState;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/TextInputState/index.js"],"names":["UIManager","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur"],"mappings":"AASA,OAAOA,SAAP;AAOA,IAAIC,cAAc,GAAG;EAInBC,qBAAqB,EAAE,IAJJ;EAUnBC,qBAVmB,EAAA,SAAA,qBAAA,GAUK;IACtB,IAAIC,QAAQ,CAACC,aAATD,KAA2B,IAAA,CAAKF,qBAApC,EAA2D;MACzD,IAAA,CAAKA,qBAAL,GAA6B,IAA7B;IACD;IAED,OAAO,IAAA,CAAKA,qBAAZ;EACD,CAhBkB;EAuBnBI,cAvBmB,EAAA,SAAA,cAAA,CAuBJC,aAvBI,EAuBW;IAC5B,IAAIA,aAAa,KAAK,IAAtB,EAA4B;MAC1B,IAAA,CAAKL,qBAAL,GAA6BK,aAA7B;MAEA,IAAIH,QAAQ,CAACC,aAATD,KAA2BG,aAA/B,EAA8C;QAC5CP,SAAS,CAACQ,KAAVR,CAAgBO,aAAhBP,CAAAA;MACD;IACF;EACF,CA/BkB;EAsCnBS,aAtCmB,EAAA,SAAA,aAAA,CAsCLF,aAtCK,EAsCU;IAC3B,IAAIA,aAAa,KAAK,IAAtB,EAA4B;MAC1B,IAAA,CAAKL,qBAAL,GAA6B,IAA7B;MAEA,IAAIE,QAAQ,CAACC,aAATD,KAA2BG,aAA/B,EAA8C;QAC5CP,SAAS,CAACU,IAAVV,CAAeO,aAAfP,CAAAA;MACD;IACF;EACF;AA9CkB,CAArB;AAiDA,eAAeC,cAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\n\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        UIManager.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        UIManager.blur(textFieldNode);\n      }\n    }\n  }\n\n};\nexport default TextInputState;"]},"metadata":{},"sourceType":"module"}