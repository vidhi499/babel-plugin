{"ast":null,"code":"'use strict';\n\nvar _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from \"../../modules/pick\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePressEvents from \"../../modules/usePressEvents\";\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  _s();\n  var delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n_s(TouchableWithoutFeedback, \"xIz3NTQMJ3lMobyA46fiO3BhavE=\", false, function () {\n  return [usePressEvents, useMergeRefs];\n});\n_c = TouchableWithoutFeedback;\nvar MemoedTouchableWithoutFeedback = React.memo(_c2 = React.forwardRef(TouchableWithoutFeedback));\n_c3 = MemoedTouchableWithoutFeedback;\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TouchableWithoutFeedback\");\n$RefreshReg$(_c2, \"MemoedTouchableWithoutFeedback$React.memo\");\n$RefreshReg$(_c3, \"MemoedTouchableWithoutFeedback\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js"],"names":["React","useMemo","useRef","pick","useMergeRefs","usePressEvents","forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","pickProps","props","TouchableWithoutFeedback","forwardedRef","delayPressIn","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","pressConfig","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","element","Children","only","supportedProps","ref","elementProps","Object","assign","cloneElement","MemoedTouchableWithoutFeedback","memo","forwardRef","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = props => pick(props, forwardPropsList);\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n    onPressStart: onPressIn,\n    onPressEnd: onPressOut\n  }), [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement(element, elementProps, ...children);\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;"]},"metadata":{},"sourceType":"module"}