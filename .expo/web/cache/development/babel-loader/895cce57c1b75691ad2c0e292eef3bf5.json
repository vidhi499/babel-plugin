{"ast":null,"code":"import normalizeColor from \"./compiler/normalizeColor\";\nimport normalizeValueWithProperty from \"./compiler/normalizeValueWithProperty\";\nvar emptyObject = {};\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n    textShadowOffset = style.textShadowOffset,\n    textShadowRadius = style.textShadowRadius;\n  var _ref2 = textShadowOffset || defaultOffset,\n    height = _ref2.height,\n    width = _ref2.width;\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n    nextStyle[prop] = value;\n  }\n  return nextStyle;\n};\nexport default preprocess;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/preprocess.js"],"names":["normalizeColor","normalizeValueWithProperty","emptyObject","defaultOffset","height","width","createBoxShadowValue","shadowColor","style","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","_ref2","radius","preprocess","originalStyle","nextStyle","originalProp","originalValue","prop","value","Object","prototype","hasOwnProperty","call","boxShadowValue","boxShadow","textShadowValue","textShadow"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\nvar emptyObject = {};\n/**\n * Shadows\n */\n\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = style => {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = style => {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref2 = textShadowOffset || defaultOffset,\n      height = _ref2.height,\n      width = _ref2.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n/**\n * Preprocess styles\n */\n\nexport var preprocess = originalStyle => {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    } // Convert shadow styles\n\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    } // Convert text shadow styles\n\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  } // $FlowIgnore\n\n\n  return nextStyle;\n};\nexport default preprocess;"]},"metadata":{},"sourceType":"module"}