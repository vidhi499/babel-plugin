{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\nimport * as React from \"react\";\nimport View from \"../View\";\nvar KeyboardAvoidingView = function (_React$Component) {\n  _inherits(KeyboardAvoidingView, _React$Component);\n  var _super = _createSuper(KeyboardAvoidingView);\n  function KeyboardAvoidingView() {\n    var _this;\n    _classCallCheck(this, KeyboardAvoidingView);\n    _this = _super.apply(this, arguments);\n    _this.frame = null;\n    _this.onLayout = function (event) {\n      _this.frame = event.nativeEvent.layout;\n    };\n    return _this;\n  }\n  _createClass(KeyboardAvoidingView, [{\n    key: \"relativeKeyboardHeight\",\n    value: function relativeKeyboardHeight(keyboardFrame) {\n      var frame = this.frame;\n      if (!frame || !keyboardFrame) {\n        return 0;\n      }\n      var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n      return Math.max(frame.y + frame.height - keyboardY, 0);\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        behavior = _this$props.behavior,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n        rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return React.createElement(View, _extends({\n        onLayout: this.onLayout\n      }, rest));\n    }\n  }]);\n  return KeyboardAvoidingView;\n}(React.Component);\nexport default KeyboardAvoidingView;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/KeyboardAvoidingView/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","View","KeyboardAvoidingView","Component","constructor","arguments","frame","onLayout","event","nativeEvent","layout","relativeKeyboardHeight","keyboardFrame","keyboardY","screenY","props","keyboardVerticalOffset","Math","max","y","height","onKeyboardChange","render","_this$props","behavior","contentContainerStyle","rest","createElement"],"mappings":";;;;;;;AAAA,OAAOA,QAAAA,MAAc,gCAAA;AACrB,OAAOC,6BAAAA,MAAmC,qDAAA;AAC1C,IAAIC,SAAAA,GAAY,CAAC,UAAA,EAAY,uBAAA,EAAyB,wBAAA,CAAyB;AAW/E,OAAA,KAAYC,KAAAA,MAAW,OAAA;AACvB,OAAOC,IAAAA;AAAoB,IAErBC,oBAAAA;EAAAA;EAAAA;EACJE,gCAAc;IAAA;IAAA;IACZ,2BAASC,SAAAA;IACT,MAAKC,KAAK,GAAG,IAAI;IAEjB,MAAKC,QAAQ,GAAGC,UAAAA,KAAAA,EAAS;MACvB,MAAKF,KAAK,GAAGE,KAAAA,CAAMC,WAAW,CAACC,MAAM;IACvC,CAAA;IAAA;EACF;EAAA;IAAA;IAAA,OAEAC,gCAAuBC,aAAa,EAAE;MACpC,IAAIN,KAAAA,GAAQ,IAAI,CAACA,KAAK;MAEtB,IAAI,CAACA,KAAAA,IAAS,CAACM,aAAAA,EAAe;QAC5B,OAAO,CAAA;MACT;MAEA,IAAIC,SAAAA,GAAYD,aAAAA,CAAcE,OAAO,IAAI,IAAI,CAACC,KAAK,CAACC,sBAAsB,IAAI,CAAA,CAAA;MAC9E,OAAOC,IAAAA,CAAKC,GAAG,CAACZ,KAAAA,CAAMa,CAAC,GAAGb,KAAAA,CAAMc,MAAM,GAAGP,SAAAA,EAAW,CAAA,CAAA;IACtD;EAAA;IAAA;IAAA,OAEAQ,0BAAiBb,KAAK,EAAE,CAAC;EAAA;IAAA;IAAA,OAEzBc,kBAAS;MACP,IAAIC,WAAAA,GAAc,IAAI,CAACR,KAAK;QACxBS,QAAAA,GAAWD,WAAAA,CAAYC,QAAQ;QAC/BC,qBAAAA,GAAwBF,WAAAA,CAAYE,qBAAqB;QACzDT,sBAAAA,GAAyBO,WAAAA,CAAYP,sBAAsB;QAC3DU,IAAAA,GAAO5B,6BAAAA,CAA8ByB,WAAAA,EAAaxB,SAAAA,CAAAA;MAEtD,OAAoBC,KAAAA,CAAM2B,aAAa,CAAC1B,IAAAA,EAAMJ,QAAAA,CAAS;QACrDU,QAAAA,EAAU,IAAI,CAACA;MACjB,CAAA,EAAGmB,IAAAA,CAAAA,CAAAA;IACL;EAAA;EAAA;AAAA,EAjCiC1B,KAAAA,CAAMG,SAAS;AAqClD,eAAeD,oBAAAA","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport View from '../View';\n\nclass KeyboardAvoidingView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.frame = null;\n\n    this.onLayout = event => {\n      this.frame = event.nativeEvent.layout;\n    };\n  }\n\n  relativeKeyboardHeight(keyboardFrame) {\n    var frame = this.frame;\n\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  onKeyboardChange(event) {}\n\n  render() {\n    var _this$props = this.props,\n        behavior = _this$props.behavior,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n        rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/React.createElement(View, _extends({\n      onLayout: this.onLayout\n    }, rest));\n  }\n\n}\n\nexport default KeyboardAvoidingView;"]},"metadata":{},"sourceType":"module"}