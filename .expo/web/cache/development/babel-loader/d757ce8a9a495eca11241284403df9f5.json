{"ast":null,"code":"var _toConsumableArray = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray.js\");\nvar _classCallCheck = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/classCallCheck.js\");\nvar _createClass = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/createClass.js\");\nvar _defineProperty = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nvar _slicedToArray = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js\");\nvar _objectWithoutProperties = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/objectWithoutProperties.js\");\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n  _excluded3 = [\"children\"],\n  _excluded4 = [\"children\"];\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar $goTMa$reactariautils = require(\"@react-aria/utils\");\nvar $goTMa$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a[\"default\"] : a;\n}\n$parcel$export(module.exports, \"Pressable\", function () {\n  return $e1dbec26039c051d$export$27c701ed9e449e99;\n});\n$parcel$export(module.exports, \"PressResponder\", function () {\n  return $3596bae48579386f$export$3351871ee4b288b8;\n});\n$parcel$export(module.exports, \"useFocus\", function () {\n  return $5cb73d0ce355b0dc$export$f8168d8dd8fd66e6;\n});\n$parcel$export(module.exports, \"isFocusVisible\", function () {\n  return $e77252a287ef94ab$export$b9b3dfddab17db27;\n});\n$parcel$export(module.exports, \"getInteractionModality\", function () {\n  return $e77252a287ef94ab$export$630ff653c5ada6a9;\n});\n$parcel$export(module.exports, \"setInteractionModality\", function () {\n  return $e77252a287ef94ab$export$8397ddfc504fdb9a;\n});\n$parcel$export(module.exports, \"useInteractionModality\", function () {\n  return $e77252a287ef94ab$export$98e20ec92f614cfe;\n});\n$parcel$export(module.exports, \"useFocusVisible\", function () {\n  return $e77252a287ef94ab$export$ffd9e5021c1fb2d6;\n});\n$parcel$export(module.exports, \"useFocusVisibleListener\", function () {\n  return $e77252a287ef94ab$export$ec71b4b83ac08ec3;\n});\n$parcel$export(module.exports, \"useFocusWithin\", function () {\n  return $d16842bbd0359d1b$export$420e68273165f4ec;\n});\n$parcel$export(module.exports, \"useHover\", function () {\n  return $ffbc150311c75f01$export$ae780daf29e6d456;\n});\n$parcel$export(module.exports, \"useInteractOutside\", function () {\n  return $edcfa848c42f94f4$export$872b660ac5a1ff98;\n});\n$parcel$export(module.exports, \"useKeyboard\", function () {\n  return $892d64db2a3c53b0$export$8f71654801c2f7cd;\n});\n$parcel$export(module.exports, \"useMove\", function () {\n  return $c09386fc48fa427d$export$36da96379f79f245;\n});\n$parcel$export(module.exports, \"usePress\", function () {\n  return $0294ea432cd92340$export$45712eceda6fad21;\n});\n$parcel$export(module.exports, \"useScrollWheel\", function () {\n  return $a3dbce0aed7087e2$export$2123ff2b87c81ca;\n});\n$parcel$export(module.exports, \"useLongPress\", function () {\n  return $3cd7b5d0eebf0ca9$export$c24ed0104d07eab9;\n});\nvar $f7e14e656343df57$var$state = \"default\";\nvar $f7e14e656343df57$var$savedUserSelect = \"\";\nvar $f7e14e656343df57$var$modifiedElementMap = new WeakMap();\nfunction $f7e14e656343df57$export$16a4697467175487(target) {\n  if ((0, $goTMa$reactariautils.isIOS)()) {\n    if ($f7e14e656343df57$var$state === \"default\") {\n      $f7e14e656343df57$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = \"none\";\n    }\n    $f7e14e656343df57$var$state = \"disabled\";\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    $f7e14e656343df57$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n}\nfunction $f7e14e656343df57$export$b0d6fa1ab32e3295(target) {\n  if ((0, $goTMa$reactariautils.isIOS)()) {\n    if ($f7e14e656343df57$var$state !== \"disabled\") return;\n    $f7e14e656343df57$var$state = \"restoring\";\n    setTimeout(function () {\n      (0, $goTMa$reactariautils.runAfterTransition)(function () {\n        if ($f7e14e656343df57$var$state === \"restoring\") {\n          if (document.documentElement.style.webkitUserSelect === \"none\") document.documentElement.style.webkitUserSelect = $f7e14e656343df57$var$savedUserSelect || \"\";\n          $f7e14e656343df57$var$savedUserSelect = \"\";\n          $f7e14e656343df57$var$state = \"default\";\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n      if (target && $f7e14e656343df57$var$modifiedElementMap.has(target)) {\n        var _targetOldUserSelect = $f7e14e656343df57$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === \"none\") target.style.userSelect = _targetOldUserSelect;\n        if (target.getAttribute(\"style\") === \"\") target.removeAttribute(\"style\");\n        $f7e14e656343df57$var$modifiedElementMap[\"delete\"](target);\n      }\n    }\n}\nvar $01d3f539e91688c8$export$5165eccb35aaadb5 = (0, $parcel$interopDefault($goTMa$react)).createContext(null);\n$01d3f539e91688c8$export$5165eccb35aaadb5.displayName = \"PressResponderContext\";\nfunction $0294ea432cd92340$var$usePressResponderContext(props) {\n  var context = (0, $goTMa$react.useContext)((0, $01d3f539e91688c8$export$5165eccb35aaadb5));\n  if (context) {\n    var _register = context.register,\n      _contextProps = _objectWithoutProperties(context, _excluded);\n    props = (0, $goTMa$reactariautils.mergeProps)(_contextProps, props);\n    _register();\n  }\n  (0, $goTMa$reactariautils.useSyncRef)(context, props.ref);\n  return props;\n}\nfunction $0294ea432cd92340$export$45712eceda6fad21(props) {\n  var _$0294ea432cd92340$va = $0294ea432cd92340$var$usePressResponderContext(props),\n    onPress = _$0294ea432cd92340$va.onPress,\n    onPressChange = _$0294ea432cd92340$va.onPressChange,\n    onPressStart = _$0294ea432cd92340$va.onPressStart,\n    onPressEnd = _$0294ea432cd92340$va.onPressEnd,\n    onPressUp = _$0294ea432cd92340$va.onPressUp,\n    isDisabled = _$0294ea432cd92340$va.isDisabled,\n    isPressedProp = _$0294ea432cd92340$va.isPressed,\n    preventFocusOnPress = _$0294ea432cd92340$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$0294ea432cd92340$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$0294ea432cd92340$va.allowTextSelectionOnPress,\n    _ = _$0294ea432cd92340$va.ref,\n    domProps = _objectWithoutProperties(_$0294ea432cd92340$va, _excluded2);\n  var propsRef = (0, $goTMa$react.useRef)(null);\n  propsRef.current = {\n    onPress: onPress,\n    onPressChange: onPressChange,\n    onPressStart: onPressStart,\n    onPressEnd: onPressEnd,\n    onPressUp: onPressUp,\n    isDisabled: isDisabled,\n    shouldCancelOnPointerExit: shouldCancelOnPointerExit\n  };\n  var _ref = (0, $goTMa$react.useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    isPressed = _ref2[0],\n    setPressed = _ref2[1];\n  var ref = (0, $goTMa$react.useRef)({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _ref3 = (0, $goTMa$reactariautils.useGlobalListeners)(),\n    addGlobalListener = _ref3.addGlobalListener,\n    removeAllGlobalListeners = _ref3.removeAllGlobalListeners;\n  var pressProps = (0, $goTMa$react.useMemo)(function () {\n    var state = ref.current;\n    var triggerPressStart = function triggerPressStart(originalEvent, pointerType) {\n      var _propsRef$current = propsRef.current,\n        onPressStart = _propsRef$current.onPressStart,\n        onPressChange = _propsRef$current.onPressChange,\n        isDisabled = _propsRef$current.isDisabled;\n      if (isDisabled || state.didFirePressStart) return;\n      if (onPressStart) onPressStart({\n        type: \"pressstart\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(true);\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n    var triggerPressEnd = function triggerPressEnd(originalEvent, pointerType) {\n      var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _propsRef$current2 = propsRef.current,\n        onPressEnd = _propsRef$current2.onPressEnd,\n        onPressChange = _propsRef$current2.onPressChange,\n        onPress = _propsRef$current2.onPress,\n        isDisabled = _propsRef$current2.isDisabled;\n      if (!state.didFirePressStart) return;\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n      if (onPressEnd) onPressEnd({\n        type: \"pressend\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(false);\n      setPressed(false);\n      if (onPress && wasPressed && !isDisabled) onPress({\n        type: \"press\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var triggerPressUp = function triggerPressUp(originalEvent, pointerType) {\n      var _propsRef$current3 = propsRef.current,\n        onPressUp = _propsRef$current3.onPressUp,\n        isDisabled = _propsRef$current3.isDisabled;\n      if (isDisabled) return;\n      if (onPressUp) onPressUp({\n        type: \"pressup\",\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var cancel = function cancel(e) {\n      if (state.isPressed) {\n        if (state.isOverTarget) triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType, false);\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$b0d6fa1ab32e3295)(state.target);\n      }\n    };\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($0294ea432cd92340$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          if ($0294ea432cd92340$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          e.stopPropagation();\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, \"keyboard\");\n            addGlobalListener(document, \"keyup\", onKeyUp, false);\n          }\n        } else if (e.key === \"Enter\" && $0294ea432cd92340$var$isHTMLAnchorLink(e.currentTarget)) e.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($0294ea432cd92340$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($0294ea432cd92340$var$createEvent(state.target, e), \"keyboard\");\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) e.preventDefault();\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === \"virtual\" || (0, $goTMa$reactariautils.isVirtualClick)(e.nativeEvent))) {\n            if (!isDisabled && !preventFocusOnPress) (0, $goTMa$reactariautils.focusWithoutScrolling)(e.currentTarget);\n            triggerPressStart(e, \"virtual\");\n            triggerPressUp(e, \"virtual\");\n            triggerPressEnd(e, \"virtual\");\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $0294ea432cd92340$var$isValidKeyboardEvent(e, state.target)) {\n        if ($0294ea432cd92340$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        var _target = e.target;\n        triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), \"keyboard\", state.target.contains(_target));\n        removeAllGlobalListeners();\n        if (state.target instanceof HTMLElement && state.target.contains(_target) && ($0294ea432cd92340$var$isHTMLAnchorLink(state.target) || state.target.getAttribute(\"role\") === \"link\")) state.target.click();\n      }\n    };\n    if (typeof PointerEvent !== \"undefined\") {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ((0, $goTMa$reactariautils.isVirtualPointerEvent)(e.nativeEvent)) {\n          state.pointerType = \"virtual\";\n          return;\n        }\n        if ($0294ea432cd92340$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) (0, $goTMa$reactariautils.focusWithoutScrolling)(e.currentTarget);\n          if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$16a4697467175487)(state.target);\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, \"pointermove\", _onPointerMove, false);\n          addGlobalListener(document, \"pointerup\", _onPointerUp, false);\n          addGlobalListener(document, \"pointercancel\", _onPointerCancel, false);\n        }\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          if ($0294ea432cd92340$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n        if (e.button === 0 && $0294ea432cd92340$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      var _onPointerMove = function _onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if ($0294ea432cd92340$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      var _onPointerUp = function _onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($0294ea432cd92340$var$isOverTarget(e, state.target)) triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$b0d6fa1ab32e3295)(state.target);\n        }\n      };\n      var _onPointerCancel = function _onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($0294ea432cd92340$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) return;\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = (0, $goTMa$reactariautils.isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n        if (!isDisabled && !preventFocusOnPress) (0, $goTMa$reactariautils.focusWithoutScrolling)(e.currentTarget);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, \"mouseup\", _onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n      };\n      var _onMouseUp = function _onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if ($0294ea432cd92340$var$isOverTarget(e, state.target)) triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($0294ea432cd92340$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        var touch = $0294ea432cd92340$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = \"touch\";\n        if (!isDisabled && !preventFocusOnPress) (0, $goTMa$reactariautils.focusWithoutScrolling)(e.currentTarget);\n        if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$16a4697467175487)(state.target);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, \"scroll\", _onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $0294ea432cd92340$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $0294ea432cd92340$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $0294ea432cd92340$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $0294ea432cd92340$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$b0d6fa1ab32e3295)(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var _onScroll = function _onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n  (0, $goTMa$react.useEffect)(function () {\n    return function () {\n      if (!allowTextSelectionOnPress) (0, $f7e14e656343df57$export$b0d6fa1ab32e3295)(ref.current.target);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: (0, $goTMa$reactariautils.mergeProps)(domProps, pressProps)\n  };\n}\nfunction $0294ea432cd92340$var$isHTMLAnchorLink(target) {\n  return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\nfunction $0294ea432cd92340$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n    code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute(\"role\");\n  return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof HTMLInputElement && !$0294ea432cd92340$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$0294ea432cd92340$var$isHTMLAnchorLink(element) || role === \"button\" && key !== \"Enter\") && !(role === \"link\" && key !== \"Enter\");\n}\nfunction $0294ea432cd92340$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $0294ea432cd92340$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var _i = 0; _i < changedTouches.length; _i++) {\n    var _touch = changedTouches[_i];\n    if (_touch.identifier === pointerId) return _touch;\n  }\n  return null;\n}\nfunction $0294ea432cd92340$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $0294ea432cd92340$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $0294ea432cd92340$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $0294ea432cd92340$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $0294ea432cd92340$var$getPointClientRect(point);\n  return $0294ea432cd92340$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $0294ea432cd92340$var$shouldPreventDefault(target) {\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\nfunction $0294ea432cd92340$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$0294ea432cd92340$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== \"submit\";\n  return true;\n}\nvar $0294ea432cd92340$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction $0294ea432cd92340$var$isValidInputKey(target, key) {\n  return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $0294ea432cd92340$var$nonTextInputTypes.has(target.type);\n}\nvar $e1dbec26039c051d$export$27c701ed9e449e99 = (0, $parcel$interopDefault($goTMa$react)).forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n    props = _objectWithoutProperties(_ref4, _excluded3);\n  var newRef = (0, $goTMa$react.useRef)();\n  ref = ref !== null && ref !== void 0 ? ref : newRef;\n  var _ref5 = (0, $0294ea432cd92340$export$45712eceda6fad21)(_objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })),\n    pressProps = _ref5.pressProps;\n  var child = (0, $parcel$interopDefault($goTMa$react)).Children.only(children);\n  return (0, $parcel$interopDefault($goTMa$react)).cloneElement(child, _objectSpread({\n    ref: ref\n  }, (0, $goTMa$reactariautils.mergeProps)(child.props, pressProps)));\n});\nvar $3596bae48579386f$export$3351871ee4b288b8 = (0, $parcel$interopDefault($goTMa$react)).forwardRef(function (_ref6, ref) {\n  var children = _ref6.children,\n    props = _objectWithoutProperties(_ref6, _excluded4);\n  var isRegistered = (0, $goTMa$react.useRef)(false);\n  var prevContext = (0, $goTMa$react.useContext)((0, $01d3f539e91688c8$export$5165eccb35aaadb5));\n  var context = (0, $goTMa$reactariautils.mergeProps)(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  (0, $goTMa$reactariautils.useSyncRef)(prevContext, ref);\n  (0, $goTMa$react.useEffect)(function () {\n    if (!isRegistered.current) console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n  }, []);\n  return (0, $parcel$interopDefault($goTMa$react)).createElement((0, $01d3f539e91688c8$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\nvar $625cf83917e112ad$export$905e7fc544a71f36 = function () {\n  \"use strict\";\n\n  function $625cf83917e112ad$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $625cf83917e112ad$export$905e7fc544a71f36);\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n  _createClass($625cf83917e112ad$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n  return $625cf83917e112ad$export$905e7fc544a71f36;\n}();\nfunction $625cf83917e112ad$export$715c682d09d639cc(onBlur) {\n  var stateRef = (0, $goTMa$react.useRef)({\n    isFocused: false,\n    onBlur: onBlur,\n    observer: null\n  });\n  stateRef.current.onBlur = onBlur;\n  (0, $goTMa$reactariautils.useLayoutEffect)(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  return (0, $goTMa$react.useCallback)(function (e) {\n    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var _target2 = e.target;\n      var _onBlurHandler = function _onBlurHandler(e) {\n        var _stateRef_current, _stateRef_current_onBlur;\n        stateRef.current.isFocused = false;\n        if (_target2.disabled) (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $625cf83917e112ad$export$905e7fc544a71f36(\"blur\", e));\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n      _target2.addEventListener(\"focusout\", _onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && _target2.disabled) {\n          stateRef.current.observer.disconnect();\n          _target2.dispatchEvent(new FocusEvent(\"blur\"));\n          _target2.dispatchEvent(new FocusEvent(\"focusout\", {\n            bubbles: true\n          }));\n        }\n      });\n      stateRef.current.observer.observe(_target2, {\n        attributes: true,\n        attributeFilter: [\"disabled\"]\n      });\n    }\n  }, []);\n}\nfunction $5cb73d0ce355b0dc$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onFocusChange = props.onFocusChange;\n  var onBlur = (0, $goTMa$react.useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = (0, $625cf83917e112ad$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $goTMa$react.useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : null\n    }\n  };\n}\nvar $e77252a287ef94ab$var$currentModality = null;\nvar $e77252a287ef94ab$var$changeHandlers = new Set();\nvar $e77252a287ef94ab$var$hasSetupGlobalListeners = false;\nvar $e77252a287ef94ab$var$hasEventBeforeFocus = false;\nvar $e77252a287ef94ab$var$hasBlurredWindowRecently = false;\nvar $e77252a287ef94ab$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $e77252a287ef94ab$var$triggerChangeHandlers(modality, e) {\n  var _iterator = _createForOfIteratorHelper($e77252a287ef94ab$var$changeHandlers),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _handler = _step.value;\n      _handler(modality, e);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction $e77252a287ef94ab$var$isValidKey(e) {\n  return !(e.metaKey || !(0, $goTMa$reactariautils.isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction $e77252a287ef94ab$var$handleKeyboardEvent(e) {\n  $e77252a287ef94ab$var$hasEventBeforeFocus = true;\n  if ($e77252a287ef94ab$var$isValidKey(e)) {\n    $e77252a287ef94ab$var$currentModality = \"keyboard\";\n    $e77252a287ef94ab$var$triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction $e77252a287ef94ab$var$handlePointerEvent(e) {\n  $e77252a287ef94ab$var$currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    $e77252a287ef94ab$var$hasEventBeforeFocus = true;\n    $e77252a287ef94ab$var$triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction $e77252a287ef94ab$var$handleClickEvent(e) {\n  if ((0, $goTMa$reactariautils.isVirtualClick)(e)) {\n    $e77252a287ef94ab$var$hasEventBeforeFocus = true;\n    $e77252a287ef94ab$var$currentModality = \"virtual\";\n  }\n}\nfunction $e77252a287ef94ab$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) return;\n  if (!$e77252a287ef94ab$var$hasEventBeforeFocus && !$e77252a287ef94ab$var$hasBlurredWindowRecently) {\n    $e77252a287ef94ab$var$currentModality = \"virtual\";\n    $e77252a287ef94ab$var$triggerChangeHandlers(\"virtual\", e);\n  }\n  $e77252a287ef94ab$var$hasEventBeforeFocus = false;\n  $e77252a287ef94ab$var$hasBlurredWindowRecently = false;\n}\nfunction $e77252a287ef94ab$var$handleWindowBlur() {\n  $e77252a287ef94ab$var$hasEventBeforeFocus = false;\n  $e77252a287ef94ab$var$hasBlurredWindowRecently = true;\n}\nfunction $e77252a287ef94ab$var$setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || $e77252a287ef94ab$var$hasSetupGlobalListeners) return;\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $e77252a287ef94ab$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener(\"keydown\", $e77252a287ef94ab$var$handleKeyboardEvent, true);\n  document.addEventListener(\"keyup\", $e77252a287ef94ab$var$handleKeyboardEvent, true);\n  document.addEventListener(\"click\", $e77252a287ef94ab$var$handleClickEvent, true);\n  window.addEventListener(\"focus\", $e77252a287ef94ab$var$handleFocusEvent, true);\n  window.addEventListener(\"blur\", $e77252a287ef94ab$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", $e77252a287ef94ab$var$handlePointerEvent, true);\n    document.addEventListener(\"pointermove\", $e77252a287ef94ab$var$handlePointerEvent, true);\n    document.addEventListener(\"pointerup\", $e77252a287ef94ab$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", $e77252a287ef94ab$var$handlePointerEvent, true);\n    document.addEventListener(\"mousemove\", $e77252a287ef94ab$var$handlePointerEvent, true);\n    document.addEventListener(\"mouseup\", $e77252a287ef94ab$var$handlePointerEvent, true);\n  }\n  $e77252a287ef94ab$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== \"undefined\") {\n  if (document.readyState !== \"loading\") $e77252a287ef94ab$var$setupGlobalFocusEvents();else document.addEventListener(\"DOMContentLoaded\", $e77252a287ef94ab$var$setupGlobalFocusEvents);\n}\nfunction $e77252a287ef94ab$export$b9b3dfddab17db27() {\n  return $e77252a287ef94ab$var$currentModality !== \"pointer\";\n}\nfunction $e77252a287ef94ab$export$630ff653c5ada6a9() {\n  return $e77252a287ef94ab$var$currentModality;\n}\nfunction $e77252a287ef94ab$export$8397ddfc504fdb9a(modality) {\n  $e77252a287ef94ab$var$currentModality = modality;\n  $e77252a287ef94ab$var$triggerChangeHandlers(modality, null);\n}\nfunction $e77252a287ef94ab$export$98e20ec92f614cfe() {\n  $e77252a287ef94ab$var$setupGlobalFocusEvents();\n  var _ref7 = (0, $goTMa$react.useState)($e77252a287ef94ab$var$currentModality),\n    _ref8 = _slicedToArray(_ref7, 2),\n    modality = _ref8[0],\n    setModality = _ref8[1];\n  (0, $goTMa$react.useEffect)(function () {\n    var handler = function handler() {\n      setModality($e77252a287ef94ab$var$currentModality);\n    };\n    $e77252a287ef94ab$var$changeHandlers.add(handler);\n    return function () {\n      $e77252a287ef94ab$var$changeHandlers[\"delete\"](handler);\n    };\n  }, []);\n  return modality;\n}\nfunction $e77252a287ef94ab$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === \"keyboard\" && e instanceof KeyboardEvent && !$e77252a287ef94ab$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $e77252a287ef94ab$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n    autoFocus = props.autoFocus;\n  var _ref9 = (0, $goTMa$react.useState)(autoFocus || $e77252a287ef94ab$export$b9b3dfddab17db27()),\n    _ref10 = _slicedToArray(_ref9, 2),\n    isFocusVisibleState = _ref10[0],\n    setFocusVisible = _ref10[1];\n  $e77252a287ef94ab$export$ec71b4b83ac08ec3(function (isFocusVisible) {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nfunction $e77252a287ef94ab$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $e77252a287ef94ab$var$setupGlobalFocusEvents();\n  (0, $goTMa$react.useEffect)(function () {\n    var handler = function handler(modality, e) {\n      if (!$e77252a287ef94ab$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n      fn($e77252a287ef94ab$export$b9b3dfddab17db27());\n    };\n    $e77252a287ef94ab$var$changeHandlers.add(handler);\n    return function () {\n      $e77252a287ef94ab$var$changeHandlers[\"delete\"](handler);\n    };\n  }, deps);\n}\nfunction $d16842bbd0359d1b$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = (0, $goTMa$react.useRef)({\n    isFocusWithin: false\n  });\n  var onBlur = (0, $goTMa$react.useCallback)(function (e) {\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = (0, $625cf83917e112ad$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $goTMa$react.useCallback)(function (e) {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: null,\n      onBlur: null\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\nvar $ffbc150311c75f01$var$globalIgnoreEmulatedMouseEvents = false;\nvar $ffbc150311c75f01$var$hoverCount = 0;\nfunction $ffbc150311c75f01$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $ffbc150311c75f01$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $ffbc150311c75f01$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $ffbc150311c75f01$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === \"touch\") $ffbc150311c75f01$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $ffbc150311c75f01$var$setupGlobalTouchEvents() {\n  if (typeof document === \"undefined\") return;\n  if (typeof PointerEvent !== \"undefined\") document.addEventListener(\"pointerup\", $ffbc150311c75f01$var$handleGlobalPointerEvent);else document.addEventListener(\"touchend\", $ffbc150311c75f01$var$setGlobalIgnoreEmulatedMouseEvents);\n  $ffbc150311c75f01$var$hoverCount++;\n  return function () {\n    $ffbc150311c75f01$var$hoverCount--;\n    if ($ffbc150311c75f01$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== \"undefined\") document.removeEventListener(\"pointerup\", $ffbc150311c75f01$var$handleGlobalPointerEvent);else document.removeEventListener(\"touchend\", $ffbc150311c75f01$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\nfunction $ffbc150311c75f01$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _ref11 = (0, $goTMa$react.useState)(false),\n    _ref12 = _slicedToArray(_ref11, 2),\n    isHovered = _ref12[0],\n    setHovered = _ref12[1];\n  var state = (0, $goTMa$react.useRef)({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: \"\",\n    target: null\n  }).current;\n  (0, $goTMa$react.useEffect)($ffbc150311c75f01$var$setupGlobalTouchEvents, []);\n  var _ref13 = (0, $goTMa$react.useMemo)(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === \"touch\" || state.isHovered || !event.currentTarget.contains(event.target)) return;\n        state.isHovered = true;\n        var target = event.currentTarget;\n        state.target = target;\n        if (onHoverStart) onHoverStart({\n          type: \"hoverstart\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(true);\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = \"\";\n        state.target = null;\n        if (pointerType === \"touch\" || !state.isHovered) return;\n        state.isHovered = false;\n        var target = event.currentTarget;\n        if (onHoverEnd) onHoverEnd({\n          type: \"hoverend\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(false);\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== \"undefined\") {\n        hoverProps.onPointerEnter = function (e) {\n          if ($ffbc150311c75f01$var$globalIgnoreEmulatedMouseEvents && e.pointerType === \"mouse\") return;\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$ffbc150311c75f01$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, \"mouse\");\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, \"mouse\");\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps = _ref13.hoverProps,\n    triggerHoverEnd = _ref13.triggerHoverEnd;\n  (0, $goTMa$react.useEffect)(function () {\n    if (isDisabled) triggerHoverEnd({\n      currentTarget: state.target\n    }, state.pointerType);\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  };\n}\nfunction $edcfa848c42f94f4$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = (0, $goTMa$react.useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside: onInteractOutside,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  var state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n  (0, $goTMa$react.useEffect)(function () {\n    if (isDisabled) return;\n    var onPointerDown = function onPointerDown(e) {\n      if ($edcfa848c42f94f4$var$isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) state.onInteractOutsideStart(e);\n        state.isPointerDown = true;\n      }\n    };\n    if (typeof PointerEvent !== \"undefined\") {\n      var _onPointerUp2 = function _onPointerUp2(e) {\n        if (state.isPointerDown && state.onInteractOutside && $edcfa848c42f94f4$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener(\"pointerdown\", onPointerDown, true);\n      document.addEventListener(\"pointerup\", _onPointerUp2, true);\n      return function () {\n        document.removeEventListener(\"pointerdown\", onPointerDown, true);\n        document.removeEventListener(\"pointerup\", _onPointerUp2, true);\n      };\n    } else {\n      var _onMouseUp2 = function _onMouseUp2(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && state.onInteractOutside && $edcfa848c42f94f4$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      var _onTouchEnd = function _onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && $edcfa848c42f94f4$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener(\"mousedown\", onPointerDown, true);\n      document.addEventListener(\"mouseup\", _onMouseUp2, true);\n      document.addEventListener(\"touchstart\", onPointerDown, true);\n      document.addEventListener(\"touchend\", _onTouchEnd, true);\n      return function () {\n        document.removeEventListener(\"mousedown\", onPointerDown, true);\n        document.removeEventListener(\"mouseup\", _onMouseUp2, true);\n        document.removeEventListener(\"touchstart\", onPointerDown, true);\n        document.removeEventListener(\"touchend\", _onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\nfunction $edcfa848c42f94f4$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    var _ownerDocument = event.target.ownerDocument;\n    if (!_ownerDocument || !_ownerDocument.documentElement.contains(event.target)) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nfunction $951fbcbbca8db6ce$export$48d1ea6320830260(handler) {\n  if (!handler) return;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error(\"stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.\");\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nfunction $892d64db2a3c53b0$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: (0, $951fbcbbca8db6ce$export$48d1ea6320830260)(props.onKeyDown),\n      onKeyUp: (0, $951fbcbbca8db6ce$export$48d1ea6320830260)(props.onKeyUp)\n    }\n  };\n}\nfunction $c09386fc48fa427d$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = (0, $goTMa$react.useRef)({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _ref14 = (0, $goTMa$reactariautils.useGlobalListeners)(),\n    addGlobalListener = _ref14.addGlobalListener,\n    removeGlobalListener = _ref14.removeGlobalListener;\n  var moveProps = (0, $goTMa$react.useMemo)(function () {\n    var moveProps = {};\n    var start = function start() {\n      (0, $f7e14e656343df57$export$16a4697467175487)();\n      state.current.didMove = false;\n    };\n    var move = function move(originalEvent, pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) return;\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n          type: \"movestart\",\n          pointerType: pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: \"move\",\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var end = function end(originalEvent, pointerType) {\n      (0, $f7e14e656343df57$export$b0d6fa1ab32e3295)();\n      if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n        type: \"moveend\",\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    if (typeof PointerEvent === \"undefined\") {\n      var _onMouseMove = function _onMouseMove(e) {\n        if (e.button === 0) {\n          move(e, \"mouse\", e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var _onMouseUp3 = function _onMouseUp3(e) {\n        if (e.button === 0) {\n          end(e, \"mouse\");\n          removeGlobalListener(window, \"mousemove\", _onMouseMove, false);\n          removeGlobalListener(window, \"mouseup\", _onMouseUp3, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, \"mousemove\", _onMouseMove, false);\n          addGlobalListener(window, \"mouseup\", _onMouseUp3, false);\n        }\n      };\n      var _onTouchMove = function _onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref15) {\n          var identifier = _ref15.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            _pageX = _e$changedTouches$tou.pageX,\n            _pageY = _e$changedTouches$tou.pageY;\n          move(e, \"touch\", _pageX - state.current.lastPosition.pageX, _pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: _pageX,\n            pageY: _pageY\n          };\n        }\n      };\n      var _onTouchEnd2 = function _onTouchEnd2(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref16) {\n          var identifier = _ref16.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end(e, \"touch\");\n          state.current.id = null;\n          removeGlobalListener(window, \"touchmove\", _onTouchMove);\n          removeGlobalListener(window, \"touchend\", _onTouchEnd2);\n          removeGlobalListener(window, \"touchcancel\", _onTouchEnd2);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, \"touchmove\", _onTouchMove, false);\n        addGlobalListener(window, \"touchend\", _onTouchEnd2, false);\n        addGlobalListener(window, \"touchcancel\", _onTouchEnd2, false);\n      };\n    } else {\n      var _onPointerMove2 = function _onPointerMove2(e) {\n        if (e.pointerId === state.current.id) {\n          var _pointerType = e.pointerType || \"mouse\";\n          move(e, _pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var _onPointerUp3 = function _onPointerUp3(e) {\n        if (e.pointerId === state.current.id) {\n          var _pointerType2 = e.pointerType || \"mouse\";\n          end(e, _pointerType2);\n          state.current.id = null;\n          removeGlobalListener(window, \"pointermove\", _onPointerMove2, false);\n          removeGlobalListener(window, \"pointerup\", _onPointerUp3, false);\n          removeGlobalListener(window, \"pointercancel\", _onPointerUp3, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, \"pointermove\", _onPointerMove2, false);\n          addGlobalListener(window, \"pointerup\", _onPointerUp3, false);\n          addGlobalListener(window, \"pointercancel\", _onPointerUp3, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, \"keyboard\", deltaX, deltaY);\n      end(e, \"keyboard\");\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case \"Left\":\n        case \"ArrowLeft\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case \"Right\":\n        case \"ArrowRight\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case \"Up\":\n        case \"ArrowUp\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case \"Down\":\n        case \"ArrowDown\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps\n  };\n}\nfunction $a3dbce0aed7087e2$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = (0, $goTMa$react.useCallback)(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  (0, $goTMa$reactariautils.useEvent)(ref, \"wheel\", isDisabled ? null : onScrollHandler);\n}\nvar $3cd7b5d0eebf0ca9$var$DEFAULT_THRESHOLD = 500;\nfunction $3cd7b5d0eebf0ca9$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $3cd7b5d0eebf0ca9$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = (0, $goTMa$react.useRef)(null);\n  var _ref17 = (0, $goTMa$reactariautils.useGlobalListeners)(),\n    addGlobalListener = _ref17.addGlobalListener,\n    removeGlobalListener = _ref17.removeGlobalListener;\n  var _ref18 = (0, $0294ea432cd92340$export$45712eceda6fad21)({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e) {\n        if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e), {}, {\n            type: \"longpressstart\"\n          }));\n          timeRef.current = setTimeout(function () {\n            e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e), {}, {\n              type: \"longpress\"\n            }));\n            timeRef.current = null;\n          }, threshold);\n          if (e.pointerType === \"touch\") {\n            var _onContextMenu = function _onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e.target, \"contextmenu\", _onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, \"pointerup\", function () {\n              setTimeout(function () {\n                removeGlobalListener(e.target, \"contextmenu\", _onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: \"longpressend\"\n        }));\n      }\n    }),\n    pressProps = _ref18.pressProps;\n  var descriptionProps = (0, $goTMa$reactariautils.useDescription)(onLongPress && !isDisabled ? accessibilityDescription : null);\n  return {\n    longPressProps: (0, $goTMa$reactariautils.mergeProps)(pressProps, descriptionProps)\n  };\n}","map":{"version":3,"sources":["packages/@react-aria/interactions/src/Pressable.tsx","packages/@react-aria/interactions/src/usePress.ts","packages/@react-aria/interactions/src/textSelection.ts","packages/@react-aria/interactions/src/context.ts","packages/@react-aria/interactions/src/PressResponder.tsx","packages/@react-aria/interactions/src/useFocus.ts","packages/@react-aria/interactions/src/utils.ts","packages/@react-aria/interactions/src/useFocusVisible.ts","packages/@react-aria/interactions/src/useFocusWithin.ts","packages/@react-aria/interactions/src/useHover.ts","packages/@react-aria/interactions/src/useInteractOutside.ts","packages/@react-aria/interactions/src/useKeyboard.ts","packages/@react-aria/interactions/src/createEventHandler.ts","packages/@react-aria/interactions/src/useMove.ts","packages/@react-aria/interactions/src/useScrollWheel.ts","packages/@react-aria/interactions/src/useLongPress.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as Element,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : null\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"]},"metadata":{},"sourceType":"script"}