{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"];\nimport * as React from \"react\";\nimport createElement from \"../createElement\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport PickerItem from \"./PickerItem\";\nimport StyleSheet from \"../StyleSheet\";\nvar Picker = React.forwardRef(function (props, forwardedRef) {\n  var children = props.children,\n    enabled = props.enabled,\n    onValueChange = props.onValueChange,\n    selectedValue = props.selectedValue,\n    style = props.style,\n    testID = props.testID,\n    itemStyle = props.itemStyle,\n    mode = props.mode,\n    prompt = props.prompt,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var hostRef = React.useRef(null);\n  function handleChange(e) {\n    var _e$target = e.target,\n      selectedIndex = _e$target.selectedIndex,\n      value = _e$target.value;\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n  var supportedProps = _objectSpread({\n    children: children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID: testID,\n    value: selectedValue\n  }, other);\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(\"select\", supportedProps);\n});\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: \"System\",\n    fontSize: \"inherit\",\n    margin: 0\n  }\n});\nexport default Picker;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Picker/index.js"],"names":["_objectSpread","_objectWithoutPropertiesLoose","_excluded","React","createElement","useMergeRefs","usePlatformMethods","PickerItem","StyleSheet","Picker","forwardRef","props","forwardedRef","children","enabled","onValueChange","selectedValue","style","testID","itemStyle","mode","prompt","other","hostRef","useRef","handleChange","e","_e$target","target","selectedIndex","value","supportedProps","disabled","undefined","onChange","styles","initial","platformMethodsRef","setRef","ref","Item","create","fontFamily","fontSize","margin"],"mappings":"AAAA,OAAOA,aAAAA,MAAmB,sCAAA;AAC1B,OAAOC,6BAAAA,MAAmC,qDAAA;AAC1C,IAAIC,SAAAA,GAAY,CAAC,UAAA,EAAY,SAAA,EAAW,eAAA,EAAiB,eAAA,EAAiB,OAAA,EAAS,QAAA,EAAU,WAAA,EAAa,MAAA,EAAQ,QAAA,CAAS;AAW3H,OAAA,KAAYC,KAAAA,MAAW,OAAA;AACvB,OAAOC,aAAAA;AACP,OAAOC,YAAAA;AACP,OAAOC,kBAAAA;AACP,OAAOC,UAAAA;AACP,OAAOC,UAAAA;AACP,IAAIC,MAAAA,GAAsBN,KAAAA,CAAMO,UAAU,CAAC,UAACC,KAAAA,EAAOC,YAAAA,EAAiB;EAClE,IAAIC,QAAAA,GAAWF,KAAAA,CAAME,QAAQ;IACzBC,OAAAA,GAAUH,KAAAA,CAAMG,OAAO;IACvBC,aAAAA,GAAgBJ,KAAAA,CAAMI,aAAa;IACnCC,aAAAA,GAAgBL,KAAAA,CAAMK,aAAa;IACnCC,KAAAA,GAAQN,KAAAA,CAAMM,KAAK;IACnBC,MAAAA,GAASP,KAAAA,CAAMO,MAAM;IACrBC,SAAAA,GAAYR,KAAAA,CAAMQ,SAAS;IAC3BC,IAAAA,GAAOT,KAAAA,CAAMS,IAAI;IACjBC,MAAAA,GAASV,KAAAA,CAAMU,MAAM;IACrBC,KAAAA,GAAQrB,6BAAAA,CAA8BU,KAAAA,EAAOT,SAAAA,CAAAA;EAEjD,IAAIqB,OAAAA,GAAUpB,KAAAA,CAAMqB,MAAM,CAAC,IAAI,CAAA;EAE/B,SAASC,YAAAA,CAAaC,CAAC,EAAE;IACvB,IAAIC,SAAAA,GAAYD,CAAAA,CAAEE,MAAM;MACpBC,aAAAA,GAAgBF,SAAAA,CAAUE,aAAa;MACvCC,KAAAA,GAAQH,SAAAA,CAAUG,KAAK;IAE3B,IAAIf,aAAAA,EAAe;MACjBA,aAAAA,CAAce,KAAAA,EAAOD,aAAAA,CAAAA;IACvB;EACF;EAGA,IAAIE,cAAAA,GAAiB/B,aAAAA,CAAc;IACjCa,QAAAA,EAAAA,QAAAA;IACAmB,QAAAA,EAAUlB,OAAAA,KAAY,KAAK,GAAG,IAAI,GAAGmB,SAAS;IAC9CC,QAAAA,EAAUT,YAAAA;IACVR,KAAAA,EAAO,CAACkB,MAAAA,CAAOC,OAAO,EAAEnB,KAAAA,CAAM;IAC9BC,MAAAA,EAAAA,MAAAA;IACAY,KAAAA,EAAOd;EACT,CAAA,EAAGM,KAAAA,CAAAA;EAEH,IAAIe,kBAAAA,GAAqB/B,kBAAAA,CAAmByB,cAAAA,CAAAA;EAC5C,IAAIO,MAAAA,GAASjC,YAAAA,CAAakB,OAAAA,EAASc,kBAAAA,EAAoBzB,YAAAA,CAAAA;EACvDmB,cAAAA,CAAeQ,GAAG,GAAGD,MAAAA;EACrB,OAAOlC,aAAAA,CAAc,QAAA,EAAU2B,cAAAA,CAAAA;AACjC,CAAA,CAAA;AAEAtB,MAAAA,CAAO+B,IAAI,GAAGjC,UAAAA;AACd,IAAI4B,MAAAA,GAAS3B,UAAAA,CAAWiC,MAAM,CAAC;EAC7BL,OAAAA,EAAS;IACPM,UAAAA,EAAY,QAAA;IACZC,QAAAA,EAAU,SAAA;IACVC,MAAAA,EAAQ;EACV;AACF,CAAA,CAAA;AACA,eAAenC,MAAAA","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport PickerItem from './PickerItem';\nimport StyleSheet from '../StyleSheet';\nvar Picker = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var children = props.children,\n      enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      style = props.style,\n      testID = props.testID,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = React.useRef(null);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  } // $FlowFixMe\n\n\n  var supportedProps = _objectSpread({\n    children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID,\n    value: selectedValue\n  }, other);\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement('select', supportedProps);\n}); // $FlowFixMe\n\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    fontSize: 'inherit',\n    margin: 0\n  }\n});\nexport default Picker;"]},"metadata":{},"sourceType":"module"}