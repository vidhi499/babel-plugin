{"ast":null,"code":"\"use strict\";\n\nimport * as React from \"react\";\nimport { useMemo, useRef } from \"react\";\nimport pick from \"../../modules/pick\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePressEvents from \"../../modules/usePressEvents\";\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\nvar MemoedTouchableWithoutFeedback = React.memo(React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = \"TouchableWithoutFeedback\";\nexport default MemoedTouchableWithoutFeedback;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js"],"names":["React","useMemo","useRef","pick","useMergeRefs","usePressEvents","forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","pickProps","props","TouchableWithoutFeedback","forwardedRef","delayPressIn","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","pressConfig","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","element","Children","only","supportedProps","ref","elementProps","Object","assign","cloneElement","MemoedTouchableWithoutFeedback","memo","forwardRef","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = props => pick(props, forwardPropsList);\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n    onPressStart: onPressIn,\n    onPressEnd: onPressOut\n  }), [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement(element, elementProps, ...children);\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;"]},"metadata":{},"sourceType":"module"}