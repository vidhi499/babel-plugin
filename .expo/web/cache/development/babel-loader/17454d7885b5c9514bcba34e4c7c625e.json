{"ast":null,"code":"var _s = $RefreshSig$();\nimport { getModality } from \"../modality\";\nimport useEvent from \"../useEvent\";\nimport useLayoutEffect from \"../useLayoutEffect\";\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\nvar supportsPointerEvent = function supportsPointerEvent() {\n  return !!(true && window.PointerEvent != null);\n};\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n  var _ref = payload || emptyObject,\n    _ref$bubbles = _ref.bubbles,\n    bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n    _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n    detail = _ref.detail;\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n}\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\nexport default function useHover(targetRef, config) {\n  _s();\n  var contain = config.contain,\n    disabled = config.disabled,\n    onHoverStart = config.onHoverStart,\n    onHoverChange = config.onHoverChange,\n    onHoverUpdate = config.onHoverUpdate,\n    onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts);\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(function () {\n    var target = targetRef.current;\n    if (target !== null) {\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        }\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n          hoverEnd(e);\n        }\n      };\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n            onHoverUpdate(e);\n          }\n        }\n      };\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        }\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n          hoverStart(e);\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}\n_s(useHover, \"g4iJ6GD4DJLwcOSoAglFYqEaawk=\", false, function () {\n  return [useEvent, useEvent, useEvent, useEvent, useEvent];\n});\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/useHover/index.js"],"names":["getModality","useEvent","useLayoutEffect","emptyObject","opts","passive","lockEventType","unlockEventType","supportsPointerEvent","window","PointerEvent","dispatchCustomEvent","target","type","payload","event","document","createEvent","_ref","_ref$bubbles","bubbles","_ref$cancelable","cancelable","detail","initCustomEvent","dispatchEvent","getPointerType","pointerType","useHover","targetRef","config","contain","disabled","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","current","hoverEnd","e","leaveListener","moveListener","x","clientX","y","clientY","hoverStart","enterListener","lockListener","lockEvent","unlockListener"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n/**\n * Types\n */\n\n/**\n * Implementation\n */\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\n\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\n\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n\n  var _ref = payload || emptyObject,\n      _ref$bubbles = _ref.bubbles,\n      bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n      _ref$cancelable = _ref.cancelable,\n      cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n      detail = _ref.detail;\n\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n} // This accounts for the non-PointerEvent fallback events.\n\n\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\n\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n      disabled = config.disabled,\n      onHoverStart = config.onHoverStart,\n      onHoverChange = config.onHoverChange,\n      onHoverUpdate = config.onHoverUpdate,\n      onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts); // These custom events are used to implement the \"contain\" prop.\n\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(() => {\n    var target = targetRef.current;\n\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        } // Remove the listeners once finished.\n\n\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n      /**\n       * Leave element\n       */\n\n\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n\n          hoverEnd(e);\n        }\n      };\n      /**\n       * Move within element\n       */\n\n\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n\n            onHoverUpdate(e);\n          }\n        }\n      };\n      /**\n       * Start the hover gesture\n       */\n\n\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        } // Set the listeners needed for the rest of the hover gesture.\n\n\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n      /**\n       * Enter element\n       */\n\n\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n\n          hoverStart(e);\n\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}"]},"metadata":{},"sourceType":"module"}