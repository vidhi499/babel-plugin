{"ast":null,"code":"import Dimensions from \"../Dimensions\";\nimport canUseDOM from \"../../modules/canUseDom\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get(\"window\"),\n        width = _Dimensions$get.width,\n        height = _Dimensions$get.height,\n        fontScale = _Dimensions$get.fontScale,\n        scale = _Dimensions$get.scale;\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get(\"screen\"),\n        width1 = _Dimensions$get2.width,\n        height1 = _Dimensions$get2.height,\n        fontScale1 = _Dimensions$get2.fontScale,\n        scale1 = _Dimensions$get2.scale;\n      return {\n        width: width1 * scale1,\n        height: height1 * scale1,\n        scale: scale1,\n        fontScale: fontScale1\n      };\n    }\n  },\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : \"\";\n  }\n};\nexport default DeviceInfo;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/DeviceInfo/index.js"],"names":["Dimensions","canUseDOM","DeviceInfo","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent"],"mappings":"AAQA,OAAOA,UAAAA;AACP,OAAOC,SAAAA;AACP,IAAIC,UAAAA,GAAa;EACfF,UAAAA,EAAY;IACV,IAAIG,oBAAAA,GAAuB;MACzB,IAAIC,eAAAA,GAAkBJ,UAAAA,CAAWK,GAAG,CAAC,QAAA,CAAA;QACjCC,KAAAA,GAAQF,eAAAA,CAAgBE,KAAK;QAC7BC,MAAAA,GAASH,eAAAA,CAAgBG,MAAM;QAC/BC,SAAAA,GAAYJ,eAAAA,CAAgBI,SAAS;QACrCC,KAAAA,GAAQL,eAAAA,CAAgBK,KAAK;MAEjC,OAAO;QACLH,KAAAA,EAAOA,KAAAA,GAAQG,KAAAA;QACfF,MAAAA,EAAQA,MAAAA,GAASE,KAAAA;QACjBA,KAAAA,EAAAA,KAAAA;QACAD,SAAAA,EAAAA;MACF,CAAA;IACF,CAAA;IAEA,IAAIE,oBAAAA,GAAuB;MACzB,IAAIC,gBAAAA,GAAmBX,UAAAA,CAAWK,GAAG,CAAC,QAAA,CAAA;QAClCC,MAAAA,GAAQK,gBAAAA,CAAiBL,KAAK;QAC9BC,OAAAA,GAASI,gBAAAA,CAAiBJ,MAAM;QAChCC,UAAAA,GAAYG,gBAAAA,CAAiBH,SAAS;QACtCC,MAAAA,GAAQE,gBAAAA,CAAiBF,KAAK;MAElC,OAAO;QACLH,KAAAA,EAAOA,MAAAA,GAAQG,MAAAA;QACfF,MAAAA,EAAQA,OAAAA,GAASE,MAAAA;QACjBA,KAAAA,EAAAA,MAAAA;QACAD,SAAAA,EAAAA;MACF,CAAA;IACF;EAEF,CAAA;EAEA,IAAII,MAAAA,GAAS;IACX,IAAIX,SAAAA,EAAW;MACb,IAAIY,SAAAA,CAAUC,SAAS,EAAE;QACvB,OAAOD,SAAAA,CAAUC,SAAS,CAAC,CAAA,CAAE;MAC/B,CAAA,MAAO;QACL,OAAOD,SAAAA,CAAUE,QAAQ;MAC3B;IACF;EACF,CAAA;EAEA,IAAIC,WAAAA,GAAc;IAEhB,OAAOf,SAAAA,GAAYY,SAAAA,CAAUI,YAAY,GAAGC,SAAS;EACvD,CAAA;EAEA,IAAIC,SAAAA,GAAY;IACd,OAAOlB,SAAAA,GAAYY,SAAAA,CAAUM,SAAS,GAAG,EAAE;EAC7C;AAEF,CAAA;AACA,eAAejB,UAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\nimport canUseDOM from '../../modules/canUseDom';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}