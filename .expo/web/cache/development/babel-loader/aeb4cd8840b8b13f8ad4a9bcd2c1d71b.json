{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { forwardRef } from 'react';\nimport View from \"../primitives/RNWView\";\nfunction createView(nativeProps) {\n  return forwardRef(function (props, ref) {\n    return React.createElement(View, _objectSpread(_objectSpread(_objectSpread({}, nativeProps), props), {}, {\n      ref: ref\n    }));\n  });\n}\nexport var Table = createView({\n  __element: 'table'\n});\nTable.displayName = 'Table';\nexport var THead = createView({\n  __element: 'thead'\n});\nTHead.displayName = 'THead';\nexport var TBody = createView({\n  __element: 'tbody'\n});\nTBody.displayName = 'TBody';\nexport var TFoot = createView({\n  __element: 'tfoot'\n});\nTFoot.displayName = 'TFoot';\nexport var TH = createView({\n  __element: 'th'\n});\nTH.displayName = 'TH';\nexport var TR = createView({\n  __element: 'tr'\n});\nTR.displayName = 'TR';\nexport var TD = createView({\n  __element: 'td'\n});\nTD.displayName = 'TD';\nexport var Caption = createView({\n  __element: 'caption'\n});\nCaption.displayName = 'Caption';","map":{"version":3,"sources":["../../src/elements/Table.web.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,IAAmB,UAAU,QAAQ,OAAO;AAExD,OAAO,IAAI;AAGX,SAAS,UAAU,CAAC,WAA8C,EAAA;EAChE,OAAO,UAAU,CAAC,UAAC,KAAgB,EAAE,GAAG,EAAI;IAC1C,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,gDAAK,WAAW,GAAM,KAAK;MAAE,GAAG,EAAE;IAAG,GAAI;EACvD,CAAC,CAA6B;AAChC;AAEA,OAAO,IAAM,KAAK,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAO,CAAE,CAAC;AACvD,KAAK,CAAC,WAAW,GAAG,OAAO;AAE3B,OAAO,IAAM,KAAK,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAO,CAAE,CAAC;AACvD,KAAK,CAAC,WAAW,GAAG,OAAO;AAE3B,OAAO,IAAM,KAAK,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAO,CAAE,CAAC;AACvD,KAAK,CAAC,WAAW,GAAG,OAAO;AAE3B,OAAO,IAAM,KAAK,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAO,CAAE,CAAC;AACvD,KAAK,CAAC,WAAW,GAAG,OAAO;AAE3B,OAAO,IAAM,EAAE,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAI,CAAE,CAAC;AACjD,EAAE,CAAC,WAAW,GAAG,IAAI;AAErB,OAAO,IAAM,EAAE,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAI,CAAE,CAAC;AACjD,EAAE,CAAC,WAAW,GAAG,IAAI;AAErB,OAAO,IAAM,EAAE,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAI,CAAE,CAAC;AACjD,EAAE,CAAC,WAAW,GAAG,IAAI;AAErB,OAAO,IAAM,OAAO,GAAG,UAAU,CAAC;EAAE,SAAS,EAAE;AAAS,CAAE,CAAC;AAC3D,OAAO,CAAC,WAAW,GAAG,SAAS","sourcesContent":["import React, { ComponentType, forwardRef } from 'react';\n\nimport View from '../primitives/RNWView';\nimport { ViewProps } from '../primitives/View';\n\nfunction createView(nativeProps: ViewProps & { __element: string }): ComponentType<ViewProps> {\n  return forwardRef((props: ViewProps, ref) => {\n    return <View {...nativeProps} {...props} ref={ref} />;\n  }) as ComponentType<ViewProps>;\n}\n\nexport const Table = createView({ __element: 'table' });\nTable.displayName = 'Table';\n\nexport const THead = createView({ __element: 'thead' });\nTHead.displayName = 'THead';\n\nexport const TBody = createView({ __element: 'tbody' });\nTBody.displayName = 'TBody';\n\nexport const TFoot = createView({ __element: 'tfoot' });\nTFoot.displayName = 'TFoot';\n\nexport const TH = createView({ __element: 'th' });\nTH.displayName = 'TH';\n\nexport const TR = createView({ __element: 'tr' });\nTR.displayName = 'TR';\n\nexport const TD = createView({ __element: 'td' });\nTD.displayName = 'TD';\n\nexport const Caption = createView({ __element: 'caption' });\nCaption.displayName = 'Caption';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}