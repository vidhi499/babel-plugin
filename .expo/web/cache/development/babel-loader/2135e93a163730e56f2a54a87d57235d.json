{"ast":null,"code":"\"use strict\";\n\nimport Platform from \"../../../exports/Platform\";\nimport UIManager from \"../../../exports/UIManager\";\nvar __DEV__ = \"development\" !== \"production\";\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!Platform.isTesting) {\n    UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {});\n  }\n}\nfunction create(duration, type, property) {\n  return {\n    duration: duration,\n    create: {\n      type: type,\n      property: property\n    },\n    update: {\n      type: type\n    },\n    delete: {\n      type: type,\n      property: property\n    }\n  };\n}\nvar Presets = {\n  easeInEaseOut: create(300, \"easeInEaseOut\", \"opacity\"),\n  linear: create(500, \"linear\", \"opacity\"),\n  spring: {\n    duration: 700,\n    create: {\n      type: \"linear\",\n      property: \"opacity\"\n    },\n    update: {\n      type: \"spring\",\n      springDamping: 0.4\n    },\n    delete: {\n      type: \"linear\",\n      property: \"opacity\"\n    }\n  }\n};\nvar LayoutAnimation = {\n  configureNext: configureNext,\n  create: create,\n  Types: Object.freeze({\n    spring: \"spring\",\n    linear: \"linear\",\n    easeInEaseOut: \"easeInEaseOut\",\n    easeIn: \"easeIn\",\n    easeOut: \"easeOut\",\n    keyboard: \"keyboard\"\n  }),\n  Properties: Object.freeze({\n    opacity: \"opacity\",\n    scaleX: \"scaleX\",\n    scaleY: \"scaleY\",\n    scaleXY: \"scaleXY\"\n  }),\n  checkConfig: function checkConfig() {\n    console.error(\"LayoutAnimation.checkConfig(...) has been disabled.\");\n  },\n  Presets: Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nexport default LayoutAnimation;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/LayoutAnimation/index.js"],"names":["Platform","UIManager","__DEV__","process","configureNext","config","onAnimationDidEnd","isTesting","configureNextLayoutAnimation","create","duration","type","property","update","delete","Presets","easeInEaseOut","linear","spring","springDamping","LayoutAnimation","Types","Object","freeze","easeIn","easeOut","keyboard","Properties","opacity","scaleX","scaleY","scaleXY","checkConfig","console","error","bind"],"mappings":"AASA,YAAA;;AAEA,OAAOA,QAAAA;AACP,OAAOC,SAAAA;AAEP,IAAIC,OAAAA,GAAUC,aAAAA,KAAyB,YAAA;AAEvC,SAASC,aAAAA,CAAcC,MAAM,EAAEC,iBAAiB,EAAE;EAChD,IAAI,CAACN,QAAAA,CAASO,SAAS,EAAE;IACvBN,SAAAA,CAAUO,4BAA4B,CAACH,MAAAA,EAAQC,iBAAAA,KAAsB,IAAI,IAAIA,iBAAAA,KAAsB,KAAK,CAAA,GAAIA,iBAAAA,GAAoB,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAA,CAAA;EAG/J;AACF;AAEA,SAASG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACxC,OAAO;IACLF,QAAAA,EAAAA,QAAAA;IACAD,MAAAA,EAAQ;MACNE,IAAAA,EAAAA,IAAAA;MACAC,QAAAA,EAAAA;IACF,CAAA;IACAC,MAAAA,EAAQ;MACNF,IAAAA,EAAAA;IACF,CAAA;IACAG,MAAAA,EAAQ;MACNH,IAAAA,EAAAA,IAAAA;MACAC,QAAAA,EAAAA;IACF;EACF,CAAA;AACF;AAEA,IAAIG,OAAAA,GAAU;EACZC,aAAAA,EAAeP,MAAAA,CAAO,GAAA,EAAK,eAAA,EAAiB,SAAA,CAAA;EAC5CQ,MAAAA,EAAQR,MAAAA,CAAO,GAAA,EAAK,QAAA,EAAU,SAAA,CAAA;EAC9BS,MAAAA,EAAQ;IACNR,QAAAA,EAAU,GAAA;IACVD,MAAAA,EAAQ;MACNE,IAAAA,EAAM,QAAA;MACNC,QAAAA,EAAU;IACZ,CAAA;IACAC,MAAAA,EAAQ;MACNF,IAAAA,EAAM,QAAA;MACNQ,aAAAA,EAAe;IACjB,CAAA;IACAL,MAAAA,EAAQ;MACNH,IAAAA,EAAM,QAAA;MACNC,QAAAA,EAAU;IACZ;EACF;AACF,CAAA;AAYA,IAAIQ,eAAAA,GAAkB;EAcpBhB,aAAAA,EAAAA,aAAAA;EAKAK,MAAAA,EAAAA,MAAAA;EACAY,KAAAA,EAAOC,MAAAA,CAAOC,MAAM,CAAC;IACnBL,MAAAA,EAAQ,QAAA;IACRD,MAAAA,EAAQ,QAAA;IACRD,aAAAA,EAAe,eAAA;IACfQ,MAAAA,EAAQ,QAAA;IACRC,OAAAA,EAAS,SAAA;IACTC,QAAAA,EAAU;EACZ,CAAA,CAAA;EACAC,UAAAA,EAAYL,MAAAA,CAAOC,MAAM,CAAC;IACxBK,OAAAA,EAAS,SAAA;IACTC,MAAAA,EAAQ,QAAA;IACRC,MAAAA,EAAQ,QAAA;IACRC,OAAAA,EAAS;EACX,CAAA,CAAA;EAEAC,WAAAA,yBAAc;IACZC,OAAAA,CAAQC,KAAK,CAAC,qDAAA,CAAA;EAChB,CAAA;EAEAnB,OAAAA,EAAAA,OAAAA;EACAC,aAAAA,EAAeZ,aAAAA,CAAc+B,IAAI,CAAC,IAAI,EAAEpB,OAAAA,CAAQC,aAAa,CAAA;EAC7DC,MAAAA,EAAQb,aAAAA,CAAc+B,IAAI,CAAC,IAAI,EAAEpB,OAAAA,CAAQE,MAAM,CAAA;EAC/CC,MAAAA,EAAQd,aAAAA,CAAc+B,IAAI,CAAC,IAAI,EAAEpB,OAAAA,CAAQG,MAAM;AACjD,CAAA;AACA,eAAeE,eAAAA","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport UIManager from '../../../exports/UIManager';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!Platform.isTesting) {\n    UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {}\n    /* unused onError */\n    );\n  }\n}\n\nfunction create(duration, type, property) {\n  return {\n    duration,\n    create: {\n      type,\n      property\n    },\n    update: {\n      type\n    },\n    delete: {\n      type,\n      property\n    }\n  };\n}\n\nvar Presets = {\n  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),\n  linear: create(500, 'linear', 'opacity'),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity'\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity'\n    }\n  }\n};\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\n\nvar LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext,\n\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard'\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY'\n  }),\n\n  checkConfig() {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n\n  Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nexport default LayoutAnimation;"]},"metadata":{},"sourceType":"module"}