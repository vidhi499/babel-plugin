{"ast":null,"code":"var CSS_UNIT_RE = /^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;\nvar getUnit = function getUnit(str) {\n  return str.match(CSS_UNIT_RE)[1];\n};\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\nvar multiplyStyleLengthValue = function multiplyStyleLengthValue(value, multiple) {\n  if (typeof value === \"string\") {\n    var number = parseFloat(value) * multiple;\n    var unit = getUnit(value);\n    return \"\" + number + unit;\n  } else if (isNumeric(value)) {\n    return value * multiple;\n  }\n};\nexport default multiplyStyleLengthValue;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/multiplyStyleLengthValue/index.js"],"names":["CSS_UNIT_RE","getUnit","str","match","isNumeric","n","isNaN","parseFloat","isFinite","multiplyStyleLengthValue","value","multiple","number","unit"],"mappings":"AAQA,IAAIA,WAAAA,GAAc,6CAAA;AAElB,IAAIC,OAAAA,GAAUC,SAAVD,OAAAA,CAAUC,GAAAA;EAAAA,OAAOA,GAAAA,CAAIC,KAAK,CAACH,WAAAA,CAAY,CAAC,CAAA,CAAE;AAAA;AAE9C,IAAII,SAAAA,GAAYC,SAAZD,SAAAA,CAAYC,CAAAA,EAAK;EACnB,OAAO,CAACC,KAAAA,CAAMC,UAAAA,CAAWF,CAAAA,CAAAA,CAAAA,IAAOG,QAAAA,CAASH,CAAAA,CAAAA;AAC3C,CAAA;AAEA,IAAII,wBAAAA,GAA2B,SAA3BA,wBAAAA,CAA4BC,KAAAA,EAAOC,QAAAA,EAAa;EAClD,IAAI,OAAOD,KAAAA,KAAU,QAAA,EAAU;IAC7B,IAAIE,MAAAA,GAASL,UAAAA,CAAWG,KAAAA,CAAAA,GAASC,QAAAA;IACjC,IAAIE,IAAAA,GAAOZ,OAAAA,CAAQS,KAAAA,CAAAA;IACnB,OAAO,EAAA,GAAKE,MAAAA,GAASC,IAAAA;EACvB,CAAA,MAAO,IAAIT,SAAAA,CAAUM,KAAAA,CAAAA,EAAQ;IAC3B,OAAOA,KAAAA,GAAQC,QAAAA;EACjB;AACF,CAAA;AAEA,eAAeF,wBAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar CSS_UNIT_RE = /^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;\n\nvar getUnit = str => str.match(CSS_UNIT_RE)[1];\n\nvar isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nvar multiplyStyleLengthValue = (value, multiple) => {\n  if (typeof value === 'string') {\n    var number = parseFloat(value) * multiple;\n    var unit = getUnit(value);\n    return \"\" + number + unit;\n  } else if (isNumeric(value)) {\n    return value * multiple;\n  }\n};\n\nexport default multiplyStyleLengthValue;"]},"metadata":{},"sourceType":"module"}