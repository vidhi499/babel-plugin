{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\"];\nimport * as React from \"react\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nvar createSvgCircle = function createSvgCircle(style) {\n  return React.createElement(\"circle\", {\n    cx: \"16\",\n    cy: \"16\",\n    fill: \"none\",\n    r: \"14\",\n    strokeWidth: \"4\",\n    style: style\n  });\n};\nvar ActivityIndicator = React.forwardRef(_c = function _c(props, forwardedRef) {\n  var _props$animating = props.animating,\n    animating = _props$animating === void 0 ? true : _props$animating,\n    _props$color = props.color,\n    color = _props$color === void 0 ? \"#1976D2\" : _props$color,\n    _props$hidesWhenStopp = props.hidesWhenStopped,\n    hidesWhenStopped = _props$hidesWhenStopp === void 0 ? true : _props$hidesWhenStopp,\n    _props$size = props.size,\n    size = _props$size === void 0 ? \"small\" : _props$size,\n    style = props.style,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var svg = React.createElement(\"svg\", {\n    height: \"100%\",\n    viewBox: \"0 0 32 32\",\n    width: \"100%\"\n  }, createSvgCircle({\n    stroke: color,\n    opacity: 0.2\n  }), createSvgCircle({\n    stroke: color,\n    strokeDasharray: 80,\n    strokeDashoffset: 60\n  }));\n  return React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 1,\n    accessibilityValueMin: 0,\n    ref: forwardedRef,\n    style: [styles.container, style]\n  }), React.createElement(View, {\n    children: svg,\n    style: [typeof size === \"number\" ? {\n      height: size,\n      width: size\n    } : indicatorSizes[size], styles.animation, !animating && styles.animationPause, !animating && hidesWhenStopped && styles.hidesWhenStopped]\n  }));\n});\n_c1 = ActivityIndicator;\nActivityIndicator.displayName = \"ActivityIndicator\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  hidesWhenStopped: {\n    visibility: \"hidden\"\n  },\n  animation: {\n    animationDuration: \"0.75s\",\n    animationKeyframes: [{\n      \"0%\": {\n        transform: [{\n          rotate: \"0deg\"\n        }]\n      },\n      \"100%\": {\n        transform: [{\n          rotate: \"360deg\"\n        }]\n      }\n    }],\n    animationTimingFunction: \"linear\",\n    animationIterationCount: \"infinite\"\n  },\n  animationPause: {\n    animationPlayState: \"paused\"\n  }\n});\nvar indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\nexport default ActivityIndicator;\nvar _c, _c1;\n$RefreshReg$(_c, \"ActivityIndicator$React.forwardRef\");\n$RefreshReg$(_c1, \"ActivityIndicator\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/ActivityIndicator/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","StyleSheet","View","createSvgCircle","style","createElement","cx","cy","fill","r","strokeWidth","ActivityIndicator","forwardRef","props","forwardedRef","_props$animating","animating","_props$color","color","_props$hidesWhenStopp","hidesWhenStopped","_props$size","size","other","svg","height","viewBox","width","stroke","opacity","strokeDasharray","strokeDashoffset","accessibilityRole","accessibilityValueMax","accessibilityValueMin","ref","styles","container","children","indicatorSizes","animation","animationPause","displayName","create","alignItems","justifyContent","visibility","animationDuration","animationKeyframes","transform","rotate","animationTimingFunction","animationIterationCount","animationPlayState","small","large"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\nvar createSvgCircle = style => /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"16\",\n  cy: \"16\",\n  fill: \"none\",\n  r: \"14\",\n  strokeWidth: \"4\",\n  style: style\n});\n\nvar ActivityIndicator = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$animating = props.animating,\n      animating = _props$animating === void 0 ? true : _props$animating,\n      _props$color = props.color,\n      color = _props$color === void 0 ? '#1976D2' : _props$color,\n      _props$hidesWhenStopp = props.hidesWhenStopped,\n      hidesWhenStopped = _props$hidesWhenStopp === void 0 ? true : _props$hidesWhenStopp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'small' : _props$size,\n      style = props.style,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var svg = /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"100%\",\n    viewBox: \"0 0 32 32\",\n    width: \"100%\"\n  }, createSvgCircle({\n    stroke: color,\n    opacity: 0.2\n  }), createSvgCircle({\n    stroke: color,\n    strokeDasharray: 80,\n    strokeDashoffset: 60\n  }));\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 1,\n    accessibilityValueMin: 0,\n    ref: forwardedRef,\n    style: [styles.container, style]\n  }), /*#__PURE__*/React.createElement(View, {\n    children: svg,\n    style: [typeof size === 'number' ? {\n      height: size,\n      width: size\n    } : indicatorSizes[size], styles.animation, !animating && styles.animationPause, !animating && hidesWhenStopped && styles.hidesWhenStopped]\n  }));\n});\nActivityIndicator.displayName = 'ActivityIndicator';\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          rotate: '0deg'\n        }]\n      },\n      '100%': {\n        transform: [{\n          rotate: '360deg'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\nvar indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\nexport default ActivityIndicator;"]},"metadata":{},"sourceType":"module"}