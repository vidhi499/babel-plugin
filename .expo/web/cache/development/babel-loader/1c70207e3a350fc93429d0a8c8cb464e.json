{"ast":null,"code":"import normalizeColor from \"./compiler/normalizeColor\";\nimport normalizeValueWithProperty from \"./compiler/normalizeValueWithProperty\";\nvar emptyObject = {};\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || \"black\", shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n    textShadowOffset = style.textShadowOffset,\n    textShadowRadius = style.textShadowRadius;\n  var _ref2 = textShadowOffset || defaultOffset,\n    height = _ref2.height,\n    width = _ref2.width;\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, \"textShadowColor\");\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n    if (prop === \"shadowColor\" || prop === \"shadowOffset\" || prop === \"shadowOpacity\" || prop === \"shadowRadius\") {\n      var boxShadowValue = createBoxShadowValue(style);\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = \"boxShadow\";\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n    if (prop === \"textShadowColor\" || prop === \"textShadowOffset\" || prop === \"textShadowRadius\") {\n      var textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = \"textShadow\";\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n    nextStyle[prop] = value;\n  }\n  return nextStyle;\n};\nexport default preprocess;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/preprocess.js"],"names":["normalizeColor","normalizeValueWithProperty","emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","_ref2","radius","preprocess","originalStyle","nextStyle","originalProp","originalValue","prop","value","Object","prototype","hasOwnProperty","call","boxShadowValue","boxShadow","textShadowValue","textShadow"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\nvar emptyObject = {};\n/**\n * Shadows\n */\n\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = style => {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport var createTextShadowValue = style => {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref2 = textShadowOffset || defaultOffset,\n      height = _ref2.height,\n      width = _ref2.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n/**\n * Preprocess styles\n */\n\nexport var preprocess = originalStyle => {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    } // Convert shadow styles\n\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? boxShadow + \", \" + boxShadowValue : boxShadowValue;\n      } else {\n        continue;\n      }\n    } // Convert text shadow styles\n\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? textShadow + \", \" + textShadowValue : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  } // $FlowIgnore\n\n\n  return nextStyle;\n};\nexport default preprocess;"]},"metadata":{},"sourceType":"module"}