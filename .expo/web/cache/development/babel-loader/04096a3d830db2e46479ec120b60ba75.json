{"ast":null,"code":"import canUseDOM from \"../../../modules/canUseDom\";\nimport createCSSStyleSheet from \"./createCSSStyleSheet\";\nimport createOrderedCSSStyleSheet from \"./createOrderedCSSStyleSheet\";\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = ['html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', 'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n  var sheet;\n  if (canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document;\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n      if (index == null) {\n        var initialSheet = sheets[0];\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : '';\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n  return {\n    getTextContent: function getTextContent() {\n      return sheet.getTextContent();\n    },\n    id: id,\n    insert: function insert(cssText, groupValue) {\n      sheets.forEach(function (s) {\n        s.insert(cssText, groupValue);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/dom/index.js"],"names":["canUseDOM","createCSSStyleSheet","createOrderedCSSStyleSheet","defaultId","roots","WeakMap","sheets","initialRules","createSheet","root","id","sheet","rootNode","getRootNode","document","length","forEach","insert","rule","set","push","index","get","initialSheet","textContent","getTextContent","cssText","groupValue","s"],"mappings":"AAQA,OAAOA,SAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,0BAAP;AACA,IAAIC,SAAS,GAAG,yBAAhB;AACA,IAAIC,KAAK,GAAG,IAAIC,OAAJ,EAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,YAAY,GAAG,CACnB,0GADmB,EACyF,iBADzF,EAEnB,uEAFmB,EAEsD,mKAFtD,CAAnB;AAGA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;EACpC,IAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;IACjBA,EAAE,GAAGP,SAALO;EACD;EAED,IAAIC,KAAJ;EAEA,IAAIX,SAAJ,EAAe;IACb,IAAIY,QAAQ,GAAGH,IAAI,IAAI,IAARA,GAAeA,IAAI,CAACI,WAALJ,EAAfA,GAAoCK,QAAnD;IAEA,IAAIR,MAAM,CAACS,MAAPT,KAAkB,CAAtB,EAAyB;MACvBK,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,CAApB,CAAlCC;MACAJ,YAAY,CAACS,OAAbT,CAAqB,UAAA,IAAI,EAAI;QAC3BI,KAAK,CAACM,MAANN,CAAaO,IAAbP,EAAmB,CAAnBA,CAAAA;MACD,CAFDJ,CAAAA;MAGAH,KAAK,CAACe,GAANf,CAAUQ,QAAVR,EAAoBE,MAAM,CAACS,MAA3BX,CAAAA;MACAE,MAAM,CAACc,IAAPd,CAAYK,KAAZL,CAAAA;IACD,CAPD,MAOO;MACL,IAAIe,KAAK,GAAGjB,KAAK,CAACkB,GAANlB,CAAUQ,QAAVR,CAAZ;MAEA,IAAIiB,KAAK,IAAI,IAAb,EAAmB;QACjB,IAAIE,YAAY,GAAGjB,MAAM,CAAC,CAAD,CAAzB;QAEA,IAAIkB,WAAW,GAAGD,YAAY,IAAI,IAAhBA,GAAuBA,YAAY,CAACE,cAAbF,EAAvBA,GAAuD,EAAzE;QAEAZ,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,EAAKE,QAAL,EAAeY,WAAf,CAApB,CAAlCb;QACAP,KAAK,CAACe,GAANf,CAAUQ,QAAVR,EAAoBE,MAAM,CAACS,MAA3BX,CAAAA;QACAE,MAAM,CAACc,IAAPd,CAAYK,KAAZL,CAAAA;MACD,CARD,MAQO;QACLK,KAAK,GAAGL,MAAM,CAACe,KAAD,CAAdV;MACD;IACF;EACF,CAzBD,MAyBO;IAEL,IAAIL,MAAM,CAACS,MAAPT,KAAkB,CAAtB,EAAyB;MACvBK,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,CAApB,CAAlCC;MACAJ,YAAY,CAACS,OAAbT,CAAqB,UAAA,IAAI,EAAI;QAC3BI,KAAK,CAACM,MAANN,CAAaO,IAAbP,EAAmB,CAAnBA,CAAAA;MACD,CAFDJ,CAAAA;MAGAD,MAAM,CAACc,IAAPd,CAAYK,KAAZL,CAAAA;IACD,CAND,MAMO;MACLK,KAAK,GAAGL,MAAM,CAAC,CAAD,CAAdK;IACD;EACF;EAED,OAAO;IACLc,cADK,EAAA,SAAA,cAAA,GACY;MACf,OAAOd,KAAK,CAACc,cAANd,EAAP;IACD,CAHI;IAKLD,EAAE,EAAFA,EALK;IAOLO,MAPK,EAAA,SAAA,MAAA,CAOES,OAPF,EAOWC,UAPX,EAOuB;MAC1BrB,MAAM,CAACU,OAAPV,CAAe,UAAA,CAAC,EAAI;QAClBsB,CAAC,CAACX,MAAFW,CAASF,OAATE,EAAkBD,UAAlBC,CAAAA;MACD,CAFDtB,CAAAA;IAGD;EAXI,CAAP;AAcD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../../../modules/canUseDom';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [// minimal top-level reset\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\n\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\n\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\n\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    // Create the initial style sheet\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent() {\n      return sheet.getTextContent();\n    },\n\n    id,\n\n    insert(cssText, groupValue) {\n      sheets.forEach(s => {\n        s.insert(cssText, groupValue);\n      });\n    }\n\n  };\n}"]},"metadata":{},"sourceType":"module"}