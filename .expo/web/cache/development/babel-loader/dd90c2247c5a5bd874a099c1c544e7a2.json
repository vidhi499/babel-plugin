{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.isLocaleRTL = isLocaleRTL;\nvar rtlScripts = new Set([\"Arab\", \"Syrc\", \"Samr\", \"Mand\", \"Thaa\", \"Mend\", \"Nkoo\", \"Adlm\", \"Rohg\", \"Hebr\"]);\nvar rtlLangs = new Set([\"ae\", \"ar\", \"arc\", \"bcc\", \"bqi\", \"ckb\", \"dv\", \"fa\", \"far\", \"glk\", \"he\", \"iw\", \"khw\", \"ks\", \"ku\", \"mzn\", \"nqo\", \"pnb\", \"ps\", \"sd\", \"ug\", \"ur\", \"yi\"]);\nvar cache = new Map();\nfunction isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  if (Intl.Locale) {\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    var lang = locale.split(\"-\")[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/useLocale/isLocaleRTL.js"],"names":["exports","__esModule","isLocaleRTL","rtlScripts","Set","rtlLangs","cache","Map","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"mappings":"AAAA,YAAA;;AAEAA,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQE,WAAW,GAAGA,WAAAA;AAUtB,IAAIC,UAAAA,GAAa,IAAIC,GAAAA,CAAI,CAAC,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,CAAO,CAAA;AACzG,IAAIC,QAAAA,GAAW,IAAID,GAAAA,CAAI,CAAC,IAAA,EACxB,IAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,IAAA,EACA,IAAA,EAAM,KAAA,EACN,KAAA,EACA,IAAA,EAAM,IAAA,EACN,KAAA,EACA,IAAA,EACA,IAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,IAAA,EACA,IAAA,EACA,IAAA,EACA,IAAA,EACA,IAAA,CACC,CAAA;AACD,IAAIE,KAAAA,GAAQ,IAAIC,GAAAA,EAAAA;AAKhB,SAASL,WAAAA,CAAYM,MAAM,EAAE;EAC3B,IAAIC,SAAAA,GAAYH,KAAAA,CAAMI,GAAG,CAACF,MAAAA,CAAAA;EAE1B,IAAIC,SAAAA,EAAW;IACb,OAAOA,SAAAA;EACT;EAEA,IAAIE,KAAAA,GAAQ,KAAK;EAEjB,IAAIC,IAAAA,CAAKC,MAAM,EAAE;IAEf,IAAIC,MAAAA,GAAS,IAAIF,IAAAA,CAAKC,MAAM,CAACL,MAAAA,CAAAA,CAAQO,QAAQ,EAAA,CAAGD,MAAM;IACtDH,KAAAA,GAAQR,UAAAA,CAAWa,GAAG,CAACF,MAAAA,CAAAA;EACzB,CAAA,MAAO;IAEL,IAAIG,IAAAA,GAAOT,MAAAA,CAAOU,KAAK,CAAC,GAAA,CAAI,CAAC,CAAA,CAAE;IAC/BP,KAAAA,GAAQN,QAAAA,CAASW,GAAG,CAACC,IAAAA,CAAAA;EACvB;EAEAX,KAAAA,CAAMa,GAAG,CAACX,MAAAA,EAAQG,KAAAA,CAAAA;EAClB,OAAOA,KAAAA;AACT","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.isLocaleRTL = isLocaleRTL;\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae', // Avestan\n'ar', // Arabic\n'arc', // Aramaic\n'bcc', // Southern Balochi\n'bqi', // Bakthiari\n'ckb', // Sorani\n'dv', // Dhivehi\n'fa', 'far', // Persian\n'glk', // Gilaki\n'he', 'iw', // Hebrew\n'khw', // Khowar\n'ks', // Kashmiri\n'ku', // Kurdish\n'mzn', // Mazanderani\n'nqo', // N'Ko\n'pnb', // Western Punjabi\n'ps', // Pashto\n'sd', // Sindhi\n'ug', // Uyghur\n'ur', // Urdu\n'yi' // Yiddish\n]);\nvar cache = new Map();\n/**\n * Determine the writing direction of a locale\n */\n\nfunction isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n\n  var isRTL = false; // $FlowFixMe\n\n  if (Intl.Locale) {\n    // $FlowFixMe\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    // Fallback to inferring from language\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n\n  cache.set(locale, isRTL);\n  return isRTL;\n}"]},"metadata":{},"sourceType":"script"}