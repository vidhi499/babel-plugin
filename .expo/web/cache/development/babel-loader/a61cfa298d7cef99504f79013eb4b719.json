{"ast":null,"code":"import invariant from \"fbjs/lib/invariant\";\nvar twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\nvar standardReleaser = function standardReleaser(instance) {\n  var Klass = this;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = twoArgumentPooler;\nvar addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  twoArgumentPooler: twoArgumentPooler\n};\nexport default PooledClass;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/PooledClass/index.js"],"names":["invariant","twoArgumentPooler","a1","a2","Klass","instancePool","length","instance","pop","call","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass"],"mappings":"AAUA,OAAOA,SAAAA,MAAe,oBAAA;AAEtB,IAAIC,iBAAAA,GAAoB,SAASA,iBAAAA,CAAkBC,EAAE,EAAEC,EAAE,EAAE;EACzD,IAAIC,KAAAA,GAAQ,IAAI;EAEhB,IAAIA,KAAAA,CAAMC,YAAY,CAACC,MAAM,EAAE;IAC7B,IAAIC,QAAAA,GAAWH,KAAAA,CAAMC,YAAY,CAACG,GAAG,EAAA;IACrCJ,KAAAA,CAAMK,IAAI,CAACF,QAAAA,EAAUL,EAAAA,EAAIC,EAAAA,CAAAA;IACzB,OAAOI,QAAAA;EACT,CAAA,MAAO;IACL,OAAO,IAAIH,KAAAA,CAAMF,EAAAA,EAAIC,EAAAA,CAAAA;EACvB;AACF,CAAA;AAEA,IAAIO,gBAAAA,GAAmB,SAASA,gBAAAA,CAAiBH,QAAQ,EAAE;EACzD,IAAIH,KAAAA,GAAQ,IAAI;EAChBG,QAAAA,CAASI,UAAU,EAAA;EAEnB,IAAIP,KAAAA,CAAMC,YAAY,CAACC,MAAM,GAAGF,KAAAA,CAAMQ,QAAQ,EAAE;IAC9CR,KAAAA,CAAMC,YAAY,CAACQ,IAAI,CAACN,QAAAA,CAAAA;EAC1B;AACF,CAAA;AAEA,IAAIO,iBAAAA,GAAoB,EAAA;AACxB,IAAIC,cAAAA,GAAiBd,iBAAAA;AAWrB,IAAIe,YAAAA,GAAe,SAASA,YAAAA,CAAaC,eAAe,EAAEC,MAAM,EAAE;EAGhE,IAAIC,QAAAA,GAAWF,eAAAA;EACfE,QAAAA,CAASd,YAAY,GAAG,EAAE;EAC1Bc,QAAAA,CAASC,SAAS,GAAGF,MAAAA,IAAUH,cAAAA;EAE/B,IAAI,CAACI,QAAAA,CAASP,QAAQ,EAAE;IACtBO,QAAAA,CAASP,QAAQ,GAAGE,iBAAAA;EACtB;EAEAK,QAAAA,CAASE,OAAO,GAAGX,gBAAAA;EACnB,OAAOS,QAAAA;AACT,CAAA;AAEA,IAAIG,WAAAA,GAAc;EAChBN,YAAAA,EAAcA,YAAAA;EACdf,iBAAAA,EAAmBA;AACrB,CAAA;AACA,eAAeqB,WAAAA","sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n */\nimport invariant from 'fbjs/lib/invariant';\n\nvar twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n  var Klass = this;\n\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar standardReleaser = function standardReleaser(instance) {\n  var Klass = this;\n  instance.destructor();\n\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = twoArgumentPooler;\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\n\nvar addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  twoArgumentPooler: twoArgumentPooler\n};\nexport default PooledClass;"]},"metadata":{},"sourceType":"module"}