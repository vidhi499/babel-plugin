{"ast":null,"code":"import isWebColor from \"../../../modules/isWebColor\";\nimport processColor from \"../../../exports/processColor\";\nvar normalizeColor = function normalizeColor(color, opacity) {\n  if (opacity === void 0) {\n    opacity = 1;\n  }\n  if (color == null) return;\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n  var colorInt = processColor(color);\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n};\nexport default normalizeColor;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/compiler/normalizeColor.js"],"names":["isWebColor","processColor","normalizeColor","color","opacity","colorInt","r","g","b","a","alpha","toFixed"],"mappings":"AAQA,OAAOA,UAAP;AACA,OAAOC,YAAP;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;EAC3D,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,CAAVA;EACD;EAED,IAAID,KAAK,IAAI,IAAb,EAAmB;EAEnB,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,UAAU,CAACG,KAAD,CAA3C,EAAoD;IAClD,OAAOA,KAAP;EACD;EAED,IAAIE,QAAQ,GAAGJ,YAAY,CAACE,KAAD,CAA3B;EAEA,IAAIE,QAAQ,IAAI,IAAhB,EAAsB;IACpB,IAAIC,CAAC,GAAGD,QAAQ,IAAI,EAAZA,GAAiB,GAAzB;IACA,IAAIE,CAAC,GAAGF,QAAQ,IAAI,CAAZA,GAAgB,GAAxB;IACA,IAAIG,CAAC,GAAGH,QAAQ,GAAG,GAAnB;IACA,IAAII,CAAC,GAAG,CAACJ,QAAQ,IAAI,EAAZA,GAAiB,GAAlB,IAAyB,GAAjC;IACA,IAAIK,KAAK,GAAG,CAACD,CAAC,GAAGL,OAAL,EAAcO,OAAd,CAAsB,CAAtB,CAAZ;IACA,OAAO,OAAA,GAAUL,CAAV,GAAc,GAAd,GAAoBC,CAApB,GAAwB,GAAxB,GAA8BC,CAA9B,GAAkC,GAAlC,GAAwCE,KAAxC,GAAgD,GAAvD;EACD;AACF,CArBD;AAuBA,eAAeR,cAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport isWebColor from '../../../modules/isWebColor';\nimport processColor from '../../../exports/processColor';\n\nvar normalizeColor = function normalizeColor(color, opacity) {\n  if (opacity === void 0) {\n    opacity = 1;\n  }\n\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = processColor(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n};\n\nexport default normalizeColor;"]},"metadata":{},"sourceType":"module"}