{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = useElementLayout;\nvar _useLayoutEffect = _interopRequireDefault(require(\"../useLayoutEffect\"));\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\nvar _canUseDom = _interopRequireDefault(require(\"../canUseDom\"));\nvar DOM_LAYOUT_HANDLER_NAME = \"__reactLayoutHandler\";\nvar didWarn = !_canUseDom.default;\nvar resizeObserver = null;\nfunction getResizeObserver() {\n  if (_canUseDom.default && typeof window.ResizeObserver !== \"undefined\") {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n          if (typeof onLayout === \"function\") {\n            _UIManager.default.measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, \"target\", {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (\"development\" !== \"production\" && \"development\" !== \"test\") {\n      console.warn(\"onLayout relies on ResizeObserver which is not supported by your browser. \" + \"Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.\");\n      didWarn = true;\n    }\n  }\n  return resizeObserver;\n}\nfunction useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  (0, _useLayoutEffect.default)(function () {\n    var node = ref.current;\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]);\n  (0, _useLayoutEffect.default)(function () {\n    var node = ref.current;\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === \"function\") {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/useElementLayout/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","useElementLayout","_useLayoutEffect","_UIManager","_canUseDom","DOM_LAYOUT_HANDLER_NAME","didWarn","resizeObserver","getResizeObserver","window","ResizeObserver","entries","forEach","entry","node","target","onLayout","measure","x","y","width","height","left","top","event","nativeEvent","layout","timeStamp","Date","now","Object","defineProperty","enumerable","get","process","console","warn","ref","observer","current","observe","unobserve","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = useElementLayout;\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"../useLayoutEffect\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../canUseDom\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !_canUseDom.default;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (_canUseDom.default && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(entry => {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            // We still need to measure the view because browsers don't yet provide\n            // border-box dimensions in the entry\n            _UIManager.default.measure(node, (x, y, width, height, left, top) => {\n              var event = {\n                // $FlowFixMe\n                nativeEvent: {\n                  layout: {\n                    x,\n                    y,\n                    width,\n                    height,\n                    left,\n                    top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: () => entry.target\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nfunction useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  (0, _useLayoutEffect.default)(() => {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]); // Observing is done in a separate effect to avoid this effect running\n  // when 'onLayout' changes.\n\n  (0, _useLayoutEffect.default)(() => {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return () => {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}