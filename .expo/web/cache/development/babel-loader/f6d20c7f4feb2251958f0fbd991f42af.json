{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\nvar TextInputState = {\n  _currentlyFocusedNode: null,\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n    return this._currentlyFocusedNode;\n  },\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n      if (document.activeElement !== textFieldNode) {\n        _UIManager.default.focus(textFieldNode);\n      }\n    }\n  },\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n      if (document.activeElement === textFieldNode) {\n        _UIManager.default.blur(textFieldNode);\n      }\n    }\n  }\n};\nvar _default = TextInputState;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/TextInputState/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_UIManager","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur","_default","module"],"mappings":"AAAA,YAAA;;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,UAAAA,GAAaL,sBAAAA,CAAuBC,OAAAA,2BAAQ,CAAA;AAiBhD,IAAIK,cAAAA,GAAiB;EAInBC,qBAAAA,EAAuB,IAAI;EAM3BC,qBAAAA,mCAAwB;IACtB,IAAIC,QAAAA,CAASC,aAAa,KAAK,IAAI,CAACH,qBAAqB,EAAE;MACzD,IAAI,CAACA,qBAAqB,GAAG,IAAI;IACnC;IAEA,OAAO,IAAI,CAACA,qBAAqB;EACnC,CAAA;EAOAI,cAAAA,0BAAeC,aAAa,EAAE;IAC5B,IAAIA,aAAAA,KAAkB,IAAI,EAAE;MAC1B,IAAI,CAACL,qBAAqB,GAAGK,aAAAA;MAE7B,IAAIH,QAAAA,CAASC,aAAa,KAAKE,aAAAA,EAAe;QAC5CP,UAAAA,CAAWH,OAAO,CAACW,KAAK,CAACD,aAAAA,CAAAA;MAC3B;IACF;EACF,CAAA;EAOAE,aAAAA,yBAAcF,aAAa,EAAE;IAC3B,IAAIA,aAAAA,KAAkB,IAAI,EAAE;MAC1B,IAAI,CAACL,qBAAqB,GAAG,IAAI;MAEjC,IAAIE,QAAAA,CAASC,aAAa,KAAKE,aAAAA,EAAe;QAC5CP,UAAAA,CAAWH,OAAO,CAACa,IAAI,CAACH,aAAAA,CAAAA;MAC1B;IACF;EACF;AAEF,CAAA;AACA,IAAII,QAAAA,GAAWV,cAAAA;AACfH,OAAAA,CAAQD,OAAO,GAAGc,QAAAA;AAClBC,MAAAA,CAAOd,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        _UIManager.default.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        _UIManager.default.blur(textFieldNode);\n      }\n    }\n  }\n\n};\nvar _default = TextInputState;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}