{"ast":null,"code":"var _s = $RefreshSig$();\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport UIManager from \"../../exports/UIManager\";\nimport createDOMProps from \"../createDOMProps\";\nimport useStable from \"../useStable\";\nimport { useRef } from \"react\";\nvar didWarn = false;\nvar emptyObject = {};\nfunction setNativeProps(node, nativeProps, pointerEvents, style, previousStyleRef) {\n  if (!didWarn) {\n    console.warn(\"setNativeProps is deprecated. Please update props using React state instead.\");\n    didWarn = true;\n  }\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents: pointerEvents\n    }, nativeProps), {}, {\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = \"\";\n        }\n      }\n    }\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\nexport default function usePlatformMethods(_ref) {\n  _s();\n  var pointerEvents = _ref.pointerEvents,\n    style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    pointerEvents: pointerEvents,\n    style: style\n  };\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n            style = _ref2.style,\n            pointerEvents = _ref2.pointerEvents;\n          setNativeProps(hostNode, nativeProps, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}\n_s(usePlatformMethods, \"iiXdJPFzK7r5h+zexENsDKJ04Cs=\", false, function () {\n  return [useStable];\n});\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/usePlatformMethods/index.js"],"names":["_objectSpread","UIManager","createDOMProps","useStable","useRef","didWarn","emptyObject","setNativeProps","node","nativeProps","pointerEvents","style","previousStyleRef","console","warn","domProps","nextDomStyle","current","styleName","updateView","usePlatformMethods","_ref","setNativePropsArgsRef","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow","_ref2"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\nvar didWarn = false;\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, pointerEvents, style, previousStyleRef) {\n  if (!didWarn) {\n    console.warn('setNativeProps is deprecated. Please update props using React state instead.');\n    didWarn = true;\n  }\n\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents\n    }, nativeProps), {}, {\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\n\n\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    pointerEvents,\n    style\n  }; // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n\n  var ref = useStable(() => hostNode => {\n    if (hostNode != null) {\n      hostNode.measure = callback => UIManager.measure(hostNode, callback);\n\n      hostNode.measureLayout = (relativeToNode, success, failure) => UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n\n      hostNode.measureInWindow = callback => UIManager.measureInWindow(hostNode, callback);\n\n      hostNode.setNativeProps = nativeProps => {\n        var _ref2 = setNativePropsArgsRef.current || emptyObject,\n            style = _ref2.style,\n            pointerEvents = _ref2.pointerEvents;\n\n        setNativeProps(hostNode, nativeProps, pointerEvents, style, previousStyleRef);\n      };\n    }\n  });\n  return ref;\n}"]},"metadata":{},"sourceType":"module"}