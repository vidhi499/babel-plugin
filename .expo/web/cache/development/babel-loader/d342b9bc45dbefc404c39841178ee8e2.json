{"ast":null,"code":"import getBoundingClientRect from \"../../modules/getBoundingClientRect\";\nimport setValueForStyles from \"../../modules/setValueForStyles\";\nvar getRect = function getRect(node) {\n  var _getBoundingClientRec = getBoundingClientRect(node),\n    x = _getBoundingClientRec.x,\n    y = _getBoundingClientRec.y,\n    top = _getBoundingClientRec.top,\n    left = _getBoundingClientRec.left;\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getBoundingClientRect(relativeNode);\n      var _getRect = getRect(node),\n        height = _getRect.height,\n        left = _getRect.left,\n        top = _getRect.top,\n        width = _getRect.width;\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName;\n      if (node.getAttribute(\"tabIndex\") == null && focusableElements[name] == null) {\n        node.setAttribute(\"tabIndex\", \"-1\");\n      }\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n          height = _getRect2.height,\n          left = _getRect2.left,\n          top = _getRect2.top,\n          width = _getRect2.width;\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n      var value = props[prop];\n      switch (prop) {\n        case \"style\":\n          {\n            setValueForStyles(node, value);\n            break;\n          }\n        case \"class\":\n        case \"className\":\n          {\n            node.setAttribute(\"class\", value);\n            break;\n          }\n        case \"text\":\n        case \"value\":\n          node.value = value;\n          break;\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nexport default UIManager;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/UIManager/index.js"],"names":["getBoundingClientRect","setValueForStyles","getRect","node","_getBoundingClientRec","x","y","top","left","width","offsetWidth","height","offsetHeight","measureLayout","relativeToNativeNode","callback","relativeNode","parentNode","setTimeout","relativeRect","_getRect","focusableElements","A","INPUT","SELECT","TEXTAREA","UIManager","blur","err","focus","name","nodeName","getAttribute","setAttribute","measure","measureInWindow","_getRect2","onFail","onSuccess","updateView","props","prop","Object","prototype","hasOwnProperty","call","value","configureNextLayoutAnimation","config","onAnimationDidEnd","setLayoutAnimationEnabledExperimental"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport getBoundingClientRect from '../../modules/getBoundingClientRect';\nimport setValueForStyles from '../../modules/setValueForStyles';\n\nvar getRect = node => {\n  // Unlike the DOM's getBoundingClientRect, React Native layout measurements\n  // for \"height\" and \"width\" ignore scale transforms.\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n  var _getBoundingClientRec = getBoundingClientRect(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x,\n    y,\n    width,\n    height,\n    top,\n    left\n  };\n};\n\nvar measureLayout = (node, relativeToNativeNode, callback) => {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(() => {\n      var relativeRect = getBoundingClientRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n\n  focus(node) {\n    try {\n      var name = node.nodeName; // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n\n  measure(node, callback) {\n    measureLayout(node, null, callback);\n  },\n\n  measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(() => {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n\n  measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n\n  updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n\n  configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n\n  // mocks\n  setLayoutAnimationEnabledExperimental() {}\n\n};\nexport default UIManager;"]},"metadata":{},"sourceType":"module"}