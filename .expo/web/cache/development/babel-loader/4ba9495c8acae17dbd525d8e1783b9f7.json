{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _EventSubscription2 = _interopRequireDefault(require(\"./_EventSubscription\"));\nvar EmitterSubscription = function (_EventSubscription2$d) {\n  _inherits(EmitterSubscription, _EventSubscription2$d);\n  var _super = _createSuper(EmitterSubscription);\n  function EmitterSubscription(emitter, subscriber, listener, context) {\n    var _this;\n    _classCallCheck(this, EmitterSubscription);\n    _this = _super.call(this, subscriber);\n    _this.emitter = emitter;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n  _createClass(EmitterSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.emitter.removeSubscription(this);\n    }\n  }]);\n  return EmitterSubscription;\n}(_EventSubscription2.default);\nvar _default = EmitterSubscription;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/emitter/_EmitterSubscription.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_EventSubscription2","EmitterSubscription","constructor","emitter","subscriber","listener","context","remove","removeSubscription","_default","module"],"mappings":"AASA,YAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,mBAAAA,GAAsBL,sBAAAA,CAAuBC,OAAAA,wBAAQ,CAAA;AAAA,IAKnDK,mBAAAA;EAAAA;EAAAA;EAWJC,6BAAYC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IAAA;IAAA;IAClD,0BAAMF,UAAAA;IACN,MAAKD,OAAO,GAAGA,OAAAA;IACf,MAAKE,QAAQ,GAAGA,QAAAA;IAChB,MAAKC,OAAO,GAAGA,OAAAA;IAAAA;EACjB;EAAA;IAAA;IAAA,OASAC,kBAAS;MACP,IAAI,CAACJ,OAAO,CAACK,kBAAkB,CAAC,IAAI,CAAA;IACtC;EAAA;EAAA;AAAA,EA3BgCR,mBAAAA,CAAoBH,OAAO;AA+B7D,IAAIY,QAAAA,GAAWR,mBAAAA;AACfH,OAAAA,CAAQD,OAAO,GAAGY,QAAAA;AAClBC,MAAAA,CAAOZ,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _EventSubscription2 = _interopRequireDefault(require(\"./_EventSubscription\"));\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\nclass EmitterSubscription extends _EventSubscription2.default {\n  /**\n   * @param {EventEmitter} emitter - The event emitter that registered this\n   *   subscription\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n  constructor(emitter, subscriber, listener, context) {\n    super(subscriber);\n    this.emitter = emitter;\n    this.listener = listener;\n    this.context = context;\n  }\n  /**\n   * Removes this subscription from the emitter that registered it.\n   * Note: we're overriding the `remove()` method of _EventSubscription here\n   * but deliberately not calling `super.remove()` as the responsibility\n   * for removing the subscription lies with the EventEmitter.\n   */\n\n\n  remove() {\n    this.emitter.removeSubscription(this);\n  }\n\n}\n\nvar _default = EmitterSubscription;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}