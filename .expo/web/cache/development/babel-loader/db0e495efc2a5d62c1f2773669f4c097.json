{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.getLowestCommonAncestor = getLowestCommonAncestor;\nexports.getResponderPaths = getResponderPaths;\nexports.hasTargetTouches = hasTargetTouches;\nexports.hasValidSelection = hasValidSelection;\nexports.isPrimaryPointerDown = isPrimaryPointerDown;\nexports.setResponderId = setResponderId;\nvar _isSelectionValid = _interopRequireDefault(require(\"../../modules/isSelectionValid\"));\nvar keyName = \"__reactResponderId\";\nfunction getEventPath(domEvent) {\n  if (domEvent.type === \"selectionchange\") {\n    var target = window.getSelection().anchorNode;\n    return composedPathFallback(target);\n  } else {\n    var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n    return path;\n  }\n}\nfunction composedPathFallback(target) {\n  var path = [];\n  while (target != null && target !== document.body) {\n    path.push(target);\n    target = target.parentNode;\n  }\n  return path;\n}\nfunction getResponderId(node) {\n  if (node != null) {\n    return node[keyName];\n  }\n  return null;\n}\nfunction setResponderId(node, id) {\n  if (node != null) {\n    node[keyName] = id;\n  }\n}\nfunction getResponderPaths(domEvent) {\n  var idPath = [];\n  var nodePath = [];\n  var eventPath = getEventPath(domEvent);\n  for (var i = 0; i < eventPath.length; i++) {\n    var node = eventPath[i];\n    var id = getResponderId(node);\n    if (id != null) {\n      idPath.push(id);\n      nodePath.push(node);\n    }\n  }\n  return {\n    idPath: idPath,\n    nodePath: nodePath\n  };\n}\nfunction getLowestCommonAncestor(pathA, pathB) {\n  var pathALength = pathA.length;\n  var pathBLength = pathB.length;\n  if (pathALength === 0 || pathBLength === 0 || pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n    return null;\n  }\n  var itemA = pathA[0];\n  var indexA = 0;\n  var itemB = pathB[0];\n  var indexB = 0;\n  if (pathALength - pathBLength > 0) {\n    indexA = pathALength - pathBLength;\n    itemA = pathA[indexA];\n    pathALength = pathBLength;\n  }\n  if (pathBLength - pathALength > 0) {\n    indexB = pathBLength - pathALength;\n    itemB = pathB[indexB];\n    pathBLength = pathALength;\n  }\n  var depth = pathALength;\n  while (depth--) {\n    if (itemA === itemB) {\n      return itemA;\n    }\n    itemA = pathA[indexA++];\n    itemB = pathB[indexB++];\n  }\n  return null;\n}\nfunction hasTargetTouches(target, touches) {\n  if (!touches || touches.length === 0) {\n    return false;\n  }\n  for (var i = 0; i < touches.length; i++) {\n    var node = touches[i].target;\n    if (node != null) {\n      if (target.contains(node)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction hasValidSelection(domEvent) {\n  if (domEvent.type === \"selectionchange\") {\n    return (0, _isSelectionValid.default)();\n  }\n  return domEvent.type === \"select\";\n}\nfunction isPrimaryPointerDown(domEvent) {\n  var altKey = domEvent.altKey,\n    button = domEvent.button,\n    buttons = domEvent.buttons,\n    ctrlKey = domEvent.ctrlKey,\n    type = domEvent.type;\n  var isTouch = type === \"touchstart\" || type === \"touchmove\";\n  var isPrimaryMouseDown = type === \"mousedown\" && (button === 0 || buttons === 1);\n  var isPrimaryMouseMove = type === \"mousemove\" && buttons === 1;\n  var noModifiers = altKey === false && ctrlKey === false;\n  if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/useResponderEvents/utils.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","getLowestCommonAncestor","getResponderPaths","hasTargetTouches","hasValidSelection","isPrimaryPointerDown","setResponderId","_isSelectionValid","keyName","getEventPath","domEvent","type","target","window","getSelection","anchorNode","composedPathFallback","path","composedPath","document","body","push","parentNode","getResponderId","node","id","idPath","nodePath","eventPath","i","length","pathA","pathB","pathALength","pathBLength","itemA","indexA","itemB","indexB","depth","touches","contains","altKey","button","buttons","ctrlKey","isTouch","isPrimaryMouseDown","isPrimaryMouseMove","noModifiers"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.getLowestCommonAncestor = getLowestCommonAncestor;\nexports.getResponderPaths = getResponderPaths;\nexports.hasTargetTouches = hasTargetTouches;\nexports.hasValidSelection = hasValidSelection;\nexports.isPrimaryPointerDown = isPrimaryPointerDown;\nexports.setResponderId = setResponderId;\n\nvar _isSelectionValid = _interopRequireDefault(require(\"../../modules/isSelectionValid\"));\n\n/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar keyName = '__reactResponderId';\n\nfunction getEventPath(domEvent) {\n  // The 'selectionchange' event always has the 'document' as the target.\n  // Use the anchor node as the initial target to reconstruct a path.\n  // (We actually only need the first \"responder\" node in practice.)\n  if (domEvent.type === 'selectionchange') {\n    var target = window.getSelection().anchorNode;\n    return composedPathFallback(target);\n  } else {\n    var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n    return path;\n  }\n}\n\nfunction composedPathFallback(target) {\n  var path = [];\n\n  while (target != null && target !== document.body) {\n    path.push(target);\n    target = target.parentNode;\n  }\n\n  return path;\n}\n/**\n * Retrieve the responderId from a host node\n */\n\n\nfunction getResponderId(node) {\n  if (node != null) {\n    return node[keyName];\n  }\n\n  return null;\n}\n/**\n * Store the responderId on a host node\n */\n\n\nfunction setResponderId(node, id) {\n  if (node != null) {\n    node[keyName] = id;\n  }\n}\n/**\n * Filter the event path to contain only the nodes attached to the responder system\n */\n\n\nfunction getResponderPaths(domEvent) {\n  var idPath = [];\n  var nodePath = [];\n  var eventPath = getEventPath(domEvent);\n\n  for (var i = 0; i < eventPath.length; i++) {\n    var node = eventPath[i];\n    var id = getResponderId(node);\n\n    if (id != null) {\n      idPath.push(id);\n      nodePath.push(node);\n    }\n  }\n\n  return {\n    idPath,\n    nodePath\n  };\n}\n/**\n * Walk the paths and find the first common ancestor\n */\n\n\nfunction getLowestCommonAncestor(pathA, pathB) {\n  var pathALength = pathA.length;\n  var pathBLength = pathB.length;\n\n  if ( // If either path is empty\n  pathALength === 0 || pathBLength === 0 || // If the last elements aren't the same there can't be a common ancestor\n  // that is connected to the responder system\n  pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n    return null;\n  }\n\n  var itemA = pathA[0];\n  var indexA = 0;\n  var itemB = pathB[0];\n  var indexB = 0; // If A is deeper, skip indices that can't match.\n\n  if (pathALength - pathBLength > 0) {\n    indexA = pathALength - pathBLength;\n    itemA = pathA[indexA];\n    pathALength = pathBLength;\n  } // If B is deeper, skip indices that can't match\n\n\n  if (pathBLength - pathALength > 0) {\n    indexB = pathBLength - pathALength;\n    itemB = pathB[indexB];\n    pathBLength = pathALength;\n  } // Walk in lockstep until a match is found\n\n\n  var depth = pathALength;\n\n  while (depth--) {\n    if (itemA === itemB) {\n      return itemA;\n    }\n\n    itemA = pathA[indexA++];\n    itemB = pathB[indexB++];\n  }\n\n  return null;\n}\n/**\n * Determine whether any of the active touches are within the current responder.\n * This cannot rely on W3C `targetTouches`, as neither IE11 nor Safari implement it.\n */\n\n\nfunction hasTargetTouches(target, touches) {\n  if (!touches || touches.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var node = touches[i].target;\n\n    if (node != null) {\n      if (target.contains(node)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n/**\n * Ignore 'selectionchange' events that don't correspond with a person's intent to\n * select text.\n */\n\n\nfunction hasValidSelection(domEvent) {\n  if (domEvent.type === 'selectionchange') {\n    return (0, _isSelectionValid.default)();\n  }\n\n  return domEvent.type === 'select';\n}\n/**\n * Events are only valid if the primary button was used without specific modifier keys.\n */\n\n\nfunction isPrimaryPointerDown(domEvent) {\n  var altKey = domEvent.altKey,\n      button = domEvent.button,\n      buttons = domEvent.buttons,\n      ctrlKey = domEvent.ctrlKey,\n      type = domEvent.type;\n  var isTouch = type === 'touchstart' || type === 'touchmove';\n  var isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1);\n  var isPrimaryMouseMove = type === 'mousemove' && buttons === 1;\n  var noModifiers = altKey === false && ctrlKey === false;\n\n  if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n    return true;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}