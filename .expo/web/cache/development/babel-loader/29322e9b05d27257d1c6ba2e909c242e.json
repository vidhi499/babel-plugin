{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar AnimatedDivision = function (_AnimatedWithChildren) {\n  _inherits(AnimatedDivision, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedDivision);\n  function AnimatedDivision(a, b) {\n    var _this;\n    _classCallCheck(this, AnimatedDivision);\n    _this = _super.call(this);\n    _this._warnedAboutDivideByZero = false;\n    if (b === 0 || b instanceof AnimatedNode && b.__getValue() === 0) {\n      console.error(\"Detected potential division by zero in AnimatedDivision\");\n    }\n    _this._a = typeof a === \"number\" ? new AnimatedValue(a) : a;\n    _this._b = typeof b === \"number\" ? new AnimatedValue(b) : b;\n    return _this;\n  }\n  _createClass(AnimatedDivision, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._a.__makeNative();\n      this._b.__makeNative();\n      _get(_getPrototypeOf(AnimatedDivision.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var a = this._a.__getValue();\n      var b = this._b.__getValue();\n      if (b === 0) {\n        if (!this._warnedAboutDivideByZero) {\n          console.error(\"Detected division by zero in AnimatedDivision\");\n          this._warnedAboutDivideByZero = true;\n        }\n        return 0;\n      }\n      this._warnedAboutDivideByZero = false;\n      return a / b;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._a.__addChild(this);\n      this._b.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._a.__removeChild(this);\n      this._b.__removeChild(this);\n      _get(_getPrototypeOf(AnimatedDivision.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: \"division\",\n        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n      };\n    }\n  }]);\n  return AnimatedDivision;\n}(AnimatedWithChildren);\nexport default AnimatedDivision;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedDivision.js"],"names":["AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedDivision","constructor","a","b","_warnedAboutDivideByZero","__getValue","console","error","_a","_b","__makeNative","interpolate","config","__attach","__addChild","__detach","__removeChild","__getNativeConfig","type","input","__getNativeTag"],"mappings":"AASA,YAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,OAAOA,qBAAAA;AACP,OAAOC,YAAAA;AACP,OAAOC,aAAAA;AACP,OAAOC,oBAAAA;AAAmD,IAEpDC,gBAAAA;EAAAA;EAAAA;EACJC,0BAAYC,CAAC,EAAEC,CAAC,EAAE;IAAA;IAAA;IAChB;IACA,MAAKC,wBAAwB,GAAG,KAAK;IAErC,IAAID,CAAAA,KAAM,CAAA,IAAKA,CAAAA,YAAaN,YAAAA,IAAgBM,CAAAA,CAAEE,UAAU,EAAA,KAAO,CAAA,EAAG;MAChEC,OAAAA,CAAQC,KAAK,CAAC,yDAAA,CAAA;IAChB;IAEA,MAAKC,EAAE,GAAG,OAAON,CAAAA,KAAM,QAAA,GAAW,IAAIJ,aAAAA,CAAcI,CAAAA,CAAAA,GAAKA,CAAC;IAC1D,MAAKO,EAAE,GAAG,OAAON,CAAAA,KAAM,QAAA,GAAW,IAAIL,aAAAA,CAAcK,CAAAA,CAAAA,GAAKA,CAAC;IAAA;EAC5D;EAAA;IAAA;IAAA,OAEAO,wBAAe;MACb,IAAI,CAACF,EAAE,CAACE,YAAY,EAAA;MAEpB,IAAI,CAACD,EAAE,CAACC,YAAY,EAAA;MAEpB;IACF;EAAA;IAAA;IAAA,OAEAL,sBAAa;MACX,IAAIH,CAAAA,GAAI,IAAI,CAACM,EAAE,CAACH,UAAU,EAAA;MAE1B,IAAIF,CAAAA,GAAI,IAAI,CAACM,EAAE,CAACJ,UAAU,EAAA;MAE1B,IAAIF,CAAAA,KAAM,CAAA,EAAG;QAEX,IAAI,CAAC,IAAI,CAACC,wBAAwB,EAAE;UAClCE,OAAAA,CAAQC,KAAK,CAAC,+CAAA,CAAA;UACd,IAAI,CAACH,wBAAwB,GAAG,IAAI;QACtC;QAGA,OAAO,CAAA;MACT;MAEA,IAAI,CAACA,wBAAwB,GAAG,KAAK;MACrC,OAAOF,CAAAA,GAAIC,CAAAA;IACb;EAAA;IAAA;IAAA,OAEAQ,qBAAYC,MAAM,EAAE;MAClB,OAAO,IAAIhB,qBAAAA,CAAsB,IAAI,EAAEgB,MAAAA,CAAAA;IACzC;EAAA;IAAA;IAAA,OAEAC,oBAAW;MACT,IAAI,CAACL,EAAE,CAACM,UAAU,CAAC,IAAI,CAAA;MAEvB,IAAI,CAACL,EAAE,CAACK,UAAU,CAAC,IAAI,CAAA;IACzB;EAAA;IAAA;IAAA,OAEAC,oBAAW;MACT,IAAI,CAACP,EAAE,CAACQ,aAAa,CAAC,IAAI,CAAA;MAE1B,IAAI,CAACP,EAAE,CAACO,aAAa,CAAC,IAAI,CAAA;MAE1B;IACF;EAAA;IAAA;IAAA,OAEAC,6BAAoB;MAClB,OAAO;QACLC,IAAAA,EAAM,UAAA;QACNC,KAAAA,EAAO,CAAC,IAAI,CAACX,EAAE,CAACY,cAAc,EAAA,EAAI,IAAI,CAACX,EAAE,CAACW,cAAc,EAAA;MAC1D,CAAA;IACF;EAAA;EAAA;AAAA,EAhE6BrB,oBAAAA;AAoE/B,eAAeC,gBAAAA","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedDivision extends AnimatedWithChildren {\n  constructor(a, b) {\n    super();\n    this._warnedAboutDivideByZero = false;\n\n    if (b === 0 || b instanceof AnimatedNode && b.__getValue() === 0) {\n      console.error('Detected potential division by zero in AnimatedDivision');\n    }\n\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    this._b.__makeNative();\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    var a = this._a.__getValue();\n\n    var b = this._b.__getValue();\n\n    if (b === 0) {\n      // Prevent spamming the console/LogBox\n      if (!this._warnedAboutDivideByZero) {\n        console.error('Detected division by zero in AnimatedDivision');\n        this._warnedAboutDivideByZero = true;\n      } // Passing infinity/NaN to Fabric will cause a native crash\n\n\n      return 0;\n    }\n\n    this._warnedAboutDivideByZero = false;\n    return a / b;\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n\n    this._b.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    this._b.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'division',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n    };\n  }\n\n}\n\nexport default AnimatedDivision;"]},"metadata":{},"sourceType":"module"}