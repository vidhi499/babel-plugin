{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\nimport createReactClass from \"create-react-class\";\nimport dismissKeyboard from \"../../modules/dismissKeyboard\";\nimport invariant from \"fbjs/lib/invariant\";\nimport mergeRefs from \"../../modules/mergeRefs\";\nimport ScrollResponder from \"../../modules/ScrollResponder\";\nimport ScrollViewBase from \"./ScrollViewBase\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nimport React from \"react\";\nvar emptyObject = {};\nvar ScrollView = createReactClass({\n  displayName: \"ScrollView\",\n  mixins: [ScrollResponder.Mixin],\n  getInitialState: function getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n  flashScrollIndicators: function flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n  getScrollResponder: function getScrollResponder() {\n    return this;\n  },\n  getScrollableNode: function getScrollableNode() {\n    return this._scrollNodeRef;\n  },\n  getInnerViewRef: function getInnerViewRef() {\n    return this._innerViewRef;\n  },\n  getInnerViewNode: function getInnerViewNode() {\n    return this._innerViewRef;\n  },\n  getNativeScrollRef: function getNativeScrollRef() {\n    return this._scrollNodeRef;\n  },\n  scrollTo: function scrollTo(y, x, animated) {\n    if (typeof y === \"number\") {\n      console.warn(\"`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.\");\n    } else {\n      var _ref = y || emptyObject;\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n  scrollToEnd: function scrollToEnd(options) {\n    var animated = (options && options.animated) !== false;\n    var horizontal = this.props.horizontal;\n    var scrollResponder = this.getScrollResponder();\n    var scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({\n      x: x,\n      y: y,\n      animated: animated\n    });\n  },\n  render: function render() {\n    var _this$props = this.props,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      horizontal = _this$props.horizontal,\n      onContentSizeChange = _this$props.onContentSizeChange,\n      refreshControl = _this$props.refreshControl,\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\n      pagingEnabled = _this$props.pagingEnabled,\n      forwardedRef = _this$props.forwardedRef,\n      keyboardDismissMode = _this$props.keyboardDismissMode,\n      onScroll = _this$props.onScroll,\n      centerContent = _this$props.centerContent,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (\"development\" !== \"production\" && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = [\"alignItems\", \"justifyContent\"].filter(function (prop) {\n        return style && style[prop] !== undefined;\n      });\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + \"must be applied through the contentContainerStyle prop.\");\n    }\n    var contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, function (child, i) {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n      if (child != null && (isSticky || pagingEnabled)) {\n        return React.createElement(View, {\n          style: StyleSheet.compose(isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild)\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, \"ScrollViewClass must not be undefined\");\n    var scrollView = React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n    if (refreshControl) {\n      return React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n    return scrollView;\n  },\n  _handleContentOnLayout: function _handleContentOnLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      width = _e$nativeEvent$layout.width,\n      height = _e$nativeEvent$layout.height;\n    this.props.onContentSizeChange(width, height);\n  },\n  _handleScroll: function _handleScroll(e) {\n    if (\"development\" !== \"production\") {\n      if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n        console.log(\"You specified `onScroll` on a <ScrollView> but not \" + \"`scrollEventThrottle`. You will only receive one event. \" + \"Using `16` you get all the events but be aware that it may \" + \"cause frame drops, use a bigger number if you don't need as \" + \"much precision.\");\n      }\n    }\n    if (this.props.keyboardDismissMode === \"on-drag\") {\n      dismissKeyboard();\n    }\n    this.scrollResponderHandleScroll(e);\n  },\n  _setInnerViewRef: function _setInnerViewRef(node) {\n    this._innerViewRef = node;\n  },\n  _setScrollNodeRef: function _setScrollNodeRef(node) {\n    this._scrollNodeRef = node;\n    if (node != null) {\n      node.getScrollResponder = this.getScrollResponder;\n      node.getInnerViewNode = this.getInnerViewNode;\n      node.getInnerViewRef = this.getInnerViewRef;\n      node.getNativeScrollRef = this.getNativeScrollRef;\n      node.getScrollableNode = this.getScrollableNode;\n      node.scrollTo = this.scrollTo;\n      node.scrollToEnd = this.scrollToEnd;\n      node.flashScrollIndicators = this.flashScrollIndicators;\n      node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n      node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n    }\n    var ref = mergeRefs(this.props.forwardedRef);\n    ref(node);\n  }\n});\n_c = ScrollView;\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  transform: [{\n    translateZ: 0\n  }],\n  WebkitOverflowScrolling: \"touch\"\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: \"column\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\"\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: \"row\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\"\n  }),\n  contentContainerHorizontal: {\n    flexDirection: \"row\"\n  },\n  contentContainerCenterContent: {\n    justifyContent: \"center\",\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: \"sticky\",\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: \"x mandatory\"\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: \"y mandatory\"\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: \"start\"\n  }\n});\nvar ForwardedScrollView = React.forwardRef(_c1 = function _c1(props, forwardedRef) {\n  return React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\n_c2 = ForwardedScrollView;\nForwardedScrollView.displayName = \"ScrollView\";\nexport default ForwardedScrollView;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ScrollView\");\n$RefreshReg$(_c1, \"ForwardedScrollView$React.forwardRef\");\n$RefreshReg$(_c2, \"ForwardedScrollView\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/ScrollView/index.js"],"names":["_objectSpread","_extends","_objectWithoutPropertiesLoose","_excluded","createReactClass","dismissKeyboard","invariant","mergeRefs","ScrollResponder","ScrollViewBase","StyleSheet","View","React","emptyObject","ScrollView","displayName","mixins","Mixin","getInitialState","scrollResponderMixinGetInitialState","flashScrollIndicators","scrollResponderFlashScrollIndicators","getScrollResponder","getScrollableNode","_scrollNodeRef","getInnerViewRef","_innerViewRef","getInnerViewNode","getNativeScrollRef","scrollTo","y","x","animated","console","warn","_ref","scrollResponderScrollTo","scrollToEnd","options","horizontal","props","scrollResponder","scrollResponderNode","scrollResponderGetScrollableNode","scrollWidth","scrollHeight","render","_this$props","contentContainerStyle","onContentSizeChange","refreshControl","stickyHeaderIndices","pagingEnabled","forwardedRef","keyboardDismissMode","onScroll","centerContent","other","process","style","flatten","childLayoutProps","filter","prop","undefined","length","JSON","stringify","contentSizeChangeProps","onLayout","_handleContentOnLayout","hasStickyHeaderIndices","Array","isArray","children","Children","map","child","i","isSticky","indexOf","createElement","compose","styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","ref","_setInnerViewRef","contentContainerHorizontal","contentContainerCenterContent","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onTouchStart","scrollResponderHandleTouchStart","onTouchMove","scrollResponderHandleTouchMove","onTouchEnd","scrollResponderHandleTouchEnd","onScrollBeginDrag","scrollResponderHandleScrollBeginDrag","onScrollEndDrag","scrollResponderHandleScrollEndDrag","onMomentumScrollBegin","scrollResponderHandleMomentumScrollBegin","onMomentumScrollEnd","scrollResponderHandleMomentumScrollEnd","onStartShouldSetResponder","scrollResponderHandleStartShouldSetResponder","onStartShouldSetResponderCapture","scrollResponderHandleStartShouldSetResponderCapture","onScrollShouldSetResponder","scrollResponderHandleScrollShouldSetResponder","_handleScroll","onResponderGrant","scrollResponderHandleResponderGrant","onResponderTerminationRequest","scrollResponderHandleTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderRelease","scrollResponderHandleResponderRelease","onResponderReject","scrollResponderHandleResponderReject","ScrollViewClass","scrollView","_setScrollNodeRef","cloneElement","e","_e$nativeEvent$layout","nativeEvent","layout","width","height","scrollEventThrottle","log","scrollResponderHandleScroll","node","scrollResponderZoomTo","scrollResponderScrollNativeHandleToKeyboard","commonStyle","flexGrow","flexShrink","transform","translateZ","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","justifyContent","position","top","zIndex","scrollSnapType","scrollSnapAlign","ForwardedScrollView","forwardRef"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createReactClass from 'create-react-class';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../modules/mergeRefs';\nimport ScrollResponder from '../../modules/ScrollResponder';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport React from 'react';\nvar emptyObject = {};\n/* eslint-disable react/prefer-es6-class */\n\nvar ScrollView = createReactClass({\n  displayName: \"ScrollView\",\n  mixins: [ScrollResponder.Mixin],\n\n  getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n\n  flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n  getScrollResponder() {\n    return this;\n  },\n\n  getScrollableNode() {\n    return this._scrollNodeRef;\n  },\n\n  getInnerViewRef() {\n    return this._innerViewRef;\n  },\n\n  getInnerViewNode() {\n    return this._innerViewRef;\n  },\n\n  getNativeScrollRef() {\n    return this._scrollNodeRef;\n  },\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollTo(y, x, animated) {\n    if (typeof y === 'number') {\n      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = y || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n  scrollToEnd(options) {\n    // Default to true\n    var animated = (options && options.animated) !== false;\n    var horizontal = this.props.horizontal;\n    var scrollResponder = this.getScrollResponder();\n    var scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({\n      x,\n      y,\n      animated\n    });\n  },\n\n  render() {\n    var _this$props = this.props,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        horizontal = _this$props.horizontal,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        refreshControl = _this$props.refreshControl,\n        stickyHeaderIndices = _this$props.stickyHeaderIndices,\n        pagingEnabled = _this$props.pagingEnabled,\n        forwardedRef = _this$props.forwardedRef,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onScroll = _this$props.onScroll,\n        centerContent = _this$props.centerContent,\n        other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n\n    var contentSizeChangeProps = {};\n\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n\n      if (child != null && (isSticky || pagingEnabled)) {\n        return /*#__PURE__*/React.createElement(View, {\n          style: StyleSheet.compose(isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild)\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n\n    if (refreshControl) {\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n\n    return scrollView;\n  },\n\n  _handleContentOnLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n    this.props.onContentSizeChange(width, height);\n  },\n\n  _handleScroll(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n      }\n    }\n\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n\n    this.scrollResponderHandleScroll(e);\n  },\n\n  _setInnerViewRef(node) {\n    this._innerViewRef = node;\n  },\n\n  _setScrollNodeRef(node) {\n    this._scrollNodeRef = node; // ScrollView needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\n\n    if (node != null) {\n      node.getScrollResponder = this.getScrollResponder;\n      node.getInnerViewNode = this.getInnerViewNode;\n      node.getInnerViewRef = this.getInnerViewRef;\n      node.getNativeScrollRef = this.getNativeScrollRef;\n      node.getScrollableNode = this.getScrollableNode;\n      node.scrollTo = this.scrollTo;\n      node.scrollToEnd = this.scrollToEnd;\n      node.flashScrollIndicators = this.flashScrollIndicators;\n      node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n      node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n    }\n\n    var ref = mergeRefs(this.props.forwardedRef);\n    ref(node);\n  }\n\n});\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: [{\n    translateZ: 0\n  }],\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nexport default ForwardedScrollView;"]},"metadata":{},"sourceType":"module"}