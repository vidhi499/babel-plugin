{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"indeterminate\", \"progress\", \"trackColor\", \"style\"];\nimport * as React from \"react\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nvar ProgressBar = React.forwardRef(function (props, ref) {\n  var _props$color = props.color,\n    color = _props$color === void 0 ? \"#1976D2\" : _props$color,\n    _props$indeterminate = props.indeterminate,\n    indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n    _props$progress = props.progress,\n    progress = _props$progress === void 0 ? 0 : _props$progress,\n    _props$trackColor = props.trackColor,\n    trackColor = _props$trackColor === void 0 ? \"transparent\" : _props$trackColor,\n    style = props.style,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var percentageProgress = progress * 100;\n  var width = indeterminate ? \"25%\" : percentageProgress + \"%\";\n  return React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 100,\n    accessibilityValueMin: 0,\n    accessibilityValueNow: indeterminate ? null : percentageProgress,\n    ref: ref,\n    style: [styles.track, style, {\n      backgroundColor: trackColor\n    }]\n  }), React.createElement(View, {\n    style: [{\n      backgroundColor: color,\n      width: width\n    }, styles.progress, indeterminate && styles.animation]\n  }));\n});\nProgressBar.displayName = \"ProgressBar\";\nvar styles = StyleSheet.create({\n  track: {\n    forcedColorAdjust: \"none\",\n    height: 5,\n    overflow: \"hidden\",\n    userSelect: \"none\",\n    zIndex: 0\n  },\n  progress: {\n    forcedColorAdjust: \"none\",\n    height: \"100%\",\n    zIndex: -1\n  },\n  animation: {\n    animationDuration: \"1s\",\n    animationKeyframes: [{\n      \"0%\": {\n        transform: [{\n          translateX: \"-100%\"\n        }]\n      },\n      \"100%\": {\n        transform: [{\n          translateX: \"400%\"\n        }]\n      }\n    }],\n    animationTimingFunction: \"linear\",\n    animationIterationCount: \"infinite\"\n  }\n});\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/ProgressBar/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","StyleSheet","View","ProgressBar","forwardRef","props","ref","_props$color","color","_props$indeterminate","indeterminate","_props$progress","progress","_props$trackColor","trackColor","style","other","percentageProgress","width","createElement","accessibilityRole","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","styles","track","backgroundColor","animation","displayName","create","forcedColorAdjust","height","overflow","userSelect","zIndex","animationDuration","animationKeyframes","transform","translateX","animationTimingFunction","animationIterationCount"],"mappings":"AAAA,OAAOA,QAAAA,MAAc,gCAAA;AACrB,OAAOC,6BAAAA,MAAmC,qDAAA;AAC1C,IAAIC,SAAAA,GAAY,CAAC,OAAA,EAAS,eAAA,EAAiB,UAAA,EAAY,YAAA,EAAc,OAAA,CAAQ;AAU7E,OAAA,KAAYC,KAAAA,MAAW,OAAA;AACvB,OAAOC,UAAAA;AACP,OAAOC,IAAAA;AACP,IAAIC,WAAAA,GAA2BH,KAAAA,CAAMI,UAAU,CAAC,UAACC,KAAAA,EAAOC,GAAAA,EAAQ;EAC9D,IAAIC,YAAAA,GAAeF,KAAAA,CAAMG,KAAK;IAC1BA,KAAAA,GAAQD,YAAAA,KAAiB,KAAK,CAAA,GAAI,SAAA,GAAYA,YAAY;IAC1DE,oBAAAA,GAAuBJ,KAAAA,CAAMK,aAAa;IAC1CA,aAAAA,GAAgBD,oBAAAA,KAAyB,KAAK,CAAA,GAAI,KAAK,GAAGA,oBAAoB;IAC9EE,eAAAA,GAAkBN,KAAAA,CAAMO,QAAQ;IAChCA,QAAAA,GAAWD,eAAAA,KAAoB,KAAK,CAAA,GAAI,CAAA,GAAIA,eAAe;IAC3DE,iBAAAA,GAAoBR,KAAAA,CAAMS,UAAU;IACpCA,UAAAA,GAAaD,iBAAAA,KAAsB,KAAK,CAAA,GAAI,aAAA,GAAgBA,iBAAiB;IAC7EE,KAAAA,GAAQV,KAAAA,CAAMU,KAAK;IACnBC,KAAAA,GAAQlB,6BAAAA,CAA8BO,KAAAA,EAAON,SAAAA,CAAAA;EAEjD,IAAIkB,kBAAAA,GAAqBL,QAAAA,GAAW,GAAA;EACpC,IAAIM,KAAAA,GAAQR,aAAAA,GAAgB,KAAA,GAAQO,kBAAAA,GAAqB,GAAG;EAC5D,OAAoBjB,KAAAA,CAAMmB,aAAa,CAACjB,IAAAA,EAAML,QAAAA,CAAS,CAAC,CAAA,EAAGmB,KAAAA,EAAO;IAChEI,iBAAAA,EAAmB,aAAA;IACnBC,qBAAAA,EAAuB,GAAA;IACvBC,qBAAAA,EAAuB,CAAA;IACvBC,qBAAAA,EAAuBb,aAAAA,GAAgB,IAAI,GAAGO,kBAAkB;IAChEX,GAAAA,EAAKA,GAAAA;IACLS,KAAAA,EAAO,CAACS,MAAAA,CAAOC,KAAK,EAAEV,KAAAA,EAAO;MAC3BW,eAAAA,EAAiBZ;IACnB,CAAA;EACF,CAAA,CAAA,EAAiBd,KAAAA,CAAMmB,aAAa,CAACjB,IAAAA,EAAM;IACzCa,KAAAA,EAAO,CAAC;MACNW,eAAAA,EAAiBlB,KAAAA;MACjBU,KAAAA,EAAAA;IACF,CAAA,EAAGM,MAAAA,CAAOZ,QAAQ,EAAEF,aAAAA,IAAiBc,MAAAA,CAAOG,SAAS;EACvD,CAAA,CAAA,CAAA;AACF,CAAA,CAAA;AACAxB,WAAAA,CAAYyB,WAAW,GAAG,aAAA;AAC1B,IAAIJ,MAAAA,GAASvB,UAAAA,CAAW4B,MAAM,CAAC;EAC7BJ,KAAAA,EAAO;IACLK,iBAAAA,EAAmB,MAAA;IACnBC,MAAAA,EAAQ,CAAA;IACRC,QAAAA,EAAU,QAAA;IACVC,UAAAA,EAAY,MAAA;IACZC,MAAAA,EAAQ;EACV,CAAA;EACAtB,QAAAA,EAAU;IACRkB,iBAAAA,EAAmB,MAAA;IACnBC,MAAAA,EAAQ,MAAA;IACRG,MAAAA,EAAQ,CAAC;EACX,CAAA;EACAP,SAAAA,EAAW;IACTQ,iBAAAA,EAAmB,IAAA;IACnBC,kBAAAA,EAAoB,CAAC;MACnB,IAAA,EAAM;QACJC,SAAAA,EAAW,CAAC;UACVC,UAAAA,EAAY;QACd,CAAA;MACF,CAAA;MACA,MAAA,EAAQ;QACND,SAAAA,EAAW,CAAC;UACVC,UAAAA,EAAY;QACd,CAAA;MACF;IACF,CAAA,CAAE;IACFC,uBAAAA,EAAyB,QAAA;IACzBC,uBAAAA,EAAyB;EAC3B;AACF,CAAA,CAAA;AACA,eAAerC,WAAAA","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"indeterminate\", \"progress\", \"trackColor\", \"style\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar ProgressBar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? '#1976D2' : _props$color,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$progress = props.progress,\n      progress = _props$progress === void 0 ? 0 : _props$progress,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? 'transparent' : _props$trackColor,\n      style = props.style,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var percentageProgress = progress * 100;\n  var width = indeterminate ? '25%' : percentageProgress + \"%\";\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 100,\n    accessibilityValueMin: 0,\n    accessibilityValueNow: indeterminate ? null : percentageProgress,\n    ref: ref,\n    style: [styles.track, style, {\n      backgroundColor: trackColor\n    }]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [{\n      backgroundColor: color,\n      width\n    }, styles.progress, indeterminate && styles.animation]\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nvar styles = StyleSheet.create({\n  track: {\n    forcedColorAdjust: 'none',\n    height: 5,\n    overflow: 'hidden',\n    userSelect: 'none',\n    zIndex: 0\n  },\n  progress: {\n    forcedColorAdjust: 'none',\n    height: '100%',\n    zIndex: -1\n  },\n  animation: {\n    animationDuration: '1s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          translateX: '-100%'\n        }]\n      },\n      '100%': {\n        transform: [{\n          translateX: '400%'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }\n});\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}