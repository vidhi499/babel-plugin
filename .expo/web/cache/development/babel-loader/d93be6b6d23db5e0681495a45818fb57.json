{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = usePressEvents;\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\nvar _react = require(\"react\");\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n  var pressResponder = pressResponderRef.current;\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/usePressEvents/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","usePressEvents","_PressResponder","_react","hostRef","config","pressResponderRef","useRef","current","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers","module"],"mappings":"AASA,YAAA;;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAGG,cAAAA;AAElB,IAAIC,eAAAA,GAAkBN,sBAAAA,CAAuBC,OAAAA,oBAAQ,CAAA;AAErD,IAAIM,MAAAA,GAASN,OAAAA,CAAQ,OAAA,CAAA;AAErB,SAASI,cAAAA,CAAeG,OAAO,EAAEC,MAAM,EAAE;EACvC,IAAIC,iBAAAA,GAAqB,CAAA,CAAA,EAAGH,MAAAA,CAAOI,MAAM,EAAE,IAAI,CAAA;EAE/C,IAAID,iBAAAA,CAAkBE,OAAO,IAAI,IAAI,EAAE;IACrCF,iBAAAA,CAAkBE,OAAO,GAAG,IAAIN,eAAAA,CAAgBJ,OAAO,CAACO,MAAAA,CAAAA;EAC1D;EAEA,IAAII,cAAAA,GAAiBH,iBAAAA,CAAkBE,OAAO;EAE7C,CAAA,CAAA,EAAGL,MAAAA,CAAOO,SAAS,EAAE,YAAM;IAC1BD,cAAAA,CAAeE,SAAS,CAACN,MAAAA,CAAAA;EAC3B,CAAA,EAAG,CAACA,MAAAA,EAAQI,cAAAA,CAAe,CAAA;EAG1B,CAAA,CAAA,EAAGN,MAAAA,CAAOO,SAAS,EAAE,YAAM;IAC1B,OAAO,YAAM;MACXD,cAAAA,CAAeG,KAAK,EAAA;IACtB,CAAA;EACF,CAAA,EAAG,CAACH,cAAAA,CAAe,CAAA;EAClB,CAAA,CAAA,EAAGN,MAAAA,CAAOU,aAAa,EAAER,MAAAA,CAAAA;EAC1B,OAAOI,cAAAA,CAAeK,gBAAgB,EAAA;AACxC;AAEAC,MAAAA,CAAOhB,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}