{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/get.js\";\nimport _inherits from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport InteractionManager from \"../../../../exports/InteractionManager\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  _inherits(AnimatedValue, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue(value) {\n    var _this;\n    _classCallCheck(this, AnimatedValue);\n    _this = _super.call(this);\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n  _createClass(AnimatedValue, [{\n    key: \"__detach\",\n    value: function __detach() {\n      var _this2 = this;\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n          _this2._value = value;\n        });\n      }\n      this.stopAnimation();\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._value + this._offset;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (this._animation) {\n        this._animation.stop();\n        this._animation = null;\n      }\n      this._updateValue(value, !this.__isNative);\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this._offset = offset;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n    }\n  }, {\n    key: \"_onAnimatedValueUpdateReceived\",\n    value: function _onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(animation, callback) {\n      var _this3 = this;\n      var handle = null;\n      if (animation.__isInteraction) {\n        handle = InteractionManager.createInteractionHandle();\n      }\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, function (value) {\n        _this3._updateValue(value, true);\n      }, function (result) {\n        _this3._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n  }, {\n    key: \"stopTracking\",\n    value: function stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n  }, {\n    key: \"track\",\n    value: function track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._value = value;\n      if (flush) {\n        _flush(this);\n      }\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__callListeners\", this).call(this, this.__getValue());\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'value',\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }]);\n  return AnimatedValue;\n}(AnimatedWithChildren);\nexport default AnimatedValue;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["AnimatedInterpolation","AnimatedWithChildren","InteractionManager","NativeAnimatedHelper","NativeAnimatedAPI","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","AnimatedValue","value","Error","_startingValue","_value","_offset","_animation","__isNative","getValue","__getNativeTag","stopAnimation","stop","_updateValue","setAnimatedNodeValue","offset","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","callback","stopTracking","__getValue","config","animation","handle","__isInteraction","createInteractionHandle","previousAnimation","start","clearInteractionHandle","result","_tracking","__detach","tracking","flush","undefined","type"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport InteractionManager from '../../../../exports/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  /* $FlowFixMe */\n\n  animatedStyles.forEach(animatedStyle => animatedStyle.update());\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue.html\n */\n\n\nclass AnimatedValue extends AnimatedWithChildren {\n  constructor(value) {\n    super();\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n  }\n\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    super.__detach();\n  }\n\n  __getValue() {\n    return this._value + this._offset;\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setvalue\n   */\n\n\n  setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setoffset\n   */\n\n\n  setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#flattenoffset\n   */\n\n\n  flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#extractoffset\n   */\n\n\n  extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#stopanimation\n   */\n\n\n  stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#resetanimation\n   */\n\n\n  resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false\n    /*flush*/\n    );\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#animate\n   */\n\n\n  animate(animation, callback) {\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, value => {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      this._updateValue(value, true\n      /* flush */\n      );\n    }, result => {\n      this._animation = null;\n\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n\n\n  stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n\n\n  track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  }\n\n  _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    super.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  }\n\n}\n\nexport default AnimatedValue;"]},"metadata":{},"sourceType":"module"}