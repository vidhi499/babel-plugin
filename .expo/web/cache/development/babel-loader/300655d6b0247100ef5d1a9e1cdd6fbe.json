{"ast":null,"code":"import _classCallCheck from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js\";\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from \"../../modules/canUseDom\";\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n  var win = window;\n  var docEl = win.document.documentElement;\n  dimensions.window = {\n    fontScale: 1,\n    height: docEl.clientHeight,\n    scale: win.devicePixelRatio || 1,\n    width: docEl.clientWidth\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\nfunction handleResize() {\n  update();\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(function (handler) {\n      return handler(dimensions);\n    });\n  }\n}\nvar Dimensions = function () {\n  function Dimensions() {\n    _classCallCheck(this, Dimensions);\n  }\n  _createClass(Dimensions, null, [{\n    key: \"get\",\n    value: function get(dimension) {\n      if (shouldInit) {\n        shouldInit = false;\n        update();\n      }\n      invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n      return dimensions[dimension];\n    }\n  }, {\n    key: \"set\",\n    value: function set(initialDimensions) {\n      if (initialDimensions) {\n        if (canUseDOM) {\n          invariant(false, 'Dimensions cannot be set in the browser');\n        } else {\n          if (initialDimensions.screen != null) {\n            dimensions.screen = initialDimensions.screen;\n          }\n          if (initialDimensions.window != null) {\n            dimensions.window = initialDimensions.window;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      var _this = this;\n      listeners[type] = listeners[type] || [];\n      listeners[type].push(handler);\n      return {\n        remove: function remove() {\n          _this.removeEventListener(type, handler);\n        }\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, handler) {\n      if (Array.isArray(listeners[type])) {\n        listeners[type] = listeners[type].filter(function (_handler) {\n          return _handler !== handler;\n        });\n      }\n    }\n  }]);\n  return Dimensions;\n}();\nexport { Dimensions as default };\nif (canUseDOM) {\n  window.addEventListener('resize', handleResize, false);\n}\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"names":["invariant","canUseDOM","dimensions","window","fontScale","height","scale","width","screen","listeners","shouldInit","update","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","handleResize","Array","isArray","forEach","handler","Dimensions","dimension","initialDimensions","type","push","remove","removeEventListener","filter","_handler","addEventListener"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\n\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n\n  var win = window;\n  var docEl = win.document.documentElement;\n  dimensions.window = {\n    fontScale: 1,\n    height: docEl.clientHeight,\n    scale: win.devicePixelRatio || 1,\n    width: docEl.clientWidth\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\n\nfunction handleResize() {\n  update();\n\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(handler => handler(dimensions));\n  }\n}\n\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n      update();\n    }\n\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n\n}\n\nif (canUseDOM) {\n  window.addEventListener('resize', handleResize, false);\n}"]},"metadata":{},"sourceType":"module"}