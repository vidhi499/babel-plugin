{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\nfunction toHyphenLower(match) {\n  return \"-\" + match.toLowerCase();\n}\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? \"-\" + hName : hName;\n}\nvar _default = hyphenateStyleName;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/StyleSheet/compiler/hyphenateStyleName.js"],"names":["exports","__esModule","default","uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateStyleName","name","hName","replace","test","_default","module"],"mappings":"AAAA,YAAA;;AAEAA,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQE,OAAO,GAAG,KAAK,CAAA;AAUvB,IAAIC,gBAAAA,GAAmB,QAAA;AACvB,IAAIC,SAAAA,GAAY,MAAA;AAChB,IAAIC,KAAAA,GAAQ,CAAC,CAAA;AAEb,SAASC,aAAAA,CAAcC,KAAK,EAAE;EAC5B,OAAO,GAAA,GAAMA,KAAAA,CAAMC,WAAW,EAAA;AAChC;AAEA,SAASC,kBAAAA,CAAmBC,IAAI,EAAE;EAChC,IAAIA,IAAAA,IAAQL,KAAAA,EAAO;IACjB,OAAOA,KAAK,CAACK,IAAAA,CAAK;EACpB;EAEA,IAAIC,KAAAA,GAAQD,IAAAA,CAAKE,OAAO,CAACT,gBAAAA,EAAkBG,aAAAA,CAAAA;EAC3C,OAAOD,KAAK,CAACK,IAAAA,CAAK,GAAGN,SAAAA,CAAUS,IAAI,CAACF,KAAAA,CAAAA,GAAS,GAAA,GAAMA,KAAAA,GAAQA,KAAK;AAClE;AAEA,IAAIG,QAAAA,GAAWL,kBAAAA;AACfT,OAAAA,CAAQE,OAAO,GAAGY,QAAAA;AAClBC,MAAAA,CAAOf,OAAO,GAAGA,OAAAA,CAAQE,OAAO","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\n\nvar _default = hyphenateStyleName;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}