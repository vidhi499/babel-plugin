{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from \"../AnimatedEvent\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedStyle from \"./AnimatedStyle\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport findNodeHandle from \"../../../../exports/findNodeHandle\";\nimport invariant from 'fbjs/lib/invariant';\nvar AnimatedProps = function (_AnimatedNode) {\n  _inherits(AnimatedProps, _AnimatedNode);\n  var _super = _createSuper(AnimatedProps);\n  function AnimatedProps(props, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _super.call(this);\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedProps, [{\n    key: \"__getValue\",\n    value: function __getValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          if (!value.__isNative || value instanceof AnimatedStyle) {\n            props[key] = value.__getValue();\n          }\n        } else if (value instanceof AnimatedEvent) {\n          props[key] = value.__getHandler();\n        } else {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getAnimatedValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this._animatedView) {\n        this.__disconnectAnimatedView();\n      }\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n        for (var key in this._props) {\n          var value = this._props[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n        if (this._animatedView) {\n          this.__connectAnimatedView();\n        }\n      }\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      if (this.__isNative) {\n        this.__connectAnimatedView();\n      }\n    }\n  }, {\n    key: \"__connectAnimatedView\",\n    value: function __connectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__disconnectAnimatedView\",\n    value: function __disconnectAnimatedView() {\n      invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__restoreDefaultValues\",\n    value: function __restoreDefaultValues() {\n      if (this.__isNative) {\n        NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var propsConfig = {};\n      for (var propKey in this._props) {\n        var value = this._props[propKey];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n          propsConfig[propKey] = value.__getNativeTag();\n        }\n      }\n      return {\n        type: 'props',\n        props: propsConfig\n      };\n    }\n  }]);\n  return AnimatedProps;\n}(AnimatedNode);\nexport default AnimatedProps;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"names":["_objectSpread","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","findNodeHandle","invariant","AnimatedProps","props","callback","style","_props","_callback","__attach","key","value","__isNative","__getValue","__getHandler","__getAnimatedValue","__addChild","_animatedView","__disconnectAnimatedView","__removeChild","__makeNative","__connectAnimatedView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","restoreDefaultValues","propsConfig","propKey","type"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;"]},"metadata":{},"sourceType":"module"}