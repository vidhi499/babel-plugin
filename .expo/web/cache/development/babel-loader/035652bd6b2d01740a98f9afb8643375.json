{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get(\"window\"),\n        width = _Dimensions$get.width,\n        height = _Dimensions$get.height,\n        fontScale = _Dimensions$get.fontScale,\n        scale = _Dimensions$get.scale;\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get(\"screen\"),\n        width1 = _Dimensions$get2.width,\n        height1 = _Dimensions$get2.height,\n        fontScale1 = _Dimensions$get2.fontScale,\n        scale1 = _Dimensions$get2.scale;\n      return {\n        width: width1 * scale1,\n        height: height1 * scale1,\n        scale: scale1,\n        fontScale: fontScale1\n      };\n    }\n  },\n  get locale() {\n    if (_canUseDom.default) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n  get totalMemory() {\n    return _canUseDom.default ? navigator.deviceMemory : undefined;\n  },\n  get userAgent() {\n    return _canUseDom.default ? navigator.userAgent : \"\";\n  }\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/DeviceInfo/index.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_Dimensions","_canUseDom","DeviceInfo","Dimensions","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent","_default","module"],"mappings":"AAAA,YAAA;;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,WAAAA,GAAcL,sBAAAA,CAAuBC,OAAAA,iBAAQ,CAAA;AAEjD,IAAIK,UAAAA,GAAaN,sBAAAA,CAAuBC,OAAAA,2BAAQ,CAAA;AAUhD,IAAIM,UAAAA,GAAa;EACfC,UAAAA,EAAY;IACV,IAAIC,oBAAAA,GAAuB;MACzB,IAAIC,eAAAA,GAAkBL,WAAAA,CAAYH,OAAO,CAACS,GAAG,CAAC,QAAA,CAAA;QAC1CC,KAAAA,GAAQF,eAAAA,CAAgBE,KAAK;QAC7BC,MAAAA,GAASH,eAAAA,CAAgBG,MAAM;QAC/BC,SAAAA,GAAYJ,eAAAA,CAAgBI,SAAS;QACrCC,KAAAA,GAAQL,eAAAA,CAAgBK,KAAK;MAEjC,OAAO;QACLH,KAAAA,EAAOA,KAAAA,GAAQG,KAAAA;QACfF,MAAAA,EAAQA,MAAAA,GAASE,KAAAA;QACjBA,KAAAA,EAAAA,KAAAA;QACAD,SAAAA,EAAAA;MACF,CAAA;IACF,CAAA;IAEA,IAAIE,oBAAAA,GAAuB;MACzB,IAAIC,gBAAAA,GAAmBZ,WAAAA,CAAYH,OAAO,CAACS,GAAG,CAAC,QAAA,CAAA;QAC3CC,MAAAA,GAAQK,gBAAAA,CAAiBL,KAAK;QAC9BC,OAAAA,GAASI,gBAAAA,CAAiBJ,MAAM;QAChCC,UAAAA,GAAYG,gBAAAA,CAAiBH,SAAS;QACtCC,MAAAA,GAAQE,gBAAAA,CAAiBF,KAAK;MAElC,OAAO;QACLH,KAAAA,EAAOA,MAAAA,GAAQG,MAAAA;QACfF,MAAAA,EAAQA,OAAAA,GAASE,MAAAA;QACjBA,KAAAA,EAAAA,MAAAA;QACAD,SAAAA,EAAAA;MACF,CAAA;IACF;EAEF,CAAA;EAEA,IAAII,MAAAA,GAAS;IACX,IAAIZ,UAAAA,CAAWJ,OAAO,EAAE;MACtB,IAAIiB,SAAAA,CAAUC,SAAS,EAAE;QACvB,OAAOD,SAAAA,CAAUC,SAAS,CAAC,CAAA,CAAE;MAC/B,CAAA,MAAO;QACL,OAAOD,SAAAA,CAAUE,QAAQ;MAC3B;IACF;EACF,CAAA;EAEA,IAAIC,WAAAA,GAAc;IAEhB,OAAOhB,UAAAA,CAAWJ,OAAO,GAAGiB,SAAAA,CAAUI,YAAY,GAAGC,SAAS;EAChE,CAAA;EAEA,IAAIC,SAAAA,GAAY;IACd,OAAOnB,UAAAA,CAAWJ,OAAO,GAAGiB,SAAAA,CAAUM,SAAS,GAAG,EAAE;EACtD;AAEF,CAAA;AACA,IAAIC,QAAAA,GAAWnB,UAAAA;AACfJ,OAAAA,CAAQD,OAAO,GAAGwB,QAAAA;AAClBC,MAAAA,CAAOxB,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nvar _canUseDom = _interopRequireDefault(require(\"../../modules/canUseDom\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_canUseDom.default) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return _canUseDom.default ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _canUseDom.default ? navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}