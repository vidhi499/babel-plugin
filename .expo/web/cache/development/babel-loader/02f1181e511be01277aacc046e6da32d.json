{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport createElement from \"../createElement\";\nimport * as forwardedProps from \"../../modules/forwardedProps\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../modules/useElementLayout\";\nimport useLayoutEffect from \"../../modules/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport useResponderEvents from \"../../modules/useResponderEvents\";\nimport { getLocaleDirection, useLocaleContext } from \"../../modules/useLocale\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar focusTimeout = null;\nvar TextInput = _s(React.forwardRef(_c = _s(function (props, forwardedRef) {\n  _s();\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    returnKeyType = props.returnKeyType,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n    case 'phone-pad':\n      type = 'tel';\n      break;\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n    case 'url':\n      type = 'url';\n      break;\n    default:\n      type = 'text';\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var hostNode = e.target;\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n      if (selectTextOnFocus) {\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(function () {\n          return hostNode.blur();\n        }, 0);\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var _useLocaleContext = useLocaleContext(),\n    contextDirection = _useLocaleContext.direction;\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection: writingDirection\n  });\n  return element;\n}, \"dL5kQoNc+VO2Co2cKTcE85SiDMU=\", false, function () {\n  return [useElementLayout, useResponderEvents, useLocaleContext, usePlatformMethods, useMergeRefs];\n})), \"dL5kQoNc+VO2Co2cKTcE85SiDMU=\", false, function () {\n  return [useElementLayout, useResponderEvents, useLocaleContext, usePlatformMethods, useMergeRefs];\n});\n_c2 = TextInput;\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"TextInput$React.forwardRef\");\n$RefreshReg$(_c2, \"TextInput\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/TextInput/index.js"],"names":["React","createElement","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","getLocaleDirection","useLocaleContext","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","Object","assign","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","value","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","_useLocaleContext","contextDirection","direction","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","style","styles","textinput$raw","platformMethodsRef","setRef","ref","langDirection","componentDirection","writingDirection","element","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList); // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(() => hostNode.blur(), 0);\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off'; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}