{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = createResponderEvent;\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../../modules/getBoundingClientRect\"));\nvar emptyFunction = function emptyFunction() {};\nvar emptyObject = {};\nvar emptyArray = [];\nfunction normalizeIdentifier(identifier) {\n  return identifier > 20 ? identifier % 20 : identifier;\n}\nfunction createResponderEvent(domEvent, responderTouchHistoryStore) {\n  var rect;\n  var propagationWasStopped = false;\n  var changedTouches;\n  var touches;\n  var domEventChangedTouches = domEvent.changedTouches;\n  var domEventType = domEvent.type;\n  var metaKey = domEvent.metaKey === true;\n  var shiftKey = domEvent.shiftKey === true;\n  var force = domEventChangedTouches && domEventChangedTouches[0].force || 0;\n  var identifier = normalizeIdentifier(domEventChangedTouches && domEventChangedTouches[0].identifier || 0);\n  var clientX = domEventChangedTouches && domEventChangedTouches[0].clientX || domEvent.clientX;\n  var clientY = domEventChangedTouches && domEventChangedTouches[0].clientY || domEvent.clientY;\n  var pageX = domEventChangedTouches && domEventChangedTouches[0].pageX || domEvent.pageX;\n  var pageY = domEventChangedTouches && domEventChangedTouches[0].pageY || domEvent.pageY;\n  var preventDefault = typeof domEvent.preventDefault === \"function\" ? domEvent.preventDefault.bind(domEvent) : emptyFunction;\n  var timestamp = domEvent.timeStamp;\n  function normalizeTouches(touches) {\n    return Array.prototype.slice.call(touches).map(function (touch) {\n      return {\n        force: touch.force,\n        identifier: normalizeIdentifier(touch.identifier),\n        get locationX() {\n          return locationX(touch.clientX);\n        },\n        get locationY() {\n          return locationY(touch.clientY);\n        },\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        target: touch.target,\n        timestamp: timestamp\n      };\n    });\n  }\n  if (domEventChangedTouches != null) {\n    changedTouches = normalizeTouches(domEventChangedTouches);\n    touches = normalizeTouches(domEvent.touches);\n  } else {\n    var emulatedTouches = [{\n      force: force,\n      identifier: identifier,\n      get locationX() {\n        return locationX(clientX);\n      },\n      get locationY() {\n        return locationY(clientY);\n      },\n      pageX: pageX,\n      pageY: pageY,\n      target: domEvent.target,\n      timestamp: timestamp\n    }];\n    changedTouches = emulatedTouches;\n    touches = domEventType === \"mouseup\" || domEventType === \"dragstart\" ? emptyArray : emulatedTouches;\n  }\n  var responderEvent = {\n    bubbles: true,\n    cancelable: true,\n    currentTarget: null,\n    defaultPrevented: domEvent.defaultPrevented,\n    dispatchConfig: emptyObject,\n    eventPhase: domEvent.eventPhase,\n    isDefaultPrevented: function isDefaultPrevented() {\n      return domEvent.defaultPrevented;\n    },\n    isPropagationStopped: function isPropagationStopped() {\n      return propagationWasStopped;\n    },\n    isTrusted: domEvent.isTrusted,\n    nativeEvent: {\n      altKey: false,\n      ctrlKey: false,\n      metaKey: metaKey,\n      shiftKey: shiftKey,\n      changedTouches: changedTouches,\n      force: force,\n      identifier: identifier,\n      get locationX() {\n        return locationX(clientX);\n      },\n      get locationY() {\n        return locationY(clientY);\n      },\n      pageX: pageX,\n      pageY: pageY,\n      target: domEvent.target,\n      timestamp: timestamp,\n      touches: touches,\n      type: domEventType\n    },\n    persist: emptyFunction,\n    preventDefault: preventDefault,\n    stopPropagation: function stopPropagation() {\n      propagationWasStopped = true;\n    },\n    target: domEvent.target,\n    timeStamp: timestamp,\n    touchHistory: responderTouchHistoryStore.touchHistory\n  };\n  function locationX(x) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n    if (rect) {\n      return x - rect.left;\n    }\n  }\n  function locationY(y) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n    if (rect) {\n      return y - rect.top;\n    }\n  }\n  return responderEvent;\n}\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/useResponderEvents/createResponderEvent.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","createResponderEvent","_getBoundingClientRect","emptyFunction","emptyObject","emptyArray","normalizeIdentifier","identifier","domEvent","responderTouchHistoryStore","rect","propagationWasStopped","changedTouches","touches","domEventChangedTouches","domEventType","type","metaKey","shiftKey","force","clientX","clientY","pageX","pageY","preventDefault","bind","timestamp","timeStamp","normalizeTouches","Array","prototype","slice","call","map","touch","locationX","locationY","target","emulatedTouches","responderEvent","bubbles","cancelable","currentTarget","defaultPrevented","dispatchConfig","eventPhase","isDefaultPrevented","isPropagationStopped","isTrusted","nativeEvent","altKey","ctrlKey","persist","stopPropagation","touchHistory","x","left","y","top","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = createResponderEvent;\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../../modules/getBoundingClientRect\"));\n\n/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar emptyFunction = () => {};\n\nvar emptyObject = {};\nvar emptyArray = [];\n/**\n * Safari produces very large identifiers that would cause the `touchBank` array\n * length to be so large as to crash the browser, if not normalized like this.\n * In the future the `touchBank` should use an object/map instead.\n */\n\nfunction normalizeIdentifier(identifier) {\n  return identifier > 20 ? identifier % 20 : identifier;\n}\n/**\n * Converts a native DOM event to a ResponderEvent.\n * Mouse events are transformed into fake touch events.\n */\n\n\nfunction createResponderEvent(domEvent, responderTouchHistoryStore) {\n  var rect;\n  var propagationWasStopped = false;\n  var changedTouches;\n  var touches;\n  var domEventChangedTouches = domEvent.changedTouches;\n  var domEventType = domEvent.type;\n  var metaKey = domEvent.metaKey === true;\n  var shiftKey = domEvent.shiftKey === true;\n  var force = domEventChangedTouches && domEventChangedTouches[0].force || 0;\n  var identifier = normalizeIdentifier(domEventChangedTouches && domEventChangedTouches[0].identifier || 0);\n  var clientX = domEventChangedTouches && domEventChangedTouches[0].clientX || domEvent.clientX;\n  var clientY = domEventChangedTouches && domEventChangedTouches[0].clientY || domEvent.clientY;\n  var pageX = domEventChangedTouches && domEventChangedTouches[0].pageX || domEvent.pageX;\n  var pageY = domEventChangedTouches && domEventChangedTouches[0].pageY || domEvent.pageY;\n  var preventDefault = typeof domEvent.preventDefault === 'function' ? domEvent.preventDefault.bind(domEvent) : emptyFunction;\n  var timestamp = domEvent.timeStamp;\n\n  function normalizeTouches(touches) {\n    return Array.prototype.slice.call(touches).map(touch => {\n      return {\n        force: touch.force,\n        identifier: normalizeIdentifier(touch.identifier),\n\n        get locationX() {\n          return locationX(touch.clientX);\n        },\n\n        get locationY() {\n          return locationY(touch.clientY);\n        },\n\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        target: touch.target,\n        timestamp\n      };\n    });\n  }\n\n  if (domEventChangedTouches != null) {\n    changedTouches = normalizeTouches(domEventChangedTouches);\n    touches = normalizeTouches(domEvent.touches);\n  } else {\n    var emulatedTouches = [{\n      force,\n      identifier,\n\n      get locationX() {\n        return locationX(clientX);\n      },\n\n      get locationY() {\n        return locationY(clientY);\n      },\n\n      pageX,\n      pageY,\n      target: domEvent.target,\n      timestamp\n    }];\n    changedTouches = emulatedTouches;\n    touches = domEventType === 'mouseup' || domEventType === 'dragstart' ? emptyArray : emulatedTouches;\n  }\n\n  var responderEvent = {\n    bubbles: true,\n    cancelable: true,\n    // `currentTarget` is set before dispatch\n    currentTarget: null,\n    defaultPrevented: domEvent.defaultPrevented,\n    dispatchConfig: emptyObject,\n    eventPhase: domEvent.eventPhase,\n\n    isDefaultPrevented() {\n      return domEvent.defaultPrevented;\n    },\n\n    isPropagationStopped() {\n      return propagationWasStopped;\n    },\n\n    isTrusted: domEvent.isTrusted,\n    nativeEvent: {\n      altKey: false,\n      ctrlKey: false,\n      metaKey,\n      shiftKey,\n      changedTouches,\n      force,\n      identifier,\n\n      get locationX() {\n        return locationX(clientX);\n      },\n\n      get locationY() {\n        return locationY(clientY);\n      },\n\n      pageX,\n      pageY,\n      target: domEvent.target,\n      timestamp,\n      touches,\n      type: domEventType\n    },\n    persist: emptyFunction,\n    preventDefault,\n\n    stopPropagation() {\n      propagationWasStopped = true;\n    },\n\n    target: domEvent.target,\n    timeStamp: timestamp,\n    touchHistory: responderTouchHistoryStore.touchHistory\n  }; // Using getters and functions serves two purposes:\n  // 1) The value of `currentTarget` is not initially available.\n  // 2) Measuring the clientRect may cause layout jank and should only be done on-demand.\n\n  function locationX(x) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n\n    if (rect) {\n      return x - rect.left;\n    }\n  }\n\n  function locationY(y) {\n    rect = rect || (0, _getBoundingClientRect.default)(responderEvent.currentTarget);\n\n    if (rect) {\n      return y - rect.top;\n    }\n  }\n\n  return responderEvent;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}