{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Appearance from \"../Appearance\";\nexport default function useColorScheme() {\n  _s();\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n    colorScheme = _React$useState[0],\n    setColorScheme = _React$useState[1];\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n    var _Appearance$addChange = Appearance.addChangeListener(listener),\n      remove = _Appearance$addChange.remove;\n    return remove;\n  });\n  return colorScheme;\n}\n_s(useColorScheme, \"aTuZRIhKecN31J0xCqfmGAG2FHc=\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/useColorScheme/index.js"],"names":["React","Appearance","useColorScheme","_React$useState","useState","getColorScheme","colorScheme","setColorScheme","useEffect","listener","appearance","_Appearance$addChange","addChangeListener","remove"],"mappings":"AASA,IAAA,EAAA,GAAA,YAAA,EAAA;AAAA,OAAA,KAAYA,KAAAA,MAAW,OAAA;AACvB,OAAOC,UAAAA;AACP,eAAe,SAASC,cAAAA,GAAiB;;EACvC,IAAIC,eAAAA,GAAkBH,KAAAA,CAAMI,QAAQ,CAACH,UAAAA,CAAWI,cAAc,EAAA,CAAA;IAC1DC,WAAAA,GAAcH,eAAe,CAAC,CAAA,CAAE;IAChCI,cAAAA,GAAiBJ,eAAe,CAAC,CAAA,CAAE;EAEvCH,KAAAA,CAAMQ,SAAS,CAAC,YAAM;IACpB,SAASC,QAAAA,CAASC,UAAU,EAAE;MAC5BH,cAAAA,CAAeG,UAAAA,CAAWJ,WAAW,CAAA;IACvC;IAEA,IAAIK,qBAAAA,GAAwBV,UAAAA,CAAWW,iBAAiB,CAACH,QAAAA,CAAAA;MACrDI,MAAAA,GAASF,qBAAAA,CAAsBE,MAAM;IAEzC,OAAOA,MAAAA;EACT,CAAA,CAAA;EACA,OAAOP,WAAAA;AACT;GAhBwBJ,cAAAA,EAAAA,8BAAAA,CAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport Appearance from '../Appearance';\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(() => {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    var _Appearance$addChange = Appearance.addChangeListener(listener),\n        remove = _Appearance$addChange.remove;\n\n    return remove;\n  });\n  return colorScheme;\n}"]},"metadata":{},"sourceType":"module"}