{"ast":null,"code":"import * as React from \"react\";\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n    color = props.color,\n    disabled = props.disabled,\n    onPress = props.onPress,\n    testID = props.testID,\n    title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = \"Button\";\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#2196F3\",\n    borderRadius: 2\n  },\n  text: {\n    color: \"#fff\",\n    fontWeight: \"500\",\n    padding: 8,\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  },\n  buttonDisabled: {\n    backgroundColor: \"#dfdfdf\"\n  },\n  textDisabled: {\n    color: \"#a1a1a1\"\n  }\n});\nexport default Button;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["React","StyleSheet","TouchableOpacity","Text","Button","forwardRef","props","forwardedRef","accessibilityLabel","color","disabled","onPress","testID","title","createElement","accessibilityRole","focusable","ref","style","styles","button","backgroundColor","buttonDisabled","text","textDisabled","displayName","create","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":"AASA,OAAA,KAAYA,KAAAA,MAAW,OAAA;AACvB,OAAOC,UAAAA;AACP,OAAOC,gBAAAA;AACP,OAAOC,IAAAA;AACP,IAAIC,MAAAA,GAAsBJ,KAAAA,CAAMK,UAAU,CAAC,UAACC,KAAAA,EAAOC,YAAAA,EAAiB;EAClE,IAAIC,kBAAAA,GAAqBF,KAAAA,CAAME,kBAAkB;IAC7CC,KAAAA,GAAQH,KAAAA,CAAMG,KAAK;IACnBC,QAAAA,GAAWJ,KAAAA,CAAMI,QAAQ;IACzBC,OAAAA,GAAUL,KAAAA,CAAMK,OAAO;IACvBC,MAAAA,GAASN,KAAAA,CAAMM,MAAM;IACrBC,KAAAA,GAAQP,KAAAA,CAAMO,KAAK;EACvB,OAAoBb,KAAAA,CAAMc,aAAa,CAACZ,gBAAAA,EAAkB;IACxDM,kBAAAA,EAAoBA,kBAAAA;IACpBO,iBAAAA,EAAmB,QAAA;IACnBL,QAAAA,EAAUA,QAAAA;IACVM,SAAAA,EAAW,CAACN,QAAAA;IACZC,OAAAA,EAASA,OAAAA;IACTM,GAAAA,EAAKV,YAAAA;IACLW,KAAAA,EAAO,CAACC,MAAAA,CAAOC,MAAM,EAAEX,KAAAA,IAAS;MAC9BY,eAAAA,EAAiBZ;IACnB,CAAA,EAAGC,QAAAA,IAAYS,MAAAA,CAAOG,cAAc,CAAC;IACrCV,MAAAA,EAAQA;EACV,CAAA,EAAgBZ,KAAAA,CAAMc,aAAa,CAACX,IAAAA,EAAM;IACxCe,KAAAA,EAAO,CAACC,MAAAA,CAAOI,IAAI,EAAEb,QAAAA,IAAYS,MAAAA,CAAOK,YAAY;EACtD,CAAA,EAAGX,KAAAA,CAAAA,CAAAA;AACL,CAAA,CAAA;AACAT,MAAAA,CAAOqB,WAAW,GAAG,QAAA;AACrB,IAAIN,MAAAA,GAASlB,UAAAA,CAAWyB,MAAM,CAAC;EAC7BN,MAAAA,EAAQ;IACNC,eAAAA,EAAiB,SAAA;IACjBM,YAAAA,EAAc;EAChB,CAAA;EACAJ,IAAAA,EAAM;IACJd,KAAAA,EAAO,MAAA;IACPmB,UAAAA,EAAY,KAAA;IACZC,OAAAA,EAAS,CAAA;IACTC,SAAAA,EAAW,QAAA;IACXC,aAAAA,EAAe;EACjB,CAAA;EACAT,cAAAA,EAAgB;IACdD,eAAAA,EAAiB;EACnB,CAAA;EACAG,YAAAA,EAAc;IACZf,KAAAA,EAAO;EACT;AACF,CAAA,CAAA;AACA,eAAeL,MAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nvar Button = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return /*#__PURE__*/React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"module"}