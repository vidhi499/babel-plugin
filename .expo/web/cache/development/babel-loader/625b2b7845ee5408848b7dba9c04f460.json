{"ast":null,"code":"var assets = [];\nexport function registerAsset(asset) {\n  return assets.push(asset);\n}\nexport function getAssetByID(assetId) {\n  return assets[assetId - 1];\n}\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/AssetRegistry/index.js"],"names":["assets","registerAsset","asset","push","getAssetByID","assetId"],"mappings":"AAQA,IAAIA,MAAM,GAAG,EAAb;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAGnC,OAAOF,MAAM,CAACG,IAAPH,CAAYE,KAAZF,CAAP;AACD;AACD,OAAO,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;EACpC,OAAOL,MAAM,CAACK,OAAO,GAAG,CAAX,CAAb;AACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar assets = [];\nexport function registerAsset(asset) {\n  // `push` returns new array length, so the first asset will\n  // get id 1 (not 0) to make the value truthy\n  return assets.push(asset);\n}\nexport function getAssetByID(assetId) {\n  return assets[assetId - 1];\n}"]},"metadata":{},"sourceType":"module"}