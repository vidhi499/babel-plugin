{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"children\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onHideUnderlay\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onShowUnderlay\", \"rejectResponderTermination\", \"style\", \"testOnly_pressed\", \"underlayColor\"];\nimport * as React from \"react\";\nimport { useCallback, useMemo, useState, useRef } from \"react\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePressEvents from \"../../modules/usePressEvents\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nfunction createExtraStyles(activeOpacity, underlayColor) {\n  return {\n    child: {\n      opacity: activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.85\n    },\n    underlay: {\n      backgroundColor: underlayColor === undefined ? \"black\" : underlayColor\n    }\n  };\n}\nfunction hasPressHandler(props) {\n  return props.onPress != null || props.onPressIn != null || props.onPressOut != null || props.onLongPress != null;\n}\nfunction TouchableHighlight(props, forwardedRef) {\n  var activeOpacity = props.activeOpacity,\n    children = props.children,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onHideUnderlay = props.onHideUnderlay,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    onShowUnderlay = props.onShowUnderlay,\n    rejectResponderTermination = props.rejectResponderTermination,\n    style = props.style,\n    testOnly_pressed = props.testOnly_pressed,\n    underlayColor = props.underlayColor,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var _useState = useState(testOnly_pressed === true ? createExtraStyles(activeOpacity, underlayColor) : null),\n    extraStyles = _useState[0],\n    setExtraStyles = _useState[1];\n  var showUnderlay = useCallback(function () {\n    if (!hasPressHandler(props)) {\n      return;\n    }\n    setExtraStyles(createExtraStyles(activeOpacity, underlayColor));\n    if (onShowUnderlay != null) {\n      onShowUnderlay();\n    }\n  }, [activeOpacity, onShowUnderlay, props, underlayColor]);\n  var hideUnderlay = useCallback(function () {\n    if (testOnly_pressed === true) {\n      return;\n    }\n    if (hasPressHandler(props)) {\n      setExtraStyles(null);\n      if (onHideUnderlay != null) {\n        onHideUnderlay();\n      }\n    }\n  }, [onHideUnderlay, props, testOnly_pressed]);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: function onPressStart(event) {\n        showUnderlay();\n        if (onPressIn != null) {\n          onPressIn(event);\n        }\n      },\n      onPressEnd: function onPressEnd(event) {\n        hideUnderlay();\n        if (onPressOut != null) {\n          onPressOut(event);\n        }\n      }\n    };\n  }, [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, showUnderlay, hideUnderlay]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var child = React.Children.only(children);\n  return React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? \"none\" : undefined,\n    ref: setRef,\n    style: [styles.root, style, !disabled && styles.actionable, extraStyles && extraStyles.underlay]\n  }), React.cloneElement(child, {\n    style: StyleSheet.compose(child.props.style, extraStyles && extraStyles.child)\n  }));\n}\nvar styles = StyleSheet.create({\n  root: {\n    userSelect: \"none\"\n  },\n  actionable: {\n    cursor: \"pointer\",\n    touchAction: \"manipulation\"\n  }\n});\nvar MemoedTouchableHighlight = React.memo(React.forwardRef(TouchableHighlight));\nMemoedTouchableHighlight.displayName = \"TouchableHighlight\";\nexport default MemoedTouchableHighlight;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/TouchableHighlight/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useCallback","useMemo","useState","useRef","useMergeRefs","usePressEvents","StyleSheet","View","createExtraStyles","activeOpacity","underlayColor","child","opacity","underlay","backgroundColor","undefined","hasPressHandler","props","onPress","onPressIn","onPressOut","onLongPress","TouchableHighlight","forwardedRef","children","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onHideUnderlay","onShowUnderlay","rejectResponderTermination","style","testOnly_pressed","rest","hostRef","setRef","_useState","extraStyles","setExtraStyles","showUnderlay","hideUnderlay","pressConfig","cancelable","delayPressStart","delayPressEnd","onPressStart","event","onPressEnd","pressEventHandlers","Children","only","createElement","accessibilityDisabled","pointerEvents","ref","styles","root","actionable","cloneElement","compose","create","userSelect","cursor","touchAction","MemoedTouchableHighlight","memo","forwardRef","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"children\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onHideUnderlay\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onShowUnderlay\", \"rejectResponderTermination\", \"style\", \"testOnly_pressed\", \"underlayColor\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\nfunction createExtraStyles(activeOpacity, underlayColor) {\n  return {\n    child: {\n      opacity: activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.85\n    },\n    underlay: {\n      backgroundColor: underlayColor === undefined ? 'black' : underlayColor\n    }\n  };\n}\n\nfunction hasPressHandler(props) {\n  return props.onPress != null || props.onPressIn != null || props.onPressOut != null || props.onLongPress != null;\n}\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n */\n\n\nfunction TouchableHighlight(props, forwardedRef) {\n  var activeOpacity = props.activeOpacity,\n      children = props.children,\n      delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onHideUnderlay = props.onHideUnderlay,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      onShowUnderlay = props.onShowUnderlay,\n      rejectResponderTermination = props.rejectResponderTermination,\n      style = props.style,\n      testOnly_pressed = props.testOnly_pressed,\n      underlayColor = props.underlayColor,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n\n  var _useState = useState(testOnly_pressed === true ? createExtraStyles(activeOpacity, underlayColor) : null),\n      extraStyles = _useState[0],\n      setExtraStyles = _useState[1];\n\n  var showUnderlay = useCallback(() => {\n    if (!hasPressHandler(props)) {\n      return;\n    }\n\n    setExtraStyles(createExtraStyles(activeOpacity, underlayColor));\n\n    if (onShowUnderlay != null) {\n      onShowUnderlay();\n    }\n  }, [activeOpacity, onShowUnderlay, props, underlayColor]);\n  var hideUnderlay = useCallback(() => {\n    if (testOnly_pressed === true) {\n      return;\n    }\n\n    if (hasPressHandler(props)) {\n      setExtraStyles(null);\n\n      if (onHideUnderlay != null) {\n        onHideUnderlay();\n      }\n    }\n  }, [onHideUnderlay, props, testOnly_pressed]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n\n    onPressStart(event) {\n      showUnderlay();\n\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n\n    onPressEnd(event) {\n      hideUnderlay();\n\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, showUnderlay, hideUnderlay]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var child = React.Children.only(children);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'none' : undefined,\n    ref: setRef,\n    style: [styles.root, style, !disabled && styles.actionable, extraStyles && extraStyles.underlay]\n  }), /*#__PURE__*/React.cloneElement(child, {\n    style: StyleSheet.compose(child.props.style, extraStyles && extraStyles.child)\n  }));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableHighlight = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableHighlight));\nMemoedTouchableHighlight.displayName = 'TouchableHighlight';\nexport default MemoedTouchableHighlight;"]},"metadata":{},"sourceType":"module"}