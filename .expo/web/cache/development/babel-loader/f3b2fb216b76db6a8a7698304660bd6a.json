{"ast":null,"code":"import canUseDOM from \"../../../modules/canUseDom\";\nexport default function createCSSStyleSheet(id, rootNode, textContent) {\n  if (canUseDOM) {\n    var root = rootNode != null ? rootNode : document;\n    var element = root.getElementById(id);\n    if (element == null) {\n      element = document.createElement(\"style\");\n      element.setAttribute(\"id\", id);\n      if (typeof textContent === \"string\") {\n        element.appendChild(document.createTextNode(textContent));\n      }\n      if (root instanceof ShadowRoot) {\n        root.insertBefore(element, root.firstChild);\n      } else {\n        var head = root.head;\n        if (head) {\n          head.insertBefore(element, head.firstChild);\n        }\n      }\n    }\n    return element.sheet;\n  } else {\n    return null;\n  }\n}\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/dom/createCSSStyleSheet.js"],"names":["canUseDOM","createCSSStyleSheet","id","rootNode","textContent","root","document","element","getElementById","createElement","setAttribute","appendChild","createTextNode","ShadowRoot","insertBefore","firstChild","head","sheet"],"mappings":"AAQA,OAAOA,SAAAA;AAEP,eAAe,SAASC,mBAAAA,CAAoBC,EAAE,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EACrE,IAAIJ,SAAAA,EAAW;IACb,IAAIK,IAAAA,GAAOF,QAAAA,IAAY,IAAI,GAAGA,QAAAA,GAAWG,QAAQ;IACjD,IAAIC,OAAAA,GAAUF,IAAAA,CAAKG,cAAc,CAACN,EAAAA,CAAAA;IAElC,IAAIK,OAAAA,IAAW,IAAI,EAAE;MACnBA,OAAAA,GAAUD,QAAAA,CAASG,aAAa,CAAC,OAAA,CAAA;MACjCF,OAAAA,CAAQG,YAAY,CAAC,IAAA,EAAMR,EAAAA,CAAAA;MAE3B,IAAI,OAAOE,WAAAA,KAAgB,QAAA,EAAU;QACnCG,OAAAA,CAAQI,WAAW,CAACL,QAAAA,CAASM,cAAc,CAACR,WAAAA,CAAAA,CAAAA;MAC9C;MAEA,IAAIC,IAAAA,YAAgBQ,UAAAA,EAAY;QAC9BR,IAAAA,CAAKS,YAAY,CAACP,OAAAA,EAASF,IAAAA,CAAKU,UAAU,CAAA;MAC5C,CAAA,MAAO;QACL,IAAIC,IAAAA,GAAOX,IAAAA,CAAKW,IAAI;QAEpB,IAAIA,IAAAA,EAAM;UACRA,IAAAA,CAAKF,YAAY,CAACP,OAAAA,EAASS,IAAAA,CAAKD,UAAU,CAAA;QAC5C;MACF;IACF;IAGA,OAAOR,OAAAA,CAAQU,KAAK;EACtB,CAAA,MAAO;IACL,OAAO,IAAI;EACb;AACF","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../../../modules/canUseDom'; // $FlowFixMe: HTMLStyleElement is incorrectly typed - https://github.com/facebook/flow/issues/2696\n\nexport default function createCSSStyleSheet(id, rootNode, textContent) {\n  if (canUseDOM) {\n    var root = rootNode != null ? rootNode : document;\n    var element = root.getElementById(id);\n\n    if (element == null) {\n      element = document.createElement('style');\n      element.setAttribute('id', id);\n\n      if (typeof textContent === 'string') {\n        element.appendChild(document.createTextNode(textContent));\n      }\n\n      if (root instanceof ShadowRoot) {\n        root.insertBefore(element, root.firstChild);\n      } else {\n        var head = root.head;\n\n        if (head) {\n          head.insertBefore(element, head.firstChild);\n        }\n      }\n    } // $FlowFixMe: HTMLElement is incorrectly typed\n\n\n    return element.sheet;\n  } else {\n    return null;\n  }\n}"]},"metadata":{},"sourceType":"module"}