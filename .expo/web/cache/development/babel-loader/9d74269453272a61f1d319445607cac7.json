{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport Batchinator from \"../Batchinator\";\nimport FillRateHelper from \"../FillRateHelper\";\nimport findNodeHandle from \"../../../exports/findNodeHandle\";\nimport RefreshControl from \"../../../exports/RefreshControl\";\nimport ScrollView from \"../../../exports/ScrollView\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport View from \"../../../exports/View\";\nimport ViewabilityHelper from \"../ViewabilityHelper\";\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from \"../infoLog\";\nimport invariant from \"fbjs/lib/invariant\";\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from \"../VirtualizeUtils\";\nimport * as React from \"react\";\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nvar __DEV__ = \"development\" !== \"production\";\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = \"\";\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n  var _super = _createSuper(VirtualizedList);\n  function VirtualizedList(_props) {\n    var _this2;\n    _classCallCheck(this, VirtualizedList);\n    var _this$props$updateCel;\n    _this2 = _super.call(this, _props);\n    _this2._getScrollMetrics = function () {\n      return _this2._scrollMetrics;\n    };\n    _this2._getOutermostParentListRef = function () {\n      if (_this2._isNestedWithSameOrientation()) {\n        return _this2.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this2);\n      }\n    };\n    _this2._getNestedChildState = function (key) {\n      var existingChildData = _this2._nestedChildLists.get(key);\n      return existingChildData && existingChildData.state;\n    };\n    _this2._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this2._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n      _this2._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n      var existingChildData = _this2._nestedChildLists.get(childList.key);\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error(\"A VirtualizedList contains a cell which itself contains \" + \"more than one VirtualizedList of the same orientation as the parent \" + \"list. You must pass a unique listKey prop to each sibling list.\\n\\n\" + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n      _this2._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n      if (_this2._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this2._unregisterAsNestedChild = function (childList) {\n      _this2._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n    _this2._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this2._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this2._getSpacerKey = function (isVertical) {\n      return isVertical ? \"height\" : \"width\";\n    };\n    _this2._averageCellLength = 0;\n    _this2._cellKeysToChildListKeys = new Map();\n    _this2._cellRefs = {};\n    _this2._frames = {};\n    _this2._footerLength = 0;\n    _this2._hasDoneInitialScroll = false;\n    _this2._hasInteracted = false;\n    _this2._hasMore = false;\n    _this2._hasWarned = {};\n    _this2._headerLength = 0;\n    _this2._hiPriInProgress = false;\n    _this2._highestMeasuredFrameIndex = 0;\n    _this2._indicesToKeys = new Map();\n    _this2._nestedChildLists = new Map();\n    _this2._offsetFromParentVirtualizedList = 0;\n    _this2._prevParentOffset = 0;\n    _this2._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this2._scrollRef = null;\n    _this2._sentEndForContentLength = 0;\n    _this2._totalCellLength = 0;\n    _this2._totalCellsMeasured = 0;\n    _this2._viewabilityTuples = [];\n    _this2._captureScrollRef = function (ref) {\n      _this2._scrollRef = ref;\n    };\n    _this2._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this2._isNestedWithSameOrientation()) {\n        return React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === \"boolean\", \"`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `\" + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : \"undefined\") + \"`\");\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(ScrollView, props);\n      }\n    };\n    _this2._onCellUnmount = function (cellKey) {\n      var curr = _this2._frames[cellKey];\n      if (curr) {\n        _this2._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this2._onLayout = function (e) {\n      if (_this2._isNestedWithSameOrientation()) {\n        _this2.measureLayoutRelativeToContainingList();\n      } else {\n        _this2._scrollMetrics.visibleLength = _this2._selectLength(e.nativeEvent.layout);\n      }\n      _this2.props.onLayout && _this2.props.onLayout(e);\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEndReached();\n    };\n    _this2._onLayoutEmpty = function (e) {\n      _this2.props.onLayout && _this2.props.onLayout(e);\n    };\n    _this2._onLayoutFooter = function (e) {\n      _this2._triggerRemeasureForChildListsInCell(_this2._getFooterCellKey());\n      _this2._footerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onLayoutHeader = function (e) {\n      _this2._headerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this2.props.initialScrollIndex != null && _this2.props.initialScrollIndex > 0 && !_this2._hasDoneInitialScroll) {\n        if (_this2.props.contentOffset == null) {\n          _this2.scrollToIndex({\n            animated: false,\n            index: _this2.props.initialScrollIndex\n          });\n        }\n        _this2._hasDoneInitialScroll = true;\n      }\n      if (_this2.props.onContentSizeChange) {\n        _this2.props.onContentSizeChange(width, height);\n      }\n      _this2._scrollMetrics.contentLength = _this2._selectLength({\n        height: height,\n        width: width\n      });\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEndReached();\n    };\n    _this2._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this2._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      var contentLength = _this2._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this2._onScroll = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n      if (_this2.props.onScroll) {\n        _this2.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this2._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this2._selectLength(e.nativeEvent.contentSize);\n      var offset = _this2._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      if (_this2._isNestedWithSameOrientation()) {\n        if (_this2._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this2._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this2._scrollMetrics.timestamp ? Math.max(1, timestamp - _this2._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this2._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this2._hasWarned.perf) {\n        infoLog(\"VirtualizedList: You have a large list that is slow to update - make sure your \" + \"renderItem function renders components that follow React performance best practices \" + \"like PureComponent, shouldComponentUpdate, etc.\", {\n          dt: dt,\n          prevDt: _this2._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this2._hasWarned.perf = true;\n      }\n      _this2._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n      _this2._updateViewableItems(_this2.props.data);\n      if (!_this2.props) {\n        return;\n      }\n      _this2._maybeCallOnEndReached();\n      if (velocity !== 0) {\n        _this2._fillRateHelper.activate();\n      }\n      _this2._computeBlankness();\n      _this2._scheduleCellsToRenderUpdate();\n    };\n    _this2._onScrollBeginDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n      _this2._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this2._hasInteracted = true;\n      _this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e);\n    };\n    _this2._onScrollEndDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this2._scrollMetrics.velocity = _this2._selectOffset(velocity);\n      }\n      _this2._computeBlankness();\n      _this2.props.onScrollEndDrag && _this2.props.onScrollEndDrag(e);\n    };\n    _this2._onMomentumScrollBegin = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n      _this2.props.onMomentumScrollBegin && _this2.props.onMomentumScrollBegin(e);\n    };\n    _this2._onMomentumScrollEnd = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n      _this2._scrollMetrics.velocity = 0;\n      _this2._computeBlankness();\n      _this2.props.onMomentumScrollEnd && _this2.props.onMomentumScrollEnd(e);\n    };\n    _this2._updateCellsToRender = function () {\n      var _this$props3 = _this2.props,\n        data = _this$props3.data,\n        getItemCount = _this$props3.getItemCount,\n        _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n      var isVirtualizationDisabled = _this2._isVirtualizationDisabled();\n      _this2._updateViewableItems(data);\n      if (!data) {\n        return;\n      }\n      _this2.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this2._scrollMetrics,\n          contentLength = _this$_scrollMetrics.contentLength,\n          offset = _this$_scrollMetrics.offset,\n          visibleLength = _this$_scrollMetrics.visibleLength;\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this2.props.initialScrollIndex || _this2._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this2.props.data, _this2.props.getItemCount, maxToRenderPerBatchOrDefault(_this2.props.maxToRenderPerBatch), windowSizeOrDefault(_this2.props.windowSize), state, _this2._getFrameMetricsApprox, _this2._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(_this2.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n        if (newState && _this2._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this2._indicesToKeys.get(ii);\n            var childListKeys = cellKeyForIndex && _this2._cellKeysToChildListKeys.get(cellKeyForIndex);\n            if (!childListKeys) {\n              continue;\n            }\n            var someChildHasMore = false;\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n              var childList = _this2._nestedChildLists.get(childKey);\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n        return newState;\n      });\n    };\n    _this2._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this2.props,\n        data = _this$props4.data,\n        getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this2._keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n    _this2._getFrameMetricsApprox = function (index) {\n      var frame = _this2._getFrameMetrics(index);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this2.props.getItemLayout;\n        invariant(!getItemLayout, \"Should not have to estimate frames when a measurement metrics function is provided\");\n        return {\n          length: _this2._averageCellLength,\n          offset: _this2._averageCellLength * index\n        };\n      }\n    };\n    _this2._getFrameMetrics = function (index) {\n      var _this$props5 = _this2.props,\n        data = _this$props5.data,\n        getItem = _this$props5.getItem,\n        getItemCount = _this$props5.getItemCount,\n        getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, \"Tried to get frame for out of range index \" + index);\n      var item = getItem(data, index);\n      var frame = item && _this2._frames[_this2._keyExtractor(item, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, \"Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent \" + \"to support native onScroll events with useNativeDriver\");\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, \"VirtualizedList: The windowSize prop must be present and set to a value greater than 0.\");\n    _this2._fillRateHelper = new FillRateHelper(_this2._getFrameMetrics);\n    _this2._updateCellsToRenderBatcher = new Batchinator(_this2._updateCellsToRender, (_this$props$updateCel = _this2.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (_this2.props.viewabilityConfigCallbackPairs) {\n      _this2._viewabilityTuples = _this2.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this2.props.onViewableItemsChanged) {\n      _this2._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this2.props.viewabilityConfig),\n        onViewableItemsChanged: _this2.props.onViewableItemsChanged\n      });\n    }\n    var initialState = {\n      first: _this2.props.initialScrollIndex || 0,\n      last: Math.min(_this2.props.getItemCount(_this2.props.data), (_this2.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(_this2.props.initialNumToRender)) - 1\n    };\n    if (_this2._isNestedWithSameOrientation()) {\n      var storedState = _this2.context.getNestedChildState(_this2._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        _this2.state = storedState;\n        _this2._frames = storedState.frames;\n      }\n    }\n    _this2.invertedWheelEventHandler = function (ev) {\n      if (_this2.props.inverted && _this2._scrollRef && _this2._scrollRef.getScrollableNode) {\n        var node = _this2._scrollRef.getScrollableNode();\n        if (_this2.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n        ev.preventDefault();\n      }\n    };\n    _this2.state = initialState;\n    return _this2;\n  }\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      var frame = this._getFrameMetricsApprox(veryLast);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn(\"No scrollTo method provided. This may be because you have two nested \" + \"VirtualizedLists with the same orientation, or because you are \" + \"using a custom component that does not implement scrollTo.\");\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, \"scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, \" + \"otherwise there is no way to know the location of offscreen indices or handle failures.\");\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this._getFrameMetricsApprox(index);\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn(\"No scrollTo method provided. This may be because you have two nested \" + \"VirtualizedLists with the same orientation, or because you are \" + \"using a custom component that does not implement scrollTo.\");\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn(\"No scrollTo method provided. This may be because you have two nested \" + \"VirtualizedLists with the same orientation, or because you are \" + \"using a custom component that does not implement scrollTo.\");\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || \"rootList\";\n    }\n  }, {\n    key: \"_getListKey\",\n    value: function _getListKey() {\n      return this.props.listKey || this._getCellKey();\n    }\n  }, {\n    key: \"_getDebugInfo\",\n    value: function _getDebugInfo() {\n      var _this$context2;\n      return {\n        listKey: this._getListKey(),\n        cellKey: this._getCellKey(),\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n      };\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this._getListKey(),\n          ref: this,\n          parentDebugInfo: this.context.debugInfo\n        });\n      }\n      this.setupWebWheelHandler();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          key: this._getListKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n      this._updateViewableItems(null);\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n      this.teardownWebWheelHandler();\n    }\n  }, {\n    key: \"setupWebWheelHandler\",\n    value: function setupWebWheelHandler() {\n      var _this3 = this;\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().addEventListener(\"wheel\", this.invertedWheelEventHandler);\n      } else {\n        setTimeout(function () {\n          return _this3.setupWebWheelHandler();\n        }, 50);\n        return;\n      }\n    }\n  }, {\n    key: \"teardownWebWheelHandler\",\n    value: function teardownWebWheelHandler() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().removeEventListener(\"wheel\", this.invertedWheelEventHandler);\n      }\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this = this;\n      var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = _this._keyExtractor(item, ii);\n        _this._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        cells.push(React.createElement(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this._onCellUnmount,\n          parentProps: _this.props,\n          ref: function ref(_ref) {\n            _this._cellRefs[key] = _ref;\n          }\n        }));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index) {\n      if (this.props.keyExtractor != null) {\n        return this.props.keyExtractor(item, index);\n      }\n      var key = defaultKeyExtractor(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === \"wrap\") {\n          console.warn(\"`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.\" + \"Consider using `numColumns` with `FlatList` instead.\");\n        }\n      }\n      var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n        cells.push(React.createElement(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + \"-header\",\n          key: \"$header\"\n        }, React.createElement(View, {\n          onLayout: this._onLayoutHeader,\n          style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n        }, element)));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = \"\";\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n        var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_lead\",\n                  style: _defineProperty({}, spacerKey, leadSpace)\n                }));\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_trail\",\n                  style: _defineProperty({}, spacerKey, trailSpace)\n                }));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n            cells.push(React.createElement(View, {\n              key: \"$lead_spacer\",\n              style: _defineProperty({}, spacerKey, firstSpace)\n            }));\n          }\n        }\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn(\"VirtualizedList: missing keys for items, make sure to specify a key or id property on each \" + \"item or provide a custom keyExtractor.\", _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n          var endFrame = this._getFrameMetricsApprox(end);\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(React.createElement(View, {\n            key: \"$tail_spacer\",\n            style: _defineProperty({}, spacerKey, tailSpacerLength)\n          }));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n        cells.push(React.cloneElement(_element, {\n          key: \"$empty\",\n          onLayout: function onLayout(event) {\n            _this4._onLayoutEmpty(event);\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n        cells.push(React.createElement(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\"\n        }, React.createElement(View, {\n          onLayout: this._onLayoutFooter,\n          style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n        }, _element2)));\n      }\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n      var innerRet = React.createElement(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo()\n        }\n      }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells));\n      var ret = innerRet;\n      if (this.props.debug) {\n        return React.createElement(View, {\n          style: styles.debug\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n          var childList = this._nestedChildLists.get(childKey);\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this5 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this5._offsetFromParentVirtualizedList = _this5._selectOffset({\n            x: x,\n            y: y\n          });\n          _this5._scrollMetrics.contentLength = _this5._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this5._convertParentScrollMetrics(_this5.context.getScrollMetrics());\n          var metricsChanged = _this5._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this5._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this5._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this5._scrollMetrics.offset = scrollMetrics.offset;\n            _this5._cellKeysToChildListKeys.forEach(function (childListKeys) {\n              if (childListKeys) {\n                for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                  var childKey = _step3.value;\n                  var childList = _this5._nestedChildLists.get(childKey);\n                  childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + \" offset from its containing VirtualizedList.\");\n        });\n      } catch (error) {\n        console.warn(\"measureLayoutRelativeToContainingList threw an error\", error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + \"-footer\";\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay]\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(View, {\n          key: \"f\" + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }]\n        });\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }]\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }]\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      var scrollingThreshold = onEndReachedThreshold * visibleLength / 2;\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this6 = this;\n      var getItemCount = this.props.getItemCount;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, _this6.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch);\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n  return VirtualizedList;\n}(React.PureComponent);\nVirtualizedList.contextType = VirtualizedListContext;\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n  var _super2 = _createSuper(CellRenderer);\n  function CellRenderer() {\n    var _this7;\n    _classCallCheck(this, CellRenderer);\n    _this7 = _super2.apply(this, arguments);\n    _this7.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this7.props.item\n      }\n    };\n    _this7._separators = {\n      highlight: function highlight() {\n        var _this$props11 = _this7.props,\n          cellKey = _this$props11.cellKey,\n          prevCellKey = _this$props11.prevCellKey;\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this$props12 = _this7.props,\n          cellKey = _this$props12.cellKey,\n          prevCellKey = _this$props12.prevCellKey;\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this$props13 = _this7.props,\n          cellKey = _this$props13.cellKey,\n          prevCellKey = _this$props13.prevCellKey;\n        _this7.props.onUpdateSeparators([select === \"leading\" ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this7;\n  }\n  _createClass(CellRenderer, [{\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn(\"VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take\" + \" precedence over renderItem.\");\n      }\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n      invariant(false, \"VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n      var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n      var result = !CellRendererComponent ? React.createElement(View, {\n        style: cellStyle,\n        onLayout: onLayout\n      }, element, itemSeparator) : React.createElement(CellRendererComponent, _extends({}, this.props, {\n        style: cellStyle,\n        onLayout: onLayout\n      }), element, itemSeparator);\n      return React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this.props.cellKey\n      }, result);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n  }]);\n  return CellRenderer;\n}(React.Component);\nfunction describeNestedLists(childList) {\n  var trace = \"VirtualizedList trace:\\n\" + (\"  Child (\" + (childList.horizontal ? \"horizontal\" : \"vertical\") + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? \"horizontal\" : \"vertical\") + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  rowReverse: {\n    flexDirection: \"row-reverse\"\n  },\n  columnReverse: {\n    flexDirection: \"column-reverse\"\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: \"absolute\",\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: \"blue\",\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: \"orange\"\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: \"green\",\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: \"red\",\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"names":["_createForOfIteratorHelperLoose","_extends","_objectSpread","Batchinator","FillRateHelper","findNodeHandle","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","flatten","infoLog","invariant","keyExtractor","defaultKeyExtractor","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","__DEV__","process","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","PureComponent","scrollToEnd","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","console","warn","x","y","scrollToIndex","_this$props","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","scrollToItem","item","_this$props2","getItem","itemCount","_index","scrollToOffset","recordInteraction","_nestedChildLists","forEach","childList","ref","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","setNativeProps","_getCellKey","_this$context","context","cellKey","_getListKey","listKey","_getDebugInfo","_this$context2","parent","debugInfo","hasMore","_hasMore","constructor","_props","_this$props$updateCel","_getScrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","getOutermostParentListRef","_getNestedChildState","key","existingChildData","get","state","_registerAsNestedChild","childListsInCell","_cellKeysToChildListKeys","Set","add","set","error","describeNestedLists","_hasInteracted","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","Map","_frames","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","done","childKey","value","_createViewToken","isViewable","_this$props4","_keyExtractor","_getFrameMetrics","_this$props5","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","frames","invertedWheelEventHandler","ev","inverted","node","scrollLeft","deltaX","wheelDeltaX","scrollTop","deltaY","wheelDeltaY","preventDefault","componentDidMount","registerAsNestedChild","parentDebugInfo","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","addEventListener","setTimeout","removeEventListener","prevState","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","has","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","_ref","disableVirtualization","nestedContext","String","type","displayName","render","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","styles","horizontallyInverted","verticallyInverted","element","isValidElement","style","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","lastFrame","endFrame","tailSpacerLength","_element","cloneElement","event","_element2","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","_iterator2","_step2","measureLayout","scrollMetrics","metricsChanged","_iterator3","_step3","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","contextType","Component","arguments","separatorProps","highlighted","leadingItem","_separators","highlight","_this$props11","unhighlight","_this$props12","updateProps","select","_this$props13","_renderElement","renderItem","ListItemComponent","separators","_this$props14","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"mappings":"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","sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n} // initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\n\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n} // maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n} // onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\n\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n} // scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\n\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n} // windowSizeOrDefault(this.props.windowSize)\n\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\n\n\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n\n\n  scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n\n\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n\n\n  scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n\n\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  constructor(_props) {\n    var _this$props$updateCel;\n\n    super(_props);\n\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n\n        this._hasDoneInitialScroll = true;\n      }\n\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - this._scrollMetrics.offset;\n\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n\n      this._updateViewableItems(this.props.data);\n\n      if (!this.props) {\n        return;\n      }\n\n      this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n\n      this._computeBlankness();\n\n      this._scheduleCellsToRenderUpdate();\n    };\n\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n\n      this._computeBlankness();\n\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      this._scrollMetrics.velocity = 0;\n\n      this._computeBlankness();\n\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n\n\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n\n        ev.preventDefault();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.setupWebWheelHandler();\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush(); // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.teardownWebWheelHandler();\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch); // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n\n      var key = _this._keyExtractor(item, ii);\n\n      _this._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    var key = defaultKeyExtractor(item, index);\n\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n\n    return key;\n  }\n\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n\n      var spacerKey = this._getSpacerKey(!horizontal);\n\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset; // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n\n                var childList = this._nestedChildLists.get(childKey);\n\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n\n}\n\nVirtualizedList.contextType = VirtualizedListContext;\n\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n            cellKey = _this$props11.cellKey,\n            prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n            cellKey = _this$props12.cellKey,\n            prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n            cellKey = _this$props13.cellKey,\n            prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n\n  render() {\n    var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n\n}\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"]},"metadata":{},"sourceType":"module"}