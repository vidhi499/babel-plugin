{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/get.js\";\nimport _inherits from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getAnimatedValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedWithChildren);\nexport default AnimatedTransform;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedTransform.js"],"names":["AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","transforms","_transforms","forEach","key","transform","value","__makeNative","map","result","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    var transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n\n}\n\nexport default AnimatedTransform;"]},"metadata":{},"sourceType":"module"}