{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { isLocaleRTL } from \"./isLocaleRTL\";\nvar defaultLocale = {\n  direction: 'ltr',\n  locale: 'en-US'\n};\nvar LocaleContext = createContext(defaultLocale);\nexport function getLocaleDirection(locale) {\n  return isLocaleRTL(locale) ? 'rtl' : 'ltr';\n}\nexport function LocaleProvider(props) {\n  var direction = props.direction,\n    locale = props.locale,\n    children = props.children;\n  var needsContext = direction || locale;\n  return needsContext ? React.createElement(LocaleContext.Provider, {\n    children: children,\n    value: {\n      direction: locale ? getLocaleDirection(locale) : direction,\n      locale: locale\n    }\n  }) : children;\n}\n_c = LocaleProvider;\nexport function useLocaleContext() {\n  _s();\n  return useContext(LocaleContext);\n}\n_s(useLocaleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LocaleProvider\");\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/useLocale/index.js"],"names":["React","createContext","useContext","isLocaleRTL","defaultLocale","direction","locale","LocaleContext","getLocaleDirection","LocaleProvider","props","children","needsContext","createElement","Provider","value","useLocaleContext"],"mappings":";AAQA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,WAAT;AACA,IAAIC,aAAa,GAAG;EAClBC,SAAS,EAAE,KADO;EAElBC,MAAM,EAAE;AAFU,CAApB;AAIA,IAAIC,aAAa,GAAgBN,aAAa,CAACG,aAAD,CAA9C;AACA,OAAO,SAASI,kBAAT,CAA4BF,MAA5B,EAAoC;EACzC,OAAOH,WAAW,CAACG,MAAD,CAAXH,GAAsB,KAAtBA,GAA8B,KAArC;AACD;AACD,OAAO,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;EACpC,IAAIL,SAAS,GAAGK,KAAK,CAACL,SAAtB;IACIC,MAAM,GAAGI,KAAK,CAACJ,MADnB;IAEIK,QAAQ,GAAGD,KAAK,CAACC,QAFrB;EAGA,IAAIC,YAAY,GAAGP,SAAS,IAAIC,MAAhC;EACA,OAAOM,YAAY,GAAgBZ,KAAK,CAACa,aAANb,CAAoBO,aAAa,CAACO,QAAlCd,EAA4C;IAC7EW,QAAQ,EAAEA,QADmE;IAE7EI,KAAK,EAAE;MACLV,SAAS,EAAEC,MAAM,GAAGE,kBAAkB,CAACF,MAAD,CAArB,GAAgCD,SAD5C;MAELC,MAAM,EAANA;IAFK;EAFsE,CAA5CN,CAAhB,GAMdW,QANL;AAOD;KAZeF,c;AAahB,OAAO,SAASO,gBAAT,GAA4B;EAAA,EAAA,EAAA;EACjC,OAAOd,UAAU,CAACK,aAAD,CAAjB;AACD;GAFeS,gB","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport React, { createContext, useContext } from 'react';\nimport { isLocaleRTL } from './isLocaleRTL';\nvar defaultLocale = {\n  direction: 'ltr',\n  locale: 'en-US'\n};\nvar LocaleContext = /*#__PURE__*/createContext(defaultLocale);\nexport function getLocaleDirection(locale) {\n  return isLocaleRTL(locale) ? 'rtl' : 'ltr';\n}\nexport function LocaleProvider(props) {\n  var direction = props.direction,\n      locale = props.locale,\n      children = props.children;\n  var needsContext = direction || locale;\n  return needsContext ? /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    children: children,\n    value: {\n      direction: locale ? getLocaleDirection(locale) : direction,\n      locale\n    }\n  }) : children;\n}\nexport function useLocaleContext() {\n  return useContext(LocaleContext);\n}"]},"metadata":{},"sourceType":"module"}