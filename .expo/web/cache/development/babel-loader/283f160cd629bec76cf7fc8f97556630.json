{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = useStable;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar UNINITIALIZED = typeof Symbol === \"function\" && typeof Symbol() === \"symbol\" ? Symbol() : Object.freeze({});\nfunction useStable(getInitialValue) {\n  var ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/modules/useStable/index.js"],"names":["_interopRequireWildcard","require","default","exports","__esModule","useStable","React","UNINITIALIZED","Symbol","Object","freeze","getInitialValue","ref","useRef","current","module"],"mappings":"AAAA,YAAA;;AAEA,IAAIA,uBAAAA,GAA0BC,OAAAA,CAAQ,+CAAA,CAAA,CAAiDC,OAAO;AAE9FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAGG,SAAAA;AAElB,IAAIC,KAAAA,GAAQN,uBAAAA,CAAwBC,OAAAA,CAAQ,OAAA,CAAA,CAAA;AAU5C,IAAIM,aAAAA,GAAgB,OAAOC,MAAAA,KAAW,UAAA,IAAc,OAAOA,MAAAA,EAAAA,KAAa,QAAA,GAAWA,MAAAA,EAAAA,GAAWC,MAAAA,CAAOC,MAAM,CAAC,CAAC,CAAA,CAAE;AAE/G,SAASL,SAAAA,CAAUM,eAAe,EAAE;EAClC,IAAIC,GAAAA,GAAMN,KAAAA,CAAMO,MAAM,CAACN,aAAAA,CAAAA;EAEvB,IAAIK,GAAAA,CAAIE,OAAO,KAAKP,aAAAA,EAAe;IACjCK,GAAAA,CAAIE,OAAO,GAAGH,eAAAA,EAAAA;EAChB;EAGA,OAAOC,GAAAA,CAAIE,OAAO;AACpB;AAEAC,MAAAA,CAAOZ,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = useStable;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar UNINITIALIZED = typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\n\nfunction useStable(getInitialValue) {\n  var ref = React.useRef(UNINITIALIZED);\n\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  } // $FlowFixMe (#64650789) Trouble refining types where `Symbol` is concerned.\n\n\n  return ref.current;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}