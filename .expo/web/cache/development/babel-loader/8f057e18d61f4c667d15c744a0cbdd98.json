{"ast":null,"code":"import valueParser from \"postcss-value-parser\";\nvar invalidShortforms = {\n  background: true,\n  borderBottom: true,\n  borderLeft: true,\n  borderRight: true,\n  borderTop: true,\n  font: true,\n  grid: true,\n  outline: true,\n  textDecoration: true\n};\nvar invalidMultiValueShortforms = {\n  flex: true,\n  margin: true,\n  padding: true,\n  borderColor: true,\n  borderRadius: true,\n  borderStyle: true,\n  borderWidth: true,\n  marginHorizontal: true,\n  marginVertical: true,\n  paddingHorizontal: true,\n  paddingVertical: true,\n  overflow: true,\n  overscrollBehavior: true,\n  backgroundPosition: true\n};\nfunction error(message) {\n  console.error(message);\n}\nexport function validate(obj) {\n  for (var k in obj) {\n    var prop = k.trim();\n    var value = obj[prop];\n    var isInvalid = false;\n    if (value === null) {\n      continue;\n    }\n    if (typeof value === \"string\" && value.indexOf(\"!important\") > -1) {\n      error('Invalid style declaration \"' + prop + \":\" + value + '\". Values cannot include \"!important\"');\n      isInvalid = true;\n    } else {\n      var suggestion = \"\";\n      if (prop === \"animation\" || prop === \"animationName\") {\n        suggestion = 'Did you mean \"animationKeyframes\"?';\n        isInvalid = true;\n      } else if (prop === \"direction\") {\n        suggestion = 'Did you mean \"writingDirection\"?';\n        isInvalid = true;\n      } else if (prop === \"verticalAlign\") {\n        suggestion = 'Did you mean \"textAlignVertical\"?';\n        isInvalid = true;\n      } else if (invalidShortforms[prop]) {\n        suggestion = \"Please use long-form properties.\";\n        isInvalid = true;\n      } else if (invalidMultiValueShortforms[prop]) {\n        if (typeof value === \"string\" && valueParser(value).nodes.length > 1) {\n          suggestion = 'Value is \"' + value + '\" but only single values are supported.';\n          isInvalid = true;\n        }\n      }\n      if (suggestion !== \"\") {\n        error('Invalid style property of \"' + prop + '\". ' + suggestion);\n      }\n    }\n    if (isInvalid) {\n      delete obj[k];\n    }\n  }\n}\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/StyleSheet/validate.js"],"names":["valueParser","invalidShortforms","background","borderBottom","borderLeft","borderRight","borderTop","font","grid","outline","textDecoration","invalidMultiValueShortforms","flex","margin","padding","borderColor","borderRadius","borderStyle","borderWidth","marginHorizontal","marginVertical","paddingHorizontal","paddingVertical","overflow","overscrollBehavior","backgroundPosition","error","message","console","validate","obj","k","prop","trim","value","isInvalid","indexOf","suggestion","nodes","length"],"mappings":"AAQA,OAAOA,WAAAA,MAAiB,sBAAA;AACxB,IAAIC,iBAAAA,GAAoB;EACtBC,UAAAA,EAAY,IAAI;EAChBC,YAAAA,EAAc,IAAI;EAClBC,UAAAA,EAAY,IAAI;EAChBC,WAAAA,EAAa,IAAI;EACjBC,SAAAA,EAAW,IAAI;EACfC,IAAAA,EAAM,IAAI;EACVC,IAAAA,EAAM,IAAI;EACVC,OAAAA,EAAS,IAAI;EACbC,cAAAA,EAAgB;AAClB,CAAA;AACA,IAAIC,2BAAAA,GAA8B;EAChCC,IAAAA,EAAM,IAAI;EACVC,MAAAA,EAAQ,IAAI;EACZC,OAAAA,EAAS,IAAI;EACbC,WAAAA,EAAa,IAAI;EACjBC,YAAAA,EAAc,IAAI;EAClBC,WAAAA,EAAa,IAAI;EACjBC,WAAAA,EAAa,IAAI;EACjBC,gBAAAA,EAAkB,IAAI;EACtBC,cAAAA,EAAgB,IAAI;EACpBC,iBAAAA,EAAmB,IAAI;EACvBC,eAAAA,EAAiB,IAAI;EACrBC,QAAAA,EAAU,IAAI;EACdC,kBAAAA,EAAoB,IAAI;EACxBC,kBAAAA,EAAoB;AACtB,CAAA;AAEA,SAASC,KAAAA,CAAMC,OAAO,EAAE;EACtBC,OAAAA,CAAQF,KAAK,CAACC,OAAAA,CAAAA;AAChB;AAEA,OAAO,SAASE,QAAAA,CAASC,GAAG,EAAE;EAC5B,KAAK,IAAIC,CAAAA,IAAKD,GAAAA,EAAK;IACjB,IAAIE,IAAAA,GAAOD,CAAAA,CAAEE,IAAI,EAAA;IACjB,IAAIC,KAAAA,GAAQJ,GAAG,CAACE,IAAAA,CAAK;IACrB,IAAIG,SAAAA,GAAY,KAAK;IAErB,IAAID,KAAAA,KAAU,IAAI,EAAE;MAClB;IACF;IAEA,IAAI,OAAOA,KAAAA,KAAU,QAAA,IAAYA,KAAAA,CAAME,OAAO,CAAC,YAAA,CAAA,GAAgB,CAAC,CAAA,EAAG;MACjEV,KAAAA,CAAM,6BAAA,GAAiCM,IAAAA,GAAO,GAAA,GAAME,KAAAA,GAAQ,uCAAA,CAAA;MAC5DC,SAAAA,GAAY,IAAI;IAClB,CAAA,MAAO;MACL,IAAIE,UAAAA,GAAa,EAAA;MAEjB,IAAIL,IAAAA,KAAS,WAAA,IAAeA,IAAAA,KAAS,eAAA,EAAiB;QACpDK,UAAAA,GAAa,oCAAA;QAGbF,SAAAA,GAAY,IAAI;MAClB,CAAA,MAAO,IAAIH,IAAAA,KAAS,WAAA,EAAa;QAC/BK,UAAAA,GAAa,kCAAA;QACbF,SAAAA,GAAY,IAAI;MAClB,CAAA,MAAO,IAAIH,IAAAA,KAAS,eAAA,EAAiB;QACnCK,UAAAA,GAAa,mCAAA;QACbF,SAAAA,GAAY,IAAI;MAClB,CAAA,MAAO,IAAIlC,iBAAiB,CAAC+B,IAAAA,CAAK,EAAE;QAClCK,UAAAA,GAAa,kCAAA;QACbF,SAAAA,GAAY,IAAI;MAClB,CAAA,MAAO,IAAIxB,2BAA2B,CAACqB,IAAAA,CAAK,EAAE;QAC5C,IAAI,OAAOE,KAAAA,KAAU,QAAA,IAAYlC,WAAAA,CAAYkC,KAAAA,CAAAA,CAAOI,KAAK,CAACC,MAAM,GAAG,CAAA,EAAG;UACpEF,UAAAA,GAAa,YAAA,GAAgBH,KAAAA,GAAQ,yCAAA;UACrCC,SAAAA,GAAY,IAAI;QAClB;MACF;MAEA,IAAIE,UAAAA,KAAe,EAAA,EAAI;QACrBX,KAAAA,CAAM,6BAAA,GAAiCM,IAAAA,GAAO,KAAA,GAASK,UAAAA,CAAAA;MACzD;IACF;IAEA,IAAIF,SAAAA,EAAW;MACb,OAAOL,GAAG,CAACC,CAAAA,CAAE;IACf;EACF;AACF","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport valueParser from 'postcss-value-parser';\nvar invalidShortforms = {\n  background: true,\n  borderBottom: true,\n  borderLeft: true,\n  borderRight: true,\n  borderTop: true,\n  font: true,\n  grid: true,\n  outline: true,\n  textDecoration: true\n};\nvar invalidMultiValueShortforms = {\n  flex: true,\n  margin: true,\n  padding: true,\n  borderColor: true,\n  borderRadius: true,\n  borderStyle: true,\n  borderWidth: true,\n  marginHorizontal: true,\n  marginVertical: true,\n  paddingHorizontal: true,\n  paddingVertical: true,\n  overflow: true,\n  overscrollBehavior: true,\n  backgroundPosition: true\n};\n\nfunction error(message) {\n  console.error(message);\n}\n\nexport function validate(obj) {\n  for (var k in obj) {\n    var prop = k.trim();\n    var value = obj[prop];\n    var isInvalid = false;\n\n    if (value === null) {\n      continue;\n    }\n\n    if (typeof value === 'string' && value.indexOf('!important') > -1) {\n      error(\"Invalid style declaration \\\"\" + prop + \":\" + value + \"\\\". Values cannot include \\\"!important\\\"\");\n      isInvalid = true;\n    } else {\n      var suggestion = '';\n\n      if (prop === 'animation' || prop === 'animationName') {\n        suggestion = 'Did you mean \"animationKeyframes\"?'; // } else if (prop === 'boxShadow') {\n        //  suggestion = 'Did you mean \"shadow{Color,Offset,Opacity,Radius}\"?';\n\n        isInvalid = true;\n      } else if (prop === 'direction') {\n        suggestion = 'Did you mean \"writingDirection\"?';\n        isInvalid = true;\n      } else if (prop === 'verticalAlign') {\n        suggestion = 'Did you mean \"textAlignVertical\"?';\n        isInvalid = true;\n      } else if (invalidShortforms[prop]) {\n        suggestion = 'Please use long-form properties.';\n        isInvalid = true;\n      } else if (invalidMultiValueShortforms[prop]) {\n        if (typeof value === 'string' && valueParser(value).nodes.length > 1) {\n          suggestion = \"Value is \\\"\" + value + \"\\\" but only single values are supported.\";\n          isInvalid = true;\n        }\n      }\n\n      if (suggestion !== '') {\n        error(\"Invalid style property of \\\"\" + prop + \"\\\". \" + suggestion);\n      }\n    }\n\n    if (isInvalid) {\n      delete obj[k];\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}