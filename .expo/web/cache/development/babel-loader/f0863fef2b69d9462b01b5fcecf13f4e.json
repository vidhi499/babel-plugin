{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/get.js\";\nimport _inherits from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\nvar __DEV__ = true;\nvar linear = function linear(t) {\n  return t;\n};\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n  var extrapolateRight = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n  result = easing(result);\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n}\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n      return String(val);\n    });\n  };\n}\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\nfunction findRange(input, inputRange) {\n  var i;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically non-decreasing ' + arr);\n  }\n}\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  _inherits(AnimatedInterpolation, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedInterpolation);\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n    _classCallCheck(this, AnimatedInterpolation);\n    _this = _super.call(this);\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n  _createClass(AnimatedInterpolation, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._parent.__makeNative();\n      _get(_getPrototypeOf(AnimatedInterpolation.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var parentValue = this._parent.__getValue();\n      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n      return this._interpolation(parentValue);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._parent.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._parent.__removeChild(this);\n      _get(_getPrototypeOf(AnimatedInterpolation.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__transformDataType\",\n    value: function __transformDataType(range) {\n      return range.map(NativeAnimatedHelper.transformDataType);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      if (__DEV__) {\n        NativeAnimatedHelper.validateInterpolation(this._config);\n      }\n      return {\n        inputRange: this._config.inputRange,\n        outputRange: this.__transformDataType(this._config.outputRange),\n        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n        type: 'interpolation'\n      };\n    }\n  }]);\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedInterpolation.js"],"names":["_objectSpread","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","invariant","normalizeColor","__DEV__","linear","t","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","length","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","normalizedColor","r","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","forEach","value","number","i","push","interpolations","shouldRound","isRgbOrRgba","replace","val","Math","round","String","startsWith","arr","pattern","name","AnimatedInterpolation","parent","_parent","_config","_interpolation","__makeNative","parentValue","__getValue","__addChild","__removeChild","transformDataType","validateInterpolation","__transformDataType","type","__createInterpolation"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n/* eslint no-bitwise: 0 */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar linear = t => t;\n/**\n * Very handy helper to map input ranges to output ranges with an easing\n * function and custom behavior outside of the ranges.\n */\n\n\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return input => {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input; // Extrapolate\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {// noop\n    }\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {// noop\n    }\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n\n    return outputMax;\n  } // Input Range\n\n\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  } // Easing\n\n\n  result = easing(result); // Output Range\n\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\n\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36) // colors\n *   -45deg                  // values with units\n */\n\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange); // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\n  // ->\n  // [\n  //   [0, 50],\n  //   [100, 150],\n  //   [200, 250],\n  //   [0, 0.5],\n  // ]\n\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\n   * guard against this possibility.\n   */\n\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);\n  outputRange.forEach(value => {\n    /* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard\n     * against this possibility.\n     */\n    value.match(stringShapeRegex).forEach((number, i) => {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex)\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need\n   * to guard against this possibility. */\n  .map((value, i) => {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  }); // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n  // round the opacity (4th column).\n\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return input => {\n    var i = 0; // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n\n    return outputRange[0].replace(stringShapeRegex, () => {\n      var val = +interpolations[i++](input);\n\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n\n      return String(val);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i;\n\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1],\n    /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n     * one or both of the operands may be something that doesn't cleanly\n     * convert to a string, like undefined, null, and object, etc. If you really\n     * mean this implicit string conversion, you can do something like\n     * String(myThing)\n     */\n    'inputRange must be monotonically non-decreasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\n  /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n   * one or both of the operands may be something that doesn't cleanly convert\n   * to a string, like undefined, null, and object, etc. If you really mean\n   * this implicit string conversion, you can do something like\n   * String(myThing)\n   */\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nclass AnimatedInterpolation extends AnimatedWithChildren {\n  // Export for testing.\n  constructor(parent, config) {\n    super();\n    this._parent = parent;\n    this._config = config;\n    this._interpolation = createInterpolation(config);\n  }\n\n  __makeNative() {\n    this._parent.__makeNative();\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    var parentValue = this._parent.__getValue();\n\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach() {\n    this._parent.__addChild(this);\n  }\n\n  __detach() {\n    this._parent.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __transformDataType(range) {\n    return range.map(NativeAnimatedHelper.transformDataType);\n  }\n\n  __getNativeConfig() {\n    if (__DEV__) {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\n\n      /* $FlowFixMe(>=0.38.0) - Flow error detected during the deployment of\n       * v0.38.0. To see the error, remove this comment and run flow */\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  }\n\n}\n\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;"]},"metadata":{},"sourceType":"module"}