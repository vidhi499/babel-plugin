{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\nvar _TouchableOpacity = _interopRequireDefault(require(\"../TouchableOpacity\"));\nvar _Text = _interopRequireDefault(require(\"../Text\"));\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n    color = props.color,\n    disabled = props.disabled,\n    onPress = props.onPress,\n    testID = props.testID,\n    title = props.title;\n  return React.createElement(_TouchableOpacity.default, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(_Text.default, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = \"Button\";\nvar styles = _StyleSheet.default.create({\n  button: {\n    backgroundColor: \"#2196F3\",\n    borderRadius: 2\n  },\n  text: {\n    color: \"#fff\",\n    fontWeight: \"500\",\n    padding: 8,\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  },\n  buttonDisabled: {\n    backgroundColor: \"#dfdfdf\"\n  },\n  textDisabled: {\n    color: \"#a1a1a1\"\n  }\n});\nvar _default = Button;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/exports/Button/index.js"],"names":["_interopRequireDefault","require","default","_interopRequireWildcard","exports","__esModule","React","_StyleSheet","_TouchableOpacity","_Text","Button","forwardRef","props","forwardedRef","accessibilityLabel","color","disabled","onPress","testID","title","createElement","accessibilityRole","focusable","ref","style","styles","button","backgroundColor","buttonDisabled","text","textDisabled","displayName","create","borderRadius","fontWeight","padding","textAlign","textTransform","_default","module"],"mappings":"AAAA,YAAA;;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5F,IAAIC,uBAAAA,GAA0BF,OAAAA,CAAQ,+CAAA,CAAA,CAAiDC,OAAO;AAE9FE,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQF,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAII,KAAAA,GAAQH,uBAAAA,CAAwBF,OAAAA,CAAQ,OAAA,CAAA,CAAA;AAE5C,IAAIM,WAAAA,GAAcP,sBAAAA,CAAuBC,OAAAA,iBAAQ,CAAA;AAEjD,IAAIO,iBAAAA,GAAoBR,sBAAAA,CAAuBC,OAAAA,uBAAQ,CAAA;AAEvD,IAAIQ,KAAAA,GAAQT,sBAAAA,CAAuBC,OAAAA,WAAQ,CAAA;AAW3C,IAAIS,MAAAA,GAAsBJ,KAAAA,CAAMK,UAAU,CAAC,UAACC,KAAAA,EAAOC,YAAAA,EAAiB;EAClE,IAAIC,kBAAAA,GAAqBF,KAAAA,CAAME,kBAAkB;IAC7CC,KAAAA,GAAQH,KAAAA,CAAMG,KAAK;IACnBC,QAAAA,GAAWJ,KAAAA,CAAMI,QAAQ;IACzBC,OAAAA,GAAUL,KAAAA,CAAMK,OAAO;IACvBC,MAAAA,GAASN,KAAAA,CAAMM,MAAM;IACrBC,KAAAA,GAAQP,KAAAA,CAAMO,KAAK;EACvB,OAAoBb,KAAAA,CAAMc,aAAa,CAACZ,iBAAAA,CAAkBN,OAAO,EAAE;IACjEY,kBAAAA,EAAoBA,kBAAAA;IACpBO,iBAAAA,EAAmB,QAAA;IACnBL,QAAAA,EAAUA,QAAAA;IACVM,SAAAA,EAAW,CAACN,QAAAA;IACZC,OAAAA,EAASA,OAAAA;IACTM,GAAAA,EAAKV,YAAAA;IACLW,KAAAA,EAAO,CAACC,MAAAA,CAAOC,MAAM,EAAEX,KAAAA,IAAS;MAC9BY,eAAAA,EAAiBZ;IACnB,CAAA,EAAGC,QAAAA,IAAYS,MAAAA,CAAOG,cAAc,CAAC;IACrCV,MAAAA,EAAQA;EACV,CAAA,EAAgBZ,KAAAA,CAAMc,aAAa,CAACX,KAAAA,CAAMP,OAAO,EAAE;IACjDsB,KAAAA,EAAO,CAACC,MAAAA,CAAOI,IAAI,EAAEb,QAAAA,IAAYS,MAAAA,CAAOK,YAAY;EACtD,CAAA,EAAGX,KAAAA,CAAAA,CAAAA;AACL,CAAA,CAAA;AACAT,MAAAA,CAAOqB,WAAW,GAAG,QAAA;AAErB,IAAIN,MAAAA,GAASlB,WAAAA,CAAYL,OAAO,CAAC8B,MAAM,CAAC;EACtCN,MAAAA,EAAQ;IACNC,eAAAA,EAAiB,SAAA;IACjBM,YAAAA,EAAc;EAChB,CAAA;EACAJ,IAAAA,EAAM;IACJd,KAAAA,EAAO,MAAA;IACPmB,UAAAA,EAAY,KAAA;IACZC,OAAAA,EAAS,CAAA;IACTC,SAAAA,EAAW,QAAA;IACXC,aAAAA,EAAe;EACjB,CAAA;EACAT,cAAAA,EAAgB;IACdD,eAAAA,EAAiB;EACnB,CAAA;EACAG,YAAAA,EAAc;IACZf,KAAAA,EAAO;EACT;AACF,CAAA,CAAA;AAEA,IAAIuB,QAAAA,GAAW5B,MAAAA;AACfN,OAAAA,CAAQF,OAAO,GAAGoC,QAAAA;AAClBC,MAAAA,CAAOnC,OAAO,GAAGA,OAAAA,CAAQF,OAAO","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"../TouchableOpacity\"));\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar Button = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return /*#__PURE__*/React.createElement(_TouchableOpacity.default, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, /*#__PURE__*/React.createElement(_Text.default, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\n\nvar styles = _StyleSheet.default.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\n\nvar _default = Button;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}