{"ast":null,"code":"var _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _excluded = [\"ref\"],\n  _excluded2 = [\"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar $aB6Cp$swchelperslib_define_propertyjs = require(\"@swc/helpers/lib/_define_property.js\");\nvar $aB6Cp$react = require(\"react\");\nvar $aB6Cp$reactariautils = require(\"@react-aria/utils\");\nvar $aB6Cp$reactariainteractions = require(\"@react-aria/interactions\");\nvar $aB6Cp$clsx = require(\"clsx\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n$parcel$export(module.exports, \"FocusScope\", function () {\n  return $a7a032acae3ddda9$export$20e40289641fbbb6;\n});\n$parcel$export(module.exports, \"useFocusManager\", function () {\n  return $a7a032acae3ddda9$export$10c5169755ce7bd7;\n});\n$parcel$export(module.exports, \"getFocusableTreeWalker\", function () {\n  return $a7a032acae3ddda9$export$2d6ec8fc375ceafa;\n});\n$parcel$export(module.exports, \"createFocusManager\", function () {\n  return $a7a032acae3ddda9$export$c5251b9e124bf29;\n});\n$parcel$export(module.exports, \"isElementInChildOfActiveScope\", function () {\n  return $a7a032acae3ddda9$export$1258395f99bf9cbf;\n});\n$parcel$export(module.exports, \"FocusRing\", function () {\n  return $dfd8c70b928eb1b3$export$1a38b4ad7f578e1d;\n});\n$parcel$export(module.exports, \"FocusableProvider\", function () {\n  return $fb504d83237fd6ac$export$13f3202a3e5ddd5;\n});\n$parcel$export(module.exports, \"useFocusable\", function () {\n  return $fb504d83237fd6ac$export$4c014de7c8940b4c;\n});\n$parcel$export(module.exports, \"useFocusRing\", function () {\n  return $581a96d6eb128c1b$export$4e328f61c538687f;\n});\n$parcel$export(module.exports, \"focusSafely\", function () {\n  return $1c7f9157d722357d$export$80f3e147d781571c;\n});\nfunction $1c7f9157d722357d$export$80f3e147d781571c(element) {\n  if ((0, $aB6Cp$reactariainteractions.getInteractionModality)() === \"virtual\") {\n    var lastFocusedElement = document.activeElement;\n    (0, $aB6Cp$reactariautils.runAfterTransition)(function () {\n      if (document.activeElement === lastFocusedElement && document.contains(element)) (0, $aB6Cp$reactariautils.focusWithoutScrolling)(element);\n    });\n  } else (0, $aB6Cp$reactariautils.focusWithoutScrolling)(element);\n}\nfunction $d5156037ad898a4d$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) return false;\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n  }\n  return isVisible;\n}\nfunction $d5156037ad898a4d$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction $d5156037ad898a4d$export$e989c0fffaa6b27a(element, childElement) {\n  return element.nodeName !== \"#comment\" && $d5156037ad898a4d$var$isStyleVisible(element) && $d5156037ad898a4d$var$isAttributeVisible(element, childElement) && (!element.parentElement || $d5156037ad898a4d$export$e989c0fffaa6b27a(element.parentElement, element));\n}\nvar $a7a032acae3ddda9$var$FocusContext = (0, $parcel$interopDefault($aB6Cp$react)).createContext(null);\nvar $a7a032acae3ddda9$var$activeScope = null;\nfunction $a7a032acae3ddda9$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = (0, $aB6Cp$react.useRef)();\n  var endRef = (0, $aB6Cp$react.useRef)();\n  var scopeRef = (0, $aB6Cp$react.useRef)([]);\n  var ctx = (0, $aB6Cp$react.useContext)($a7a032acae3ddda9$var$FocusContext);\n  var _ctx_scopeRef;\n  var ctxParent = (_ctx_scopeRef = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef) !== null && _ctx_scopeRef !== void 0 ? _ctx_scopeRef : null;\n  var parentScope = (0, $aB6Cp$react.useMemo)(function () {\n    return $a7a032acae3ddda9$var$activeScope && $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope) && !$a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, ctxParent) ? $a7a032acae3ddda9$var$activeScope : ctxParent;\n  }, [ctxParent]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n  if ($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parentScope) && !$a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $a7a032acae3ddda9$export$d06fae2ee68b101e.addTreeNode(scopeRef, parentScope);\n  var node = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n  node.contain = contain;\n  $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain);\n  $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (scopeRef) return function () {\n      var parentScope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).parent.scopeRef;\n      if ((scopeRef === $a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope(scopeRef, $a7a032acae3ddda9$var$activeScope)) && (!parentScope || $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parentScope))) $a7a032acae3ddda9$var$activeScope = parentScope;\n      $a7a032acae3ddda9$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef, parentScope]);\n  var focusManager = $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef);\n  return (0, $parcel$interopDefault($aB6Cp$react)).createElement($a7a032acae3ddda9$var$FocusContext.Provider, {\n    value: {\n      scopeRef: scopeRef,\n      focusManager: focusManager\n    }\n  }, (0, $parcel$interopDefault($aB6Cp$react)).createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, (0, $parcel$interopDefault($aB6Cp$react)).createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $a7a032acae3ddda9$export$10c5169755ce7bd7() {\n  var _useContext;\n  return (_useContext = (0, $aB6Cp$react.useContext)($a7a032acae3ddda9$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nvar $a7a032acae3ddda9$var$focusableElements = [\"input:not([disabled]):not([type=hidden])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"button:not([disabled])\", \"a[href]\", \"area[href]\", \"summary\", \"iframe\", \"object\", \"embed\", \"audio[controls]\", \"video[controls]\", \"[contenteditable]\"];\nvar $a7a032acae3ddda9$var$FOCUSABLE_ELEMENT_SELECTOR = $a7a032acae3ddda9$var$focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\n$a7a032acae3ddda9$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $a7a032acae3ddda9$var$TABBABLE_ELEMENT_SELECTOR = $a7a032acae3ddda9$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $a7a032acae3ddda9$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $a7a032acae3ddda9$var$shouldContainFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = (0, $aB6Cp$react.useRef)();\n  var raf = (0, $aB6Cp$react.useRef)(null);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = document.activeElement;\n      var scope = scopeRef.current;\n      if (!$a7a032acae3ddda9$var$isElementInScope(focusedElement, scope)) return;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      if ((!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) && $a7a032acae3ddda9$var$isElementInScope(e.target, scopeRef.current)) {\n        $a7a032acae3ddda9$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope(e.target, scopeRef)) {\n        if (focusedNode.current) focusedNode.current.focus();else if ($a7a032acae3ddda9$var$activeScope) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n    };\n    var onBlur = function onBlur(e) {\n      raf.current = requestAnimationFrame(function () {\n        if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope(document.activeElement, scopeRef)) {\n          $a7a032acae3ddda9$var$activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if ($a7a032acae3ddda9$var$activeScope) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n        }\n      });\n    };\n    document.addEventListener(\"keydown\", onKeyDown, false);\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusout\", onBlur, false);\n    });\n    return function () {\n      document.removeEventListener(\"keydown\", onKeyDown, false);\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusout\", onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  (0, $aB6Cp$react.useEffect)(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $a7a032acae3ddda9$var$isElementInAnyScope(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element);\n}\nfunction $a7a032acae3ddda9$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $a7a032acae3ddda9$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  for (var _ref of $a7a032acae3ddda9$export$d06fae2ee68b101e.traverse($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope))) {\n    var s = _ref.scopeRef;\n    if ($a7a032acae3ddda9$var$isElementInScope(element, s.current)) return true;\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$export$1258395f99bf9cbf(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element, $a7a032acae3ddda9$var$activeScope);\n}\nfunction $a7a032acae3ddda9$var$isAncestorScope(ancestor, scope) {\n  var _focusScopeTree_getTreeNode;\n  var parent = (_focusScopeTree_getTreeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    (0, $1c7f9157d722357d$export$80f3e147d781571c)(element);\n  } catch (err) {} else if (element != null) try {\n    element.focus();\n  } catch (err1) {}\n}\nfunction $a7a032acae3ddda9$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  if (tabbable && !nextNode) {\n    walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  $a7a032acae3ddda9$var$focusElement(nextNode);\n}\nfunction $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = (0, $parcel$interopDefault($aB6Cp$react)).useRef(autoFocus);\n  (0, $aB6Cp$react.useEffect)(function () {\n    if (autoFocusRef.current) {\n      $a7a032acae3ddda9$var$activeScope = scopeRef;\n      if (!$a7a032acae3ddda9$var$isElementInScope(document.activeElement, $a7a032acae3ddda9$var$activeScope.current)) $a7a032acae3ddda9$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var onFocus = function onFocus(e) {\n      var target = e.target;\n      if ($a7a032acae3ddda9$var$isElementInScope(target, scopeRef.current)) $a7a032acae3ddda9$var$activeScope = scopeRef;else if (!$a7a032acae3ddda9$var$isElementInAnyScope(target)) $a7a032acae3ddda9$var$activeScope = null;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  var nodeToRestoreRef = (0, $aB6Cp$react.useRef)(typeof document !== \"undefined\" ? document.activeElement : null);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      if (!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) $a7a032acae3ddda9$var$activeScope = scopeRef;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (!restoreFocus) return;\n    $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey) return;\n      var focusedElement = document.activeElement;\n      if (!$a7a032acae3ddda9$var$isElementInScope(focusedElement, scopeRef.current)) return;\n      var nodeToRestore = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(document.body, {\n        tabbable: true\n      });\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n      if ((!nextElement || !$a7a032acae3ddda9$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode(); while ($a7a032acae3ddda9$var$isElementInScope(nextElement, scopeRef.current));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);else if (!$a7a032acae3ddda9$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $a7a032acae3ddda9$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) document.addEventListener(\"keydown\", onKeyDown, true);\n    return function () {\n      if (!contain) document.removeEventListener(\"keydown\", onKeyDown, true);\n      var nodeToRestore = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      if (restoreFocus && nodeToRestore && ($a7a032acae3ddda9$var$isElementInScope(document.activeElement, scopeRef.current) || document.activeElement === document.body && $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef))) {\n        var clonedTree = $a7a032acae3ddda9$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          if (document.activeElement === document.body) {\n            var treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                $a7a032acae3ddda9$var$focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {\n                $a7a032acae3ddda9$var$focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\nfunction $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $a7a032acae3ddda9$var$TABBABLE_ELEMENT_SELECTOR : $a7a032acae3ddda9$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts_from;\n      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n      if (node.matches(selector) && (0, $d5156037ad898a4d$export$e989c0fffaa6b27a)(node) && (!scope || $a7a032acae3ddda9$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $a7a032acae3ddda9$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || document.activeElement;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || document.activeElement;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $a7a032acae3ddda9$var$last(walker);\n        if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n        return next;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $a7a032acae3ddda9$var$last(walker);\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $a7a032acae3ddda9$var$last(walker);\n      if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n      return next;\n    }\n  };\n}\nfunction $a7a032acae3ddda9$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $a7a032acae3ddda9$var$Tree = function () {\n  \"use strict\";\n\n  function $a7a032acae3ddda9$var$Tree() {\n    _classCallCheck(this, $a7a032acae3ddda9$var$Tree);\n    (0, $parcel$interopDefault($aB6Cp$swchelperslib_define_propertyjs))(this, \"fastMap\", new Map());\n    this.root = new $a7a032acae3ddda9$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  _createClass($a7a032acae3ddda9$var$Tree, [{\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }, {\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      var node = new $a7a032acae3ddda9$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      var parentNode = node.parent;\n      for (var current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $a7a032acae3ddda9$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n      var children = node.children;\n      parentNode.removeChild(node);\n      if (children.length > 0) children.forEach(function (child) {\n        return parentNode.addChild(child);\n      });\n      this.fastMap.delete(node.scopeRef);\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return function* () {\n        if (node.scopeRef != null) yield node;\n        if (node.children.length > 0) for (var child of node.children) yield* _this.traverse(child);\n      }();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newTree = new $a7a032acae3ddda9$var$Tree();\n      for (var node of this.traverse()) newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n      return newTree;\n    }\n  }]);\n  return $a7a032acae3ddda9$var$Tree;\n}();\nvar $a7a032acae3ddda9$var$TreeNode = function () {\n  \"use strict\";\n\n  function $a7a032acae3ddda9$var$TreeNode(props) {\n    _classCallCheck(this, $a7a032acae3ddda9$var$TreeNode);\n    (0, $parcel$interopDefault($aB6Cp$swchelperslib_define_propertyjs))(this, \"children\", []);\n    (0, $parcel$interopDefault($aB6Cp$swchelperslib_define_propertyjs))(this, \"contain\", false);\n    this.scopeRef = props.scopeRef;\n  }\n  _createClass($a7a032acae3ddda9$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.push(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.splice(this.children.indexOf(node), 1);\n      node.parent = undefined;\n    }\n  }]);\n  return $a7a032acae3ddda9$var$TreeNode;\n}();\nvar $a7a032acae3ddda9$export$d06fae2ee68b101e = new $a7a032acae3ddda9$var$Tree();\nfunction $581a96d6eb128c1b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = (0, $aB6Cp$react.useRef)({\n    isFocused: false,\n    isFocusVisible: autoFocus || (0, $aB6Cp$reactariainteractions.isFocusVisible)()\n  });\n  var _ref2 = (0, $aB6Cp$react.useState)(false),\n    _ref3 = _slicedToArray(_ref2, 2),\n    isFocused = _ref3[0],\n    setFocused = _ref3[1];\n  var _ref4 = (0, $aB6Cp$react.useState)(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isFocusVisibleState = _ref5[0],\n    setFocusVisible = _ref5[1];\n  var updateState = (0, $aB6Cp$react.useCallback)(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = (0, $aB6Cp$react.useCallback)(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  (0, $aB6Cp$reactariainteractions.useFocusVisibleListener)(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _ref6 = (0, $aB6Cp$reactariainteractions.useFocus)({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _ref6.focusProps;\n  var _ref7 = (0, $aB6Cp$reactariainteractions.useFocusWithin)({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _ref7.focusWithinProps;\n  return {\n    isFocused: isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nfunction $dfd8c70b928eb1b3$export$1a38b4ad7f578e1d(props) {\n  var _ref9;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _ref8 = (0, $581a96d6eb128c1b$export$4e328f61c538687f)(props),\n    isFocused = _ref8.isFocused,\n    isFocusVisible = _ref8.isFocusVisible,\n    focusProps = _ref8.focusProps;\n  var child = (0, $parcel$interopDefault($aB6Cp$react)).Children.only(children);\n  return (0, $parcel$interopDefault($aB6Cp$react)).cloneElement(child, (0, $aB6Cp$reactariautils.mergeProps)(child.props, _objectSpread(_objectSpread({}, focusProps), {}, {\n    className: (0, $parcel$interopDefault($aB6Cp$clsx))((_ref9 = {}, _defineProperty(_ref9, focusClass || \"\", isFocused), _defineProperty(_ref9, focusRingClass || \"\", isFocusVisible), _ref9))\n  })));\n}\nvar $fb504d83237fd6ac$var$FocusableContext = (0, $parcel$interopDefault($aB6Cp$react)).createContext(null);\nfunction $fb504d83237fd6ac$var$useFocusableContext(ref) {\n  var context = (0, $aB6Cp$react.useContext)($fb504d83237fd6ac$var$FocusableContext) || {};\n  (0, $aB6Cp$reactariautils.useSyncRef)(context, ref);\n  var _ = context.ref,\n    otherProps = _objectWithoutProperties(context, _excluded);\n  return otherProps;\n}\nfunction $fb504d83237fd6ac$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var context = _objectSpread(_objectSpread({}, otherProps), {}, {\n    ref: ref\n  });\n  return (0, $parcel$interopDefault($aB6Cp$react)).createElement($fb504d83237fd6ac$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nvar $fb504d83237fd6ac$export$13f3202a3e5ddd5 = (0, $parcel$interopDefault($aB6Cp$react)).forwardRef($fb504d83237fd6ac$var$FocusableProvider);\nfunction $fb504d83237fd6ac$export$4c014de7c8940b4c(props, domRef) {\n  var _ref10 = (0, $aB6Cp$reactariainteractions.useFocus)(props),\n    focusProps = _ref10.focusProps;\n  var _ref11 = (0, $aB6Cp$reactariainteractions.useKeyboard)(props),\n    keyboardProps = _ref11.keyboardProps;\n  var interactions = (0, $aB6Cp$reactariautils.mergeProps)(focusProps, keyboardProps);\n  var domProps = $fb504d83237fd6ac$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = (0, $aB6Cp$react.useRef)(props.autoFocus);\n  (0, $aB6Cp$react.useEffect)(function () {\n    if (autoFocusRef.current && domRef.current) (0, $1c7f9157d722357d$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: (0, $aB6Cp$reactariautils.mergeProps)(_objectSpread(_objectSpread({}, interactions), {}, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}","map":{"version":3,"sources":["packages/@react-aria/focus/src/FocusScope.tsx","packages/@react-aria/focus/src/focusSafely.ts","packages/@react-aria/focus/src/isElementVisible.ts","packages/@react-aria/focus/src/FocusRing.tsx","packages/@react-aria/focus/src/useFocusRing.ts","packages/@react-aria/focus/src/useFocusable.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useMemo, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement\n}\n\ntype ScopeRef = RefObject<Element[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<Element[]>([]);\n  let ctx = useContext(FocusContext);\n\n  // The parent scope is based on the JSX tree, using context.\n  // However, if a new scope mounts outside the active scope (e.g. DialogContainer launched from a menu),\n  // we want the parent scope to be the active scope instead.\n  let ctxParent = ctx?.scopeRef ?? null;\n  let parentScope = useMemo(() => activeScope && focusScopeTree.getTreeNode(activeScope) && !isAncestorScope(activeScope, ctxParent) ? activeScope : ctxParent, [ctxParent]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  // add to the focus scope tree in render order because useEffects/useLayoutEffects run children first whereas render runs parent first\n  // which matters when constructing a tree\n  if (focusScopeTree.getTreeNode(parentScope) && !focusScopeTree.getTreeNode(scopeRef)) {\n    focusScopeTree.addTreeNode(scopeRef, parentScope);\n  }\n\n  let node = focusScopeTree.getTreeNode(scopeRef);\n  node.contain = contain;\n\n  useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  useLayoutEffect(() => {\n    if (scopeRef) {\n      return () => {\n        // Scope may have been re-parented.\n        let parentScope = focusScopeTree.getTreeNode(scopeRef).parent.scopeRef;\n\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if (\n          (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n          (!parentScope || focusScopeTree.getTreeNode(parentScope))\n        ) {\n          activeScope = parentScope;\n        }\n        focusScopeTree.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef, parentScope]);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = document.activeElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) && isElementInScope(e.target, scopeRef.current)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (shouldContainFocus(scopeRef) && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if (activeScope) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element: Element, scope: Element[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/** @private */\nexport function isElementInChildOfActiveScope(element: Element) {\n  return isElementInChildScope(element, activeScope);\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  focusElement(nextNode as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useActiveScopeTracker(scopeRef: RefObject<Element[]>, restore: boolean, contain: boolean) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  useLayoutEffect(() => {\n    if (restore || contain) {\n      return;\n    }\n\n    let scope = scopeRef.current;\n\n    let onFocus = (e: FocusEvent) => {\n      let target = e.target as Element;\n      if (isElementInScope(target, scopeRef.current)) {\n        activeScope = scopeRef;\n      } else if (!isElementInAnyScope(target)) {\n        activeScope = null;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, restore, contain]);\n}\n\nfunction shouldRestoreFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return scope?.scopeRef === scopeRef;\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus: boolean, contain: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? document.activeElement as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    if (!restoreFocus) {\n      return;\n    }\n\n    focusScopeTree.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        focusScopeTree.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          isElementInScope(document.activeElement, scopeRef.current)\n          || (document.activeElement === document.body && shouldRestoreFocus(scopeRef))\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && focusScopeTree.getTreeNode(treeNode.scopeRef)) {\n                focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  private root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size() {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef) {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement) {\n    let parentNode = this.fastMap.get(parent ?? null);\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  removeTreeNode(scopeRef: ScopeRef) {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    parentNode.removeChild(node);\n    if (children.length > 0) {\n      children.forEach(child => parentNode.addChild(child));\n    }\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.length > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore: FocusableElement;\n  public parent: TreeNode;\n  public children: TreeNode[] = [];\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode) {\n    this.children.push(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode) {\n    this.children.splice(this.children.indexOf(node), 1);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree = new Tree();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\nexport interface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useState} from 'react';\nimport {useRef} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"script"}