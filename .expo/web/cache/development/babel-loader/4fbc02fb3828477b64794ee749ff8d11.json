{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport UIManager from \"../../exports/UIManager\";\nimport createDOMProps from \"../createDOMProps\";\nimport useStable from \"../useStable\";\nimport { useRef } from 'react';\nvar didWarn = false;\nvar emptyObject = {};\nfunction setNativeProps(node, nativeProps, pointerEvents, style, previousStyleRef) {\n  if (!didWarn) {\n    console.warn('setNativeProps is deprecated. Please update props using React state instead.');\n    didWarn = true;\n  }\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents: pointerEvents\n    }, nativeProps), {}, {\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n    style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    pointerEvents: pointerEvents,\n    style: style\n  };\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n            style = _ref2.style,\n            pointerEvents = _ref2.pointerEvents;\n          setNativeProps(hostNode, nativeProps, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/modules/usePlatformMethods/index.js"],"names":["_objectSpread","UIManager","createDOMProps","useStable","useRef","didWarn","emptyObject","setNativeProps","node","nativeProps","pointerEvents","style","previousStyleRef","console","warn","domProps","nextDomStyle","current","styleName","updateView","usePlatformMethods","_ref","setNativePropsArgsRef","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow","_ref2"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\nvar didWarn = false;\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, pointerEvents, style, previousStyleRef) {\n  if (!didWarn) {\n    console.warn('setNativeProps is deprecated. Please update props using React state instead.');\n    didWarn = true;\n  }\n\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents\n    }, nativeProps), {}, {\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\n\n\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    pointerEvents,\n    style\n  }; // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n\n  var ref = useStable(() => hostNode => {\n    if (hostNode != null) {\n      hostNode.measure = callback => UIManager.measure(hostNode, callback);\n\n      hostNode.measureLayout = (relativeToNode, success, failure) => UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n\n      hostNode.measureInWindow = callback => UIManager.measureInWindow(hostNode, callback);\n\n      hostNode.setNativeProps = nativeProps => {\n        var _ref2 = setNativePropsArgsRef.current || emptyObject,\n            style = _ref2.style,\n            pointerEvents = _ref2.pointerEvents;\n\n        setNativeProps(hostNode, nativeProps, pointerEvents, style, previousStyleRef);\n      };\n    }\n  });\n  return ref;\n}"]},"metadata":{},"sourceType":"module"}