{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from \"../../modules/canUseDom\";\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = function () {\n  function Linking() {\n    var _this = this;\n    _classCallCheck(this, Linking);\n    this._eventCallbacks = {};\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n      _this._eventCallbacks[event].push(callback);\n    };\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n  _createClass(Linking, [{\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent(event) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n      var listeners = this._eventCallbacks[event];\n      if (listeners != null && Array.isArray(listeners)) {\n        listeners.map(function (listener) {\n          listener.apply(void 0, data);\n        });\n      }\n    }\n  }, {\n    key: \"canOpenURL\",\n    value: function canOpenURL() {\n      return Promise.resolve(true);\n    }\n  }, {\n    key: \"getInitialURL\",\n    value: function getInitialURL() {\n      return Promise.resolve(initialURL);\n    }\n  }, {\n    key: \"openURL\",\n    value: function openURL(url, target) {\n      if (arguments.length === 1) {\n        target = '_blank';\n      }\n      try {\n        open(url, target);\n        this._dispatchEvent('onOpen', url);\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }, {\n    key: \"_validateURL\",\n    value: function _validateURL(url) {\n      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n      invariant(url, 'Invalid URL: cannot be empty');\n    }\n  }]);\n  return Linking;\n}();\nvar open = function open(url, target) {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Linking/index.js"],"names":["invariant","canUseDOM","initialURL","window","location","href","Linking","_eventCallbacks","addEventListener","event","callback","push","removeEventListener","callbacks","filteredCallbacks","filter","c","toString","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","Promise","resolve","url","target","open","_dispatchEvent","e","reject","urlToOpen","URL","indexOf"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n\n    this.addEventListener = (event, callback) => {\n      if (!this._eventCallbacks[event]) {\n        this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = (event, callback) => {\n      var callbacks = this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n      this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n\n\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n\n\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n\n    try {\n      open(url, target);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n\n}\n\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\n\nexport default new Linking();"]},"metadata":{},"sourceType":"module"}