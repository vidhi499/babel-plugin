{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"animationType\", \"children\", \"onDismiss\", \"onRequestClose\", \"onShow\", \"transparent\", \"visible\"];\nimport * as React from \"react\";\nimport ModalPortal from \"./ModalPortal\";\nimport ModalAnimation from \"./ModalAnimation\";\nimport ModalContent from \"./ModalContent\";\nimport ModalFocusTrap from \"./ModalFocusTrap\";\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(function (modalId) {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n  var index = activeModalStack.indexOf(modalId);\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\nvar Modal = React.forwardRef(function (props, forwardedRef) {\n  var animationType = props.animationType,\n    children = props.children,\n    onDismiss = props.onDismiss,\n    onRequestClose = props.onRequestClose,\n    onShow = props.onShow,\n    transparent = props.transparent,\n    _props$visible = props.visible,\n    visible = _props$visible === void 0 ? true : _props$visible,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var modalId = React.useMemo(function () {\n    return uniqueModalIdentifier++;\n  }, []);\n  var _React$useState = React.useState(false),\n    isActive = _React$useState[0],\n    setIsActive = _React$useState[1];\n  var onDismissCallback = React.useCallback(function () {\n    removeActiveModal(modalId);\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(function () {\n    addActiveModal(modalId, setIsActive);\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(function () {\n    return function () {\n      return removeActiveModal(modalId);\n    };\n  }, [modalId]);\n  return React.createElement(ModalPortal, null, React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, React.createElement(ModalContent, _extends({}, rest, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }), children))));\n});\nexport default Modal;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Modal/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","ModalPortal","ModalAnimation","ModalContent","ModalFocusTrap","uniqueModalIdentifier","activeModalStack","activeModalListeners","notifyActiveModalListeners","length","activeModalId","forEach","modalId","removeActiveModal","index","indexOf","splice","addActiveModal","listener","push","Modal","forwardRef","props","forwardedRef","animationType","children","onDismiss","onRequestClose","onShow","transparent","_props$visible","visible","rest","useMemo","_React$useState","useState","isActive","setIsActive","onDismissCallback","useCallback","onShowCallback","useEffect","createElement","active","ref"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"animationType\", \"children\", \"onDismiss\", \"onRequestClose\", \"onShow\", \"transparent\", \"visible\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport ModalPortal from './ModalPortal';\nimport ModalAnimation from './ModalAnimation';\nimport ModalContent from './ModalContent';\nimport ModalFocusTrap from './ModalFocusTrap';\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\n\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(modalId => {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\n\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    // Before removing this listener we should probably tell it\n    // that it's no longer the active modal for sure.\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n\n  var index = activeModalStack.indexOf(modalId);\n\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\n\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\n\nvar Modal = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var animationType = props.animationType,\n      children = props.children,\n      onDismiss = props.onDismiss,\n      onRequestClose = props.onRequestClose,\n      onShow = props.onShow,\n      transparent = props.transparent,\n      _props$visible = props.visible,\n      visible = _props$visible === void 0 ? true : _props$visible,\n      rest = _objectWithoutPropertiesLoose(props, _excluded); // Set a unique model identifier so we can correctly route\n  // dismissals and check the layering of modals.\n\n\n  var modalId = React.useMemo(() => uniqueModalIdentifier++, []);\n\n  var _React$useState = React.useState(false),\n      isActive = _React$useState[0],\n      setIsActive = _React$useState[1];\n\n  var onDismissCallback = React.useCallback(() => {\n    removeActiveModal(modalId);\n\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(() => {\n    addActiveModal(modalId, setIsActive);\n\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(() => {\n    return () => removeActiveModal(modalId);\n  }, [modalId]);\n  return /*#__PURE__*/React.createElement(ModalPortal, null, /*#__PURE__*/React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, /*#__PURE__*/React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, /*#__PURE__*/React.createElement(ModalContent, _extends({}, rest, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }), children))));\n});\nexport default Modal;"]},"metadata":{},"sourceType":"module"}