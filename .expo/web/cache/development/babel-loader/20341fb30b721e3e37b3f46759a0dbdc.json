{"ast":null,"code":"import AccessibilityUtil from \"../../modules/AccessibilityUtil\";\nimport createDOMProps from \"../../modules/createDOMProps\";\nimport React from \"react\";\nimport { LocaleProvider } from \"../../modules/useLocale\";\nvar createElement = function createElement(component, props, options) {\n  var accessibilityComponent;\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props, options);\n  var element = React.createElement(Component, domProps);\n  var elementWithLocaleProvider = domProps.dir ? React.createElement(LocaleProvider, {\n    children: element,\n    direction: domProps.dir,\n    locale: domProps.lang\n  }) : element;\n  return elementWithLocaleProvider;\n};\nexport default createElement;\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/createElement/index.js"],"names":["AccessibilityUtil","createDOMProps","React","LocaleProvider","createElement","component","props","options","accessibilityComponent","constructor","String","propsToAccessibilityComponent","Component","domProps","element","elementWithLocaleProvider","dir","children","direction","locale","lang"],"mappings":"AAQA,OAAOA,iBAAAA;AACP,OAAOC,cAAAA;AACP,OAAOC,KAAAA,MAAW,OAAA;AAClB,SAASC,cAAc;AAEvB,IAAIC,aAAAA,GAAgB,SAAhBA,aAAAA,CAAiBC,SAAAA,EAAWC,KAAAA,EAAOC,OAAAA,EAAY;EAEjD,IAAIC,sBAAAA;EAEJ,IAAIH,SAAAA,IAAaA,SAAAA,CAAUI,WAAW,KAAKC,MAAAA,EAAQ;IACjDF,sBAAAA,GAAyBR,iBAAAA,CAAkBW,6BAA6B,CAACL,KAAAA,CAAAA;EAC3E;EAEA,IAAIM,SAAAA,GAAYJ,sBAAAA,IAA0BH,SAAAA;EAC1C,IAAIQ,QAAAA,GAAWZ,cAAAA,CAAeW,SAAAA,EAAWN,KAAAA,EAAOC,OAAAA,CAAAA;EAChD,IAAIO,OAAAA,GAAuBZ,KAAAA,CAAME,aAAa,CAACQ,SAAAA,EAAWC,QAAAA,CAAAA;EAE1D,IAAIE,yBAAAA,GAA4BF,QAAAA,CAASG,GAAG,GAAgBd,KAAAA,CAAME,aAAa,CAACD,cAAAA,EAAgB;IAC9Fc,QAAAA,EAAUH,OAAAA;IACVI,SAAAA,EAAWL,QAAAA,CAASG,GAAG;IACvBG,MAAAA,EAAQN,QAAAA,CAASO;EACnB,CAAA,CAAA,GAAKN,OAAO;EACZ,OAAOC,yBAAAA;AACT,CAAA;AAEA,eAAeX,aAAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport createDOMProps from '../../modules/createDOMProps';\nimport React from 'react';\nimport { LocaleProvider } from '../../modules/useLocale';\n\nvar createElement = (component, props, options) => {\n  // Use equivalent platform elements where possible.\n  var accessibilityComponent;\n\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props, options);\n  var element = /*#__PURE__*/React.createElement(Component, domProps); // Update locale context if element's writing direction prop changes\n\n  var elementWithLocaleProvider = domProps.dir ? /*#__PURE__*/React.createElement(LocaleProvider, {\n    children: element,\n    direction: domProps.dir,\n    locale: domProps.lang\n  }) : element;\n  return elementWithLocaleProvider;\n};\n\nexport default createElement;"]},"metadata":{},"sourceType":"module"}