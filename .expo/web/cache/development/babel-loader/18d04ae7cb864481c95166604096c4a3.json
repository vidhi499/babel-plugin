{"ast":null,"code":"\"use strict\";\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n    var configY = _objectSpread({}, config);\n    for (var key in config) {\n      var _config$key = config[key],\n        x = _config$key.x,\n        y = _config$key.y;\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n  return null;\n};\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n        current++;\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n        animations[current].start(onComplete);\n      };\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error(\"Loops run using the native driver cannot contain Animated.sequence animations\");\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error(\"Loops run using the native driver cannot contain Animated.parallel animations\");\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n    _ref$resetBeforeItera = _ref.resetBeforeIteration,\n    resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error(\"Loops run using the native driver cannot contain Animated.loop animations\");\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return function () {\n      typeof event === \"function\" && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};\n;\n;\n(function () {\n  var _a, _b;\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n      import.meta.webpackHot.accept();\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedImplementation.js"],"names":["_objectSpread","AnimatedEvent","attachNativeEvent","AnimatedAddition","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedProps","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","arguments","maybeVectorAnim","value","anim","configX","configY","key","_config$key","x","y","undefined","aX","aY","parallel","stopTogether","spring","_start","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","_start2","decay","_start3","sequence","animations","current","result","finished","length","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","_temp","_ref","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Interpolation","Node","Event","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete(...arguments);\n      callback && callback(...arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map((animation, i) => {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event(...arguments);\n      listener(...arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay,\n\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing,\n\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay,\n\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence,\n\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel,\n\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger,\n\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"]},"metadata":{},"sourceType":"module"}