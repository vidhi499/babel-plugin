{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _AnimatedEvent = require(\"../AnimatedEvent\");\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\nvar _AnimatedStyle = _interopRequireDefault(require(\"./AnimatedStyle\"));\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../../exports/findNodeHandle\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar AnimatedProps = function (_AnimatedNode$default) {\n  _inherits(AnimatedProps, _AnimatedNode$default);\n  var _super = _createSuper(AnimatedProps);\n  function AnimatedProps(props, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _super.call(this);\n    if (props.style) {\n      props = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {\n        style: new _AnimatedStyle.default(props.style)\n      });\n    }\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedProps, [{\n    key: \"__getValue\",\n    value: function __getValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof _AnimatedNode.default) {\n          if (!value.__isNative || value instanceof _AnimatedStyle.default) {\n            props[key] = value.__getValue();\n          }\n        } else if (value instanceof _AnimatedEvent.AnimatedEvent) {\n          props[key] = value.__getHandler();\n        } else {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof _AnimatedNode.default) {\n          props[key] = value.__getAnimatedValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof _AnimatedNode.default) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this._animatedView) {\n        this.__disconnectAnimatedView();\n      }\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof _AnimatedNode.default) {\n          value.__removeChild(this);\n        }\n      }\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n        for (var key in this._props) {\n          var value = this._props[key];\n          if (value instanceof _AnimatedNode.default) {\n            value.__makeNative();\n          }\n        }\n        if (this._animatedView) {\n          this.__connectAnimatedView();\n        }\n      }\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      if (this.__isNative) {\n        this.__connectAnimatedView();\n      }\n    }\n  }, {\n    key: \"__connectAnimatedView\",\n    value: function __connectAnimatedView() {\n      (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, \"Unable to locate attached view in the native tree\");\n      _NativeAnimatedHelper.default.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__disconnectAnimatedView\",\n    value: function __disconnectAnimatedView() {\n      (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, \"Unable to locate attached view in the native tree\");\n      _NativeAnimatedHelper.default.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__restoreDefaultValues\",\n    value: function __restoreDefaultValues() {\n      if (this.__isNative) {\n        _NativeAnimatedHelper.default.API.restoreDefaultValues(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var propsConfig = {};\n      for (var propKey in this._props) {\n        var value = this._props[propKey];\n        if (value instanceof _AnimatedNode.default) {\n          value.__makeNative();\n          propsConfig[propKey] = value.__getNativeTag();\n        }\n      }\n      return {\n        type: \"props\",\n        props: propsConfig\n      };\n    }\n  }]);\n  return AnimatedProps;\n}(_AnimatedNode.default);\nvar _default = AnimatedProps;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/nodes/AnimatedProps.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_objectSpread2","_AnimatedEvent","_AnimatedNode","_AnimatedStyle","_NativeAnimatedHelper","_findNodeHandle","_invariant","AnimatedProps","constructor","props","callback","style","_props","_callback","__attach","__getValue","key","value","__isNative","AnimatedEvent","__getHandler","__getAnimatedValue","__addChild","__detach","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","type","_default","module"],"mappings":"AASA,YAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,cAAAA,GAAiBL,sBAAAA,CAAuBC,OAAAA,CAAQ,sCAAA,CAAA,CAAA;AAEpD,IAAIK,cAAAA,GAAiBL,OAAAA,oBAAQ;AAE7B,IAAIM,aAAAA,GAAgBP,sBAAAA,CAAuBC,OAAAA,kBAAQ,CAAA;AAEnD,IAAIO,cAAAA,GAAiBR,sBAAAA,CAAuBC,OAAAA,mBAAQ,CAAA;AAEpD,IAAIQ,qBAAAA,GAAwBT,sBAAAA,CAAuBC,OAAAA,2BAAQ,CAAA;AAE3D,IAAIS,eAAAA,GAAkBV,sBAAAA,CAAuBC,OAAAA,sCAAQ,CAAA;AAErD,IAAIU,UAAAA,GAAaX,sBAAAA,CAAuBC,OAAAA,CAAQ,oBAAA,CAAA,CAAA;AAAA,IAE1CW,aAAAA;EAAAA;EAAAA;EACJC,uBAAYC,KAAK,EAAEC,QAAQ,EAAE;IAAA;IAAA;IAC3B;IAEA,IAAID,KAAAA,CAAME,KAAK,EAAE;MACfF,KAAAA,GAAS,CAAA,CAAA,EAAGT,cAAAA,CAAeH,OAAO,EAAG,CAAA,CAAA,EAAGG,cAAAA,CAAeH,OAAO,EAAE,CAAC,CAAA,EAAGY,KAAAA,CAAAA,EAAQ,CAAC,CAAA,EAAG;QAC9EE,KAAAA,EAAO,IAAIR,cAAAA,CAAeN,OAAO,CAACY,KAAAA,CAAME,KAAK;MAC/C,CAAA,CAAA;IACF;IAEA,MAAKC,MAAM,GAAGH,KAAAA;IACd,MAAKI,SAAS,GAAGH,QAAAA;IAEjB,MAAKI,QAAQ,EAAA;IAAA;EACf;EAAA;IAAA;IAAA,OAEAC,sBAAa;MACX,IAAIN,KAAAA,GAAQ,CAAC,CAAA;MAEb,KAAK,IAAIO,GAAAA,IAAO,IAAI,CAACJ,MAAM,EAAE;QAC3B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAACI,GAAAA,CAAI;QAE5B,IAAIC,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;UAC1C,IAAI,CAACoB,KAAAA,CAAMC,UAAU,IAAID,KAAAA,YAAiBd,cAAAA,CAAeN,OAAO,EAAE;YAGhEY,KAAK,CAACO,GAAAA,CAAI,GAAGC,KAAAA,CAAMF,UAAU,EAAA;UAC/B;QACF,CAAA,MAAO,IAAIE,KAAAA,YAAiBhB,cAAAA,CAAekB,aAAa,EAAE;UACxDV,KAAK,CAACO,GAAAA,CAAI,GAAGC,KAAAA,CAAMG,YAAY,EAAA;QACjC,CAAA,MAAO;UACLX,KAAK,CAACO,GAAAA,CAAI,GAAGC,KAAAA;QACf;MACF;MAEA,OAAOR,KAAAA;IACT;EAAA;IAAA;IAAA,OAEAY,8BAAqB;MACnB,IAAIZ,KAAAA,GAAQ,CAAC,CAAA;MAEb,KAAK,IAAIO,GAAAA,IAAO,IAAI,CAACJ,MAAM,EAAE;QAC3B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAACI,GAAAA,CAAI;QAE5B,IAAIC,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;UAC1CY,KAAK,CAACO,GAAAA,CAAI,GAAGC,KAAAA,CAAMI,kBAAkB,EAAA;QACvC;MACF;MAEA,OAAOZ,KAAAA;IACT;EAAA;IAAA;IAAA,OAEAK,oBAAW;MACT,KAAK,IAAIE,GAAAA,IAAO,IAAI,CAACJ,MAAM,EAAE;QAC3B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAACI,GAAAA,CAAI;QAE5B,IAAIC,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;UAC1CoB,KAAAA,CAAMK,UAAU,CAAC,IAAI,CAAA;QACvB;MACF;IACF;EAAA;IAAA;IAAA,OAEAC,oBAAW;MACT,IAAI,IAAI,CAACL,UAAU,IAAI,IAAI,CAACM,aAAa,EAAE;QACzC,IAAI,CAACC,wBAAwB,EAAA;MAC/B;MAEA,KAAK,IAAIT,GAAAA,IAAO,IAAI,CAACJ,MAAM,EAAE;QAC3B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAACI,GAAAA,CAAI;QAE5B,IAAIC,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;UAC1CoB,KAAAA,CAAMS,aAAa,CAAC,IAAI,CAAA;QAC1B;MACF;MAEA;IACF;EAAA;IAAA;IAAA,OAEAC,kBAAS;MACP,IAAI,CAACd,SAAS,EAAA;IAChB;EAAA;IAAA;IAAA,OAEAe,wBAAe;MACb,IAAI,CAAC,IAAI,CAACV,UAAU,EAAE;QACpB,IAAI,CAACA,UAAU,GAAG,IAAI;QAEtB,KAAK,IAAIF,GAAAA,IAAO,IAAI,CAACJ,MAAM,EAAE;UAC3B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAACI,GAAAA,CAAI;UAE5B,IAAIC,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;YAC1CoB,KAAAA,CAAMW,YAAY,EAAA;UACpB;QACF;QAEA,IAAI,IAAI,CAACJ,aAAa,EAAE;UACtB,IAAI,CAACK,qBAAqB,EAAA;QAC5B;MACF;IACF;EAAA;IAAA;IAAA,OAEAC,uBAAcC,YAAY,EAAE;MAC1B,IAAI,IAAI,CAACP,aAAa,KAAKO,YAAAA,EAAc;QACvC;MACF;MAEA,IAAI,CAACP,aAAa,GAAGO,YAAAA;MAErB,IAAI,IAAI,CAACb,UAAU,EAAE;QACnB,IAAI,CAACW,qBAAqB,EAAA;MAC5B;IACF;EAAA;IAAA;IAAA,OAEAA,iCAAwB;MACrB,CAAA,CAAA,EAAGvB,UAAAA,CAAWT,OAAO,EAAE,IAAI,CAACqB,UAAU,EAAE,wCAAA,CAAA;MACzC,IAAIc,aAAAA,GAAiB,CAAA,CAAA,EAAG3B,eAAAA,CAAgBR,OAAO,EAAE,IAAI,CAAC2B,aAAa,CAAA;MAClE,CAAA,CAAA,EAAGlB,UAAAA,CAAWT,OAAO,EAAEmC,aAAAA,IAAiB,IAAI,EAAE,mDAAA,CAAA;MAE/C5B,qBAAAA,CAAsBP,OAAO,CAACoC,GAAG,CAACC,yBAAyB,CAAC,IAAI,CAACC,cAAc,EAAA,EAAIH,aAAAA,CAAAA;IACrF;EAAA;IAAA;IAAA,OAEAP,oCAA2B;MACxB,CAAA,CAAA,EAAGnB,UAAAA,CAAWT,OAAO,EAAE,IAAI,CAACqB,UAAU,EAAE,wCAAA,CAAA;MACzC,IAAIc,aAAAA,GAAiB,CAAA,CAAA,EAAG3B,eAAAA,CAAgBR,OAAO,EAAE,IAAI,CAAC2B,aAAa,CAAA;MAClE,CAAA,CAAA,EAAGlB,UAAAA,CAAWT,OAAO,EAAEmC,aAAAA,IAAiB,IAAI,EAAE,mDAAA,CAAA;MAE/C5B,qBAAAA,CAAsBP,OAAO,CAACoC,GAAG,CAACG,8BAA8B,CAAC,IAAI,CAACD,cAAc,EAAA,EAAIH,aAAAA,CAAAA;IAC1F;EAAA;IAAA;IAAA,OAEAK,kCAAyB;MAKvB,IAAI,IAAI,CAACnB,UAAU,EAAE;QACnBd,qBAAAA,CAAsBP,OAAO,CAACoC,GAAG,CAACK,oBAAoB,CAAC,IAAI,CAACH,cAAc,EAAA,CAAA;MAC5E;IACF;EAAA;IAAA;IAAA,OAEAI,6BAAoB;MAClB,IAAIC,WAAAA,GAAc,CAAC,CAAA;MAEnB,KAAK,IAAIC,OAAAA,IAAW,IAAI,CAAC7B,MAAM,EAAE;QAC/B,IAAIK,KAAAA,GAAQ,IAAI,CAACL,MAAM,CAAC6B,OAAAA,CAAQ;QAEhC,IAAIxB,KAAAA,YAAiBf,aAAAA,CAAcL,OAAO,EAAE;UAC1CoB,KAAAA,CAAMW,YAAY,EAAA;UAElBY,WAAW,CAACC,OAAAA,CAAQ,GAAGxB,KAAAA,CAAMkB,cAAc,EAAA;QAC7C;MACF;MAEA,OAAO;QACLO,IAAAA,EAAM,OAAA;QACNjC,KAAAA,EAAO+B;MACT,CAAA;IACF;EAAA;EAAA;AAAA,EA3J0BtC,aAAAA,CAAcL,OAAO;AA+JjD,IAAI8C,QAAAA,GAAWpC,aAAAA;AACfT,OAAAA,CAAQD,OAAO,GAAG8C,QAAAA;AAClBC,MAAAA,CAAO9C,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _AnimatedEvent = require(\"../AnimatedEvent\");\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedStyle = _interopRequireDefault(require(\"./AnimatedStyle\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../../exports/findNodeHandle\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nclass AnimatedProps extends _AnimatedNode.default {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {\n        style: new _AnimatedStyle.default(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof _AnimatedNode.default) {\n        if (!value.__isNative || value instanceof _AnimatedStyle.default) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof _AnimatedEvent.AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof _AnimatedNode.default) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof _AnimatedNode.default) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof _AnimatedNode.default) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode.default) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n    (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n    _NativeAnimatedHelper.default.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n    (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n    _NativeAnimatedHelper.default.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      _NativeAnimatedHelper.default.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof _AnimatedNode.default) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nvar _default = AnimatedProps;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}