{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/VidhiKataria/Documents/Projects/testing123/node_modules/next/dist/compiled/@babel/runtime/helpers/objectWithoutProperties.js\");\nvar _excluded = [\"children\", \"contain\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useFocusManager\", {\n  enumerable: true,\n  get: function get() {\n    return _focus.useFocusManager;\n  }\n});\nexports.FocusScope = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _focus = require(\"@react-aria/focus\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar FocusScope = function FocusScope(_ref) {\n  var children = _ref.children,\n    contain = _ref.contain,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return _react[\"default\"].createElement(_focus.FocusScope, _extends({\n    contain: contain\n  }, props), children);\n};\nexports.FocusScope = FocusScope;","map":{"version":3,"sources":["FocusScope.web.tsx"],"names":["FocusScope","children","contain","props"],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,UAAU,GAAG,SAAbA,UAAU,OAAyD;EAAA,IAAnDC,QAAF,QAAEA,QAAF;IAAYC,OAAZ,QAAYA,OAAZ;IAAwBC,KAAAA;EAI1C,OACE,MAAA,WAAA,CAAA,aAAA,CAAC,MAAA,CAAA,UAAD,EAAA,QAAA,CAAA;IAAgB,OAAO,EAAED;EAAzB,CAAA,EAAsCC,KAAtC,CAAA,EACGF,QADH,CADF;AAKD,CATD","sourcesContent":["import React from 'react';\nimport {\n  FocusScope as AriaFocusScope,\n  useFocusManager,\n} from '@react-aria/focus';\nimport type { FocusScopeProps } from './FocusScope';\nconst FocusScope = ({ children, contain, ...props }: FocusScopeProps) => {\n  /* Todo: stoping mounted and unMounted everytime contain is change */\n  // if (contain === false) return <></>;\n\n  return (\n    <AriaFocusScope contain={contain} {...props}>\n      {children}\n    </AriaFocusScope>\n  );\n};\n\nexport { FocusScope, useFocusManager };\n"]},"metadata":{},"sourceType":"script"}