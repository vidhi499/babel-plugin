{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nexports.__esModule = true;\nexports.default = void 0;\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar startNativeAnimationNextId = 1;\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n  _createClass(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        _NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error(\"This animation type cannot be offloaded to native\");\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value: function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n      startNativeAnimationNextId += 1;\n      _NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n      try {\n        animatedValue.__makeNative();\n        this.__nativeId = _NativeAnimatedHelper.default.generateNewAnimationId();\n        _NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n      } catch (e) {\n        throw e;\n      } finally {\n        _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar _default = Animation;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/animations/Animation.js"],"names":["_interopRequireDefault","require","default","exports","__esModule","_NativeAnimatedHelper","startNativeAnimationNextId","Animation","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind","e","unsetWaitingForIdentifier","_default","module"],"mappings":"AASA,YAAA;;AAAA;AAAA;AAEA,IAAIA,sBAAAA,GAAyBC,OAAAA,CAAQ,8CAAA,CAAA,CAAgDC,OAAO;AAE5FC,OAAAA,CAAQC,UAAU,GAAG,IAAI;AACzBD,OAAAA,CAAQD,OAAO,GAAG,KAAK,CAAA;AAEvB,IAAIG,qBAAAA,GAAwBL,sBAAAA,CAAuBC,OAAAA,2BAAQ,CAAA;AAE3D,IAAIK,0BAAAA,GAA6B,CAAA;AAAA,IAI3BC,SAAAA;EAAAA;IAAAA;EAAAA;EAAAA;IAAAA;IAAAA,OACJC,eAAMC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,EAAE,CAAC;EAAA;IAAA;IAAA,OAErEC,gBAAO;MACL,IAAI,IAAI,CAACC,UAAU,EAAE;QACnBV,qBAAAA,CAAsBH,OAAO,CAACc,GAAG,CAACC,aAAa,CAAC,IAAI,CAACF,UAAU,CAAA;MACjE;IACF;EAAA;IAAA;IAAA,OAEAG,sCAA6B;MAG3B,MAAM,IAAIC,KAAAA,CAAM,mDAAA,CAAA;IAClB;EAAA;IAAA;IAAA,OAGAC,0BAAiBC,MAAM,EAAE;MACvB,IAAIV,KAAAA,GAAQ,IAAI,CAACW,OAAO;MACxB,IAAI,CAACA,OAAO,GAAG,IAAI;MACnBX,KAAAA,IAASA,KAAAA,CAAMU,MAAAA,CAAAA;IACjB;EAAA;IAAA;IAAA,OAEAE,gCAAuBV,aAAa,EAAE;MACpC,IAAIW,0BAAAA,GAA6BlB,0BAAAA,GAA6B,iBAAA;MAC9DA,0BAAAA,IAA8B,CAAA;MAE9BD,qBAAAA,CAAsBH,OAAO,CAACc,GAAG,CAACS,uBAAuB,CAACD,0BAAAA,CAAAA;MAE1D,IAAI;QACFX,aAAAA,CAAca,YAAY,EAAA;QAE1B,IAAI,CAACX,UAAU,GAAGV,qBAAAA,CAAsBH,OAAO,CAACyB,sBAAsB,EAAA;QAEtEtB,qBAAAA,CAAsBH,OAAO,CAACc,GAAG,CAACY,kBAAkB,CAAC,IAAI,CAACb,UAAU,EAAEF,aAAAA,CAAcgB,cAAc,EAAA,EAAI,IAAI,CAACX,0BAA0B,EAAA,EAAI,IAAI,CAACE,gBAAgB,CAACU,IAAI,CAAC,IAAI,CAAA,CAAA;MAC1K,CAAA,CAAE,OAAOC,CAAAA,EAAG;QACV,MAAMA,CAAAA;MACR,CAAA,SAAU;QACR1B,qBAAAA,CAAsBH,OAAO,CAACc,GAAG,CAACgB,yBAAyB,CAACR,0BAAAA,CAAAA;MAC9D;IACF;EAAA;EAAA;AAAA;AAIF,IAAIS,QAAAA,GAAW1B,SAAAA;AACfJ,OAAAA,CAAQD,OAAO,GAAG+B,QAAAA;AAClBC,MAAAA,CAAO/B,OAAO,GAAGA,OAAAA,CAAQD,OAAO","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nclass Animation {\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n\n  stop() {\n    if (this.__nativeId) {\n      _NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n\n\n  __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n\n    _NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = _NativeAnimatedHelper.default.generateNewAnimationId();\n\n      _NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  }\n\n}\n\nvar _default = Animation;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}