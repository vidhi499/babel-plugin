{"ast":null,"code":"import * as React from 'react';\nimport View from \"../View\";\nimport createElement from \"../createElement\";\nimport StyleSheet from \"../StyleSheet\";\nimport UIManager from \"../UIManager\";\nimport canUseDOM from \"../../modules/canUseDom\";\nvar FocusBracket = function FocusBracket() {\n  return createElement('div', {\n    accessibilityRole: 'none',\n    tabIndex: 0,\n    style: styles.focusBracket\n  });\n};\nfunction attemptFocus(element) {\n  if (!canUseDOM) {\n    return false;\n  }\n  try {\n    element.focus();\n  } catch (e) {}\n  return document.activeElement === element;\n}\nfunction focusFirstDescendant(element) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction focusLastDescendant(element) {\n  for (var i = element.childNodes.length - 1; i >= 0; i--) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || focusLastDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar ModalFocusTrap = function ModalFocusTrap(_ref) {\n  var active = _ref.active,\n    children = _ref.children;\n  var trapElementRef = React.useRef();\n  var focusRef = React.useRef({\n    trapFocusInProgress: false,\n    lastFocusedElement: null\n  });\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var trapFocus = function trapFocus() {\n        if (trapElementRef.current == null || focusRef.current.trapFocusInProgress || !active) {\n          return;\n        }\n        try {\n          focusRef.current.trapFocusInProgress = true;\n          if (document.activeElement instanceof Node && !trapElementRef.current.contains(document.activeElement)) {\n            var hasFocused = focusFirstDescendant(trapElementRef.current);\n            if (focusRef.current.lastFocusedElement === document.activeElement) {\n              hasFocused = focusLastDescendant(trapElementRef.current);\n            }\n            if (!hasFocused && trapElementRef.current != null && document.activeElement) {\n              UIManager.focus(trapElementRef.current);\n            }\n          }\n        } finally {\n          focusRef.current.trapFocusInProgress = false;\n        }\n        focusRef.current.lastFocusedElement = document.activeElement;\n      };\n      trapFocus();\n      document.addEventListener('focus', trapFocus, true);\n      return function () {\n        return document.removeEventListener('focus', trapFocus, true);\n      };\n    }\n  }, [active]);\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var lastFocusedElementOutsideTrap = document.activeElement;\n      return function () {\n        if (lastFocusedElementOutsideTrap && document.contains(lastFocusedElementOutsideTrap)) {\n          UIManager.focus(lastFocusedElementOutsideTrap);\n        }\n      };\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(FocusBracket, null), React.createElement(View, {\n    ref: trapElementRef\n  }, children), React.createElement(FocusBracket, null));\n};\nexport default ModalFocusTrap;\nvar styles = StyleSheet.create({\n  focusBracket: {\n    outlineStyle: 'none'\n  }\n});","map":{"version":3,"sources":["/Users/VidhiKataria/Documents/Projects/testing123/node_modules/react-native-web/dist/exports/Modal/ModalFocusTrap.js"],"names":["React","View","createElement","StyleSheet","UIManager","canUseDOM","FocusBracket","accessibilityRole","tabIndex","style","styles","focusBracket","attemptFocus","element","focus","e","document","activeElement","focusFirstDescendant","i","childNodes","length","child","focusLastDescendant","ModalFocusTrap","active","_ref","children","trapElementRef","useRef","focusRef","trapFocusInProgress","lastFocusedElement","useEffect","trapFocus","current","Node","contains","hasFocused","addEventListener","removeEventListener","lastFocusedElementOutsideTrap","Fragment","ref","create","outlineStyle"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport View from '../View';\nimport createElement from '../createElement';\nimport StyleSheet from '../StyleSheet';\nimport UIManager from '../UIManager';\nimport canUseDOM from '../../modules/canUseDom';\n/**\n * This Component is used to \"wrap\" the modal we're opening\n * so that changing focus via tab will never leave the document.\n *\n * This allows us to properly trap the focus within a modal\n * even if the modal is at the start or end of a document.\n */\n\nvar FocusBracket = () => {\n  return createElement('div', {\n    accessibilityRole: 'none',\n    tabIndex: 0,\n    style: styles.focusBracket\n  });\n};\n\nfunction attemptFocus(element) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  try {\n    element.focus();\n  } catch (e) {// Do nothing\n  }\n\n  return document.activeElement === element;\n}\n\nfunction focusFirstDescendant(element) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction focusLastDescendant(element) {\n  for (var i = element.childNodes.length - 1; i >= 0; i--) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusLastDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar ModalFocusTrap = _ref => {\n  var active = _ref.active,\n      children = _ref.children;\n  var trapElementRef = React.useRef();\n  var focusRef = React.useRef({\n    trapFocusInProgress: false,\n    lastFocusedElement: null\n  });\n  React.useEffect(() => {\n    if (canUseDOM) {\n      var trapFocus = () => {\n        // We should not trap focus if:\n        // - The modal hasn't fully initialized with an HTMLElement ref\n        // - Focus is already in the process of being trapped (e.g., we're refocusing)\n        // - isTrapActive prop being falsey tells us to do nothing\n        if (trapElementRef.current == null || focusRef.current.trapFocusInProgress || !active) {\n          return;\n        }\n\n        try {\n          focusRef.current.trapFocusInProgress = true;\n\n          if (document.activeElement instanceof Node && !trapElementRef.current.contains(document.activeElement)) {\n            // To handle keyboard focusing we can make an assumption here.\n            // If you're tabbing through the focusable elements, the previously\n            // active element will either be the first or the last.\n            // If the previously selected element is the \"first\" descendant\n            // and we're leaving it - this means that we should be looping\n            // around to the other side of the modal.\n            var hasFocused = focusFirstDescendant(trapElementRef.current);\n\n            if (focusRef.current.lastFocusedElement === document.activeElement) {\n              hasFocused = focusLastDescendant(trapElementRef.current);\n            } // If we couldn't focus a new element then we need to focus onto the trap target\n\n\n            if (!hasFocused && trapElementRef.current != null && document.activeElement) {\n              UIManager.focus(trapElementRef.current);\n            }\n          }\n        } finally {\n          focusRef.current.trapFocusInProgress = false;\n        }\n\n        focusRef.current.lastFocusedElement = document.activeElement;\n      }; // Call the trapFocus callback at least once when this modal has been activated.\n\n\n      trapFocus();\n      document.addEventListener('focus', trapFocus, true);\n      return () => document.removeEventListener('focus', trapFocus, true);\n    }\n  }, [active]); // To be fully compliant with WCAG we need to refocus element that triggered opening modal\n  // after closing it\n\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var lastFocusedElementOutsideTrap = document.activeElement;\n      return function () {\n        if (lastFocusedElementOutsideTrap && document.contains(lastFocusedElementOutsideTrap)) {\n          UIManager.focus(lastFocusedElementOutsideTrap);\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FocusBracket, null), /*#__PURE__*/React.createElement(View, {\n    ref: trapElementRef\n  }, children), /*#__PURE__*/React.createElement(FocusBracket, null));\n};\n\nexport default ModalFocusTrap;\nvar styles = StyleSheet.create({\n  focusBracket: {\n    outlineStyle: 'none'\n  }\n});"]},"metadata":{},"sourceType":"module"}